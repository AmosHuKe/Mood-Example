//{"version":"3.98","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var Tp=Object.defineProperty;var Pp=Object.getOwnPropertySymbols;var EI=Object.prototype.hasOwnProperty,yI=Object.prototype.propertyIsEnumerable;var Ip=(f,s,p)=>s in f?Tp(f,s,{enumerable:!0,configurable:!0,writable:!0,value:p}):f[s]=p,Np=(f,s)=>{for(var p in s||(s={}))EI.call(s,p)&&Ip(f,p,s[p]);if(Pp)for(var p of Pp(s))yI.call(s,p)&&Ip(f,p,s[p]);return f};var SI=(f,s)=>{for(var p in s)Tp(f,p,{get:s[p],enumerable:!0})};var Ta=Object.freeze;function dc({getCurrentPages:f,uni:s,UniShared:p,Vue:w,VueShared:N}){var S=function(h,E,x,Ve){"use strict";function Nt(){let We=f(),nt=We.length;if(nt)return We[nt-1]}function zt(){let We=Nt();if(We)return We.$vm}function Tt(We,nt,Ot){if(x.isString(We))Ot=nt,nt=We,We=zt();else if(typeof We=="number"){let On=f().find(on=>on.$page.id===We);On?We=On.$vm:We=zt()}if(!We)return;if(We.__call_hook)return We.__call_hook(nt,Ot);let Xt=We.$[nt];return Xt&&E.invokeArrayFns(Xt,Ot)}function I(We,nt,Ot,Xt){x.isFunction(nt)&&Ve.injectHook(We,nt.bind(Ot),Xt)}function St(We,nt,Ot){var Xt;let On=We.mpType||Ot.$mpType;if(!(!On||On==="component")&&(Object.keys(We).forEach(on=>{if(E.isUniLifecycleHook(on,We[on],!1)){let or=We[on];x.isArray(or)?or.forEach(Wn=>I(on,Wn,Ot,nt)):I(on,or,Ot,nt)}}),On==="page")){nt.__isVisible=!0;try{Tt(Ot,E.ON_LOAD,nt.attrs.__pageQuery),delete nt.attrs.__pageQuery,((Xt=Ot.$page)===null||Xt===void 0?void 0:Xt.openType)!=="preloadPage"&&Tt(Ot,E.ON_SHOW)}catch(on){console.error(on.message+E.LINEFEED+on.stack)}}}function In(We,nt){at(nt,We.$renderjs,We["$"+E.RENDERJS_MODULES])}function at(We,nt,Ot={}){if(!x.isArray(nt))return;let Xt=We.uid,On=We.$wxsModules||(We.$wxsModules=[]),on=We.ctx;nt.forEach(or=>{Ot[or]&&(on[or]=z(Xt,Ot[or],or),On.push(or))})}function z(We,nt,Ot){let Xt={};return new Proxy(Xt,{get(On,on){return Xt[on]||(Xt[on]=J(We,nt,Ot,on))}})}function J(We,nt,Ot,Xt){let On=()=>{},on=()=>E.WXS_PROTOCOL+JSON.stringify([We,nt,Ot+"."+Xt]);return new Proxy(On,{get(or,Wn){return Wn==="toJSON"?on:On[Wn]||(On[Wn]=J(We,nt,Ot+"."+Xt,Wn))},apply(or,Wn,Cn){return E.WXS_PROTOCOL+JSON.stringify([We,nt,Ot+"."+Xt,[...Cn]])}})}function dn(We,nt){at(nt,We.$wxs,We["$"+E.WXS_MODULES])}function cn(We,nt,Ot){dn(We,nt),In(We,nt),St(We,nt,Ot)}function bn(We,nt,Ot){return We[nt]=Ot}function Jn(We,...nt){let Ot=this[We];return Ot?Ot(...nt):(console.error(`method ${We} not found`),null)}function gi(We){return function(Ot,Xt,On){if(!Xt)throw Ot;let on=We._instance;if(!on||!on.proxy)throw Ot;Tt(on.proxy,E.ON_ERROR,Ot)}}function pi(We,nt){return We?[...new Set([].concat(We,nt))]:nt}function qr(We){E.UniLifecycleHooks.forEach(nt=>{We[nt]=pi})}let gr,Sn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",pr=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?gr=function(We){if(We=String(We).replace(/[\t\n\f\r ]+/g,""),!pr.test(We))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");We+="==".slice(2-(We.length&3));for(var nt,Ot="",Xt,On,on=0;on<We.length;)nt=Sn.indexOf(We.charAt(on++))<<18|Sn.indexOf(We.charAt(on++))<<12|(Xt=Sn.indexOf(We.charAt(on++)))<<6|(On=Sn.indexOf(We.charAt(on++))),Ot+=Xt===64?String.fromCharCode(nt>>16&255):On===64?String.fromCharCode(nt>>16&255,nt>>8&255):String.fromCharCode(nt>>16&255,nt>>8&255,nt&255);return Ot}:gr=atob;function Dr(We){return decodeURIComponent(gr(We).split("").map(function(nt){return"%"+("00"+nt.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function Jr(){let We=s.getStorageSync("uni_id_token")||"",nt=We.split(".");if(!We||nt.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let Ot;try{Ot=JSON.parse(Dr(nt[1]))}catch(Xt){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+Xt.message)}return Ot.tokenExpired=Ot.exp*1e3,delete Ot.exp,delete Ot.iat,Ot}function vi(We){We.uniIDHasRole=function(nt){let{role:Ot}=Jr();return Ot.indexOf(nt)>-1},We.uniIDHasPermission=function(nt){let{permission:Ot}=Jr();return this.uniIDHasRole("admin")||Ot.indexOf(nt)>-1},We.uniIDTokenValid=function(){let{tokenExpired:nt}=Jr();return nt>Date.now()}}function Pn(We){let nt=We._context.config;nt.errorHandler=E.invokeCreateErrorHandler(We,gi),qr(nt.optionMergeStrategies);let Ot=nt.globalProperties;vi(Ot),Ot.$set=bn,Ot.$applyOptions=cn,Ot.$callMethod=Jn,E.invokeCreateVueAppHook(We)}return h.initApp=Pn,Object.defineProperty(h,"__esModule",{value:!0}),h}({},p,N,w);return S}function eu(f,{nvue:s,UniShared:p,VueShared:w,VueReactivity:N}){let S={platform:s.config.env.platform,UniShared:p,VueShared:w,VueReactivity:N};return f(S,s.document)}function wI({setTimeout:f,clearTimeout:s,uni:p,getCurrentPages:w,Vue:N,weex:S,plus:h,BroadcastChannel:E,UniViewJSBridge:x,VueShared:Ve,UniShared:Nt,__uniConfig:zt}){var Tt=function(I,St,In){"use strict";let at=["navigate","redirect","switchTab","reLaunch","navigateBack"],z=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],J=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],dn={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(m){return Boolean(~at.indexOf(m))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1},animationType:{type:String,default:"",validator(m){return!m||z.concat(J).includes(m)}},animationDuration:{type:[String,Number],default:300}};function cn(m){return()=>{if(m.openType!=="navigateBack"&&!m.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}let R=parseInt(m.animationDuration);switch(m.openType){case"navigate":p.navigateTo({url:m.url,animationType:m.animationType||"pop-in",animationDuration:R});break;case"redirect":p.redirectTo({url:m.url,exists:m.exists});break;case"switchTab":p.switchTab({url:m.url});break;case"reLaunch":p.reLaunch({url:m.url});break;case"navigateBack":p.navigateBack({delta:m.delta,animationType:m.animationType||"pop-out",animationDuration:R});break}}}function bn(m){if(m.hoverClass&&m.hoverClass!=="none"){let R={hoverClass:m.hoverClass};return St.hasOwn(m,"hoverStartTime")&&(R.hoverStartTime=m.hoverStartTime),St.hasOwn(m,"hoverStayTime")&&(R.hoverStayTime=m.hoverStayTime),St.hasOwn(m,"hoverStopPropagation")&&(R.hoverStopPropagation=m.hoverStopPropagation),R}return{}}function Jn(m,R){return I.createElementVNode("u-text",St.extend({appendAsTree:!0},R),m)}let gi=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}],pi=I.defineComponent({name:"Navigator",props:dn,styles:gi,setup(m,{slots:R}){let $=cn(m);return()=>I.createVNode("view",I.mergeProps(bn(m),{onClick:$}),[R.default&&R.default()])}});function qr(m){return Symbol(m)}function gr(){let m;try{m=I.getCurrentInstance().root.proxy.$page.id}catch(R){let $=h.webview.currentWebview().id;m=isNaN(Number($))?$:Number($)}return m}let Sn,pr,Dr;function Jr(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function vi(){return Sn.webview.currentWebview().id}let Pn,We,nt={};function Ot(m){let R=m.data&&m.data.__message;if(!R||!R.__page)return;let $=R.__page,U=nt[$];U&&U(R),R.keep||delete nt[$]}function Xt(m,R){Jr()==="v8"?Dr?(Pn&&Pn.close(),Pn=new Dr(vi()),Pn.onmessage=Ot):We||(We=pr.requireModule("globalEvent"),We.addEventListener("plusMessage",Ot)):window.__plusMessage=Ot,nt[m]=R}class On{constructor(R){this.webview=R}sendMessage(R){let $=JSON.parse(JSON.stringify({__message:{data:R}})),U=this.webview.id;Dr?new Dr(U).postMessage($):Sn.webview.postMessageToUniNView&&Sn.webview.postMessageToUniNView($,U)}close(){this.webview.close()}}function on({context:m={},url:R,data:$={},style:U={},onMessage:Z,onClose:q}){let te=zt.darkmode;Sn=m.plus||h,pr=m.weex||(typeof S=="object"?S:null),Dr=m.BroadcastChannel||(typeof E=="object"?E:null);let ce={autoBackButton:!0,titleSize:"17px"},pe=`page${Date.now()}`;U=St.extend({},U),U.titleNView!==!1&&U.titleNView!=="none"&&(U.titleNView=St.extend(ce,U.titleNView));let Ie={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${R}.js`,defaultFontSize:16,viewport:Sn.screen.resolutionWidth}};U=St.extend(Ie,U);let fe=Sn.webview.create("",pe,U,{extras:{from:vi(),runtime:Jr(),data:St.extend({},$,{darkmode:te}),useGlobalEvent:!Dr}});return fe.addEventListener("close",q),Xt(pe,we=>{St.isFunction(Z)&&Z(we.data),we.keep||fe.close("auto")}),fe.show(U.animationType,U.animationDuration),new On(fe)}let or={for:{type:String,default:""}},Wn=qr("ul");function Cn(){let m=[];return I.provide(Wn,{addHandler(R){m.push(R)},removeHandler(R){m.splice(m.indexOf(R),1)}}),m}let hn=I.defineComponent({name:"Label",props:or,styles:[],setup(m,{slots:R}){let $=gr(),U=Cn(),Z=q=>{m.for?x.emit(`uni-label-click-${$}-${m.for}`,q,!0):U.length&&U[0](q,!0)};return()=>I.createVNode("view",{onClick:Z},[R.default&&R.default()])}});function wr(m,R){Kr(m.id,R),I.watch(()=>m.id,($,U)=>{Co(U,R,!0),Kr($,R,!0)}),I.onUnmounted(()=>{Co(m.id,R)})}function Kr(m,R,$){let U=gr();$&&!m||!St.isPlainObject(R)||Object.keys(R).forEach(Z=>{$?Z.indexOf("@")!==0&&Z.indexOf("uni-")!==0&&x.on(`uni-${Z}-${U}-${m}`,R[Z]):Z.indexOf("uni-")===0?x.on(Z,R[Z]):m&&x.on(`uni-${Z}-${U}-${m}`,R[Z])})}function Co(m,R,$){let U=gr();$&&!m||!St.isPlainObject(R)||Object.keys(R).forEach(Z=>{$?Z.indexOf("@")!==0&&Z.indexOf("uni-")!==0&&x.off(`uni-${Z}-${U}-${m}`,R[Z]):Z.indexOf("uni-")===0?x.off(Z,R[Z]):m&&x.off(`uni-${Z}-${U}-${m}`,R[Z])})}function ua(m){return Object.keys(m).map(R=>[R,m[R]])}let Ui=["class","style"],Jo=/^on[A-Z]+/,Ko=(m={})=>{let{excludeListeners:R=!1,excludeKeys:$=[]}=m,U=I.getCurrentInstance(),Z=I.shallowRef({}),q=I.shallowRef({}),te=I.shallowRef({}),ce=$.concat(Ui);return U.attrs=I.reactive(U.attrs),I.watchEffect(()=>{let pe=ua(U.attrs).reduce((Ie,[fe,we])=>(ce.includes(fe)?Ie.exclude[fe]=we:Jo.test(fe)?(R||(Ie.attrs[fe]=we),Ie.listeners[fe]=we):Ie.attrs[fe]=we,Ie),{exclude:{},attrs:{},listeners:{}});Z.value=pe.attrs,q.value=pe.listeners,te.value=pe.exclude}),{$attrs:Z,$listeners:q,$excludeAttrs:te}},$i={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},ri=qr("uf"),Ao=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],Oo={default:"d",primary:"p",warn:"w"},To=I.defineComponent({inheritAttrs:!1,name:"Button",props:St.extend($i,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:Ao,setup(m,{slots:R,attrs:$}){let{$attrs:U,$excludeAttrs:Z,$listeners:q}=Ko({excludeListeners:!0}),te=m.type,ce=I.ref(null),pe=I.inject(ri,!1),Ie=(Et,je)=>{let Mt=q.value.onClick||(()=>{});if(m.disabled)return;Mt(Et);let fn=m.formType;if(fn){if(!pe)return;fn==="submit"?pe.submit(Et):fn==="reset"&&pe.reset(Et)}},fe=Et=>{let je="ub-"+Oo[te]+Et;return m.disabled&&(je+="-d"),m.plain&&(je+="-plain"),m.size==="mini"&&Et==="-t"&&(je+=" ub-mini"),je},we=Et=>{if(m.disabled)return"";let je="ub-"+Oo[te]+Et+"-hover";return m.plain&&(je+="-plain"),je},ut=I.inject(Wn,!1);ut&&(ut.addHandler(Ie),I.onBeforeUnmount(()=>{ut.removeHandler(Ie)})),wr(m,{"label-click":Ie});let pt=I.computed(()=>{let Et={};for(let je in q.value){let Mt=q.value[je];je!=="onClick"&&(Et[je]=Mt)}return Et}),$t=()=>{if(!R.default)return[];let Et=R.default();return Et.length===1&&Et[0].type===I.Text?[Jn(Et[0].children,{class:"ub-t "+fe("-t")})]:Et};return()=>{let Et=St.extend({},bn(m),{hoverClass:we("")},U.value,Z.value,pt.value);return I.createVNode("view",I.mergeProps({ref:ce,class:["ub",fe("")],onClick:Ie},Et),[m.loading?I.createVNode("loading-indicator",I.mergeProps({class:["ub-loading",`ub-${Oo[te]}-loading`]},{arrow:"false",animating:"true"}),null):null,...$t()])}}}),Xi={scaleArea:{type:Boolean,default:!1}};function mi(m){let R=[];return St.isArray(m)&&m.forEach($=>{I.isVNode($)?$.type===I.Fragment?R.push(...mi($.children)):R.push($):St.isArray($)&&R.push(...mi($))}),R}function Po(m){let R=Object.create(null);return function(U){return R[U]||(R[U]=m(U))}}let uo=Po(function(m){let R={},$=/;(?![^(]*\))/g,U=/:(.+)/;return m.split($).forEach(function(Z){if(Z){let q=Z.split(U);q.length>1&&(R[q[0].trim()]=q[1].trim())}}),R}),kn=m=>new Promise((R,$)=>{if(!m)return R({width:0,height:0,top:0,left:0});S.requireModule("dom").getComponentRect(m,({size:Z})=>{R(Z)})}),Cr=I.defineComponent({name:"MovableArea",props:Xi,styles:[{"uni-movable-area":{"":{overflow:"hidden",width:"10px",height:"10px"}}}],setup(m,{slots:R}){let $=I.ref(0),U=I.ref(0),Z=I.ref(0),q=I.ref(0),te=I.ref(!1),ce=I.ref(null),pe=[],Ie=null,fe=je=>{Ie=je},we=()=>kn(ce.value).then(({width:je,height:Mt,top:fn,left:Gt})=>{$.value=je,U.value=Mt,Z.value=fn,q.value=Gt}),ut=()=>{we().then(()=>{pe.forEach(function(je){je.setParent()})})};I.onMounted(()=>{f(()=>{te.value=!0,ut()},200)});let pt={onPanstart(je){Ie&&Ie.touchstart(je)},onPanmove(je){je.stopPropagation(),Ie&&Ie.touchmove(je)},onPanend(je){Ie&&Ie.touchend(je),Ie=null}},$t=je=>{pe.push(je)},Et=je=>{let Mt=pe.indexOf(je);Mt>=0&&pe.splice(Mt,1)};return I.provide("_isMounted",te),I.provide("parentSize",{width:$,height:U,top:Z,left:q}),I.provide("addMovableViewContext",$t),I.provide("removeMovableViewContext",Et),I.provide("setTouchMovableViewContext",fe),()=>{let je=R.default&&R.default(),Mt=mi(je);return I.createVNode("view",I.mergeProps({ref:ce,class:"uni-movable-area"},pt),[Mt])}}});function Qi(m){let R={};function $(fe,we){R[fe]&&R[fe](we)}function U(fe,we){R[fe]=function(ut){St.isFunction(we)&&(ut.touches=ut.changedTouches,we(ut)===!1&&ut.stopPropagation())}}let Z=0,q=0,te=0,ce=0,pe=function(fe,we,ut,pt){if(m({target:fe.target,currentTarget:fe.currentTarget,stopPropagation:fe.stopPropagation.bind(fe),touches:fe.touches,changedTouches:fe.changedTouches,detail:{state:we,x:ut,y:pt,dx:ut-Z,dy:pt-q,ddx:ut-te,ddy:pt-ce,timeStamp:fe.timeStamp||Date.now()}})===!1)return!1},Ie=null;return U("touchstart",function(fe){if(!Ie)return Ie=fe,Z=te=fe.touches[0].pageX,q=ce=fe.touches[0].pageY,pe(fe,"start",Z,q)}),U("touchmove",function(fe){if(Ie){let we=pe(fe,"move",fe.touches[0].pageX,fe.touches[0].pageY);return te=fe.touches[0].pageX,ce=fe.touches[0].pageY,we}}),U("touchend",function(fe){if(Ie)return Ie=null,pe(fe,"end",fe.changedTouches[0].pageX,fe.changedTouches[0].pageY)}),{touchstart:function(fe){$("touchstart",fe)},touchmove:function(fe){$("touchmove",fe)},touchend:function(fe){$("touchend",fe)}}}function Kn(m,R){return($,U)=>{m.value&&R($,eo($,m.value,U||{}))}}function eo(m,R,$={}){return R=fo(R),{type:m,timeStamp:Date.now(),target:R,currentTarget:R,detail:$}}let Io=In.cacheStringFunction(m=>m.charAt(0).toLowerCase()+m.slice(1));function fo(m){let{offsetLeft:R,offsetTop:$}=m,U=m.attr,Z={};return Object.keys(U||{}).forEach(q=>{q.indexOf("data")===0&&(Z[Io(q.replace("data",""))]=U[q])}),{id:U&&U.id||"",dataset:Z,offsetLeft:R||0,offsetTop:$||0}}function ii(m,R,$){return m>R-$&&m<R+$}function ar(m,R){return ii(m,0,R)}function kr(){}kr.prototype.x=function(m){return Math.sqrt(m)};function Nn(m,R){this._m=m,this._f=1e3*R,this._startTime=0,this._v=0}Nn.prototype.setV=function(m,R){let $=Math.pow(Math.pow(m,2)+Math.pow(R,2),.5);this._x_v=m,this._y_v=R,this._x_a=-this._f*this._x_v/$,this._y_a=-this._f*this._y_v/$,this._t=Math.abs(m/this._x_a)||Math.abs(R/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},Nn.prototype.setS=function(m,R){this._x_s=m,this._y_s=R},Nn.prototype.s=function(m){m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),m>this._t&&(m=this._t,this._lastDt=m);let R=this._x_v*m+.5*this._x_a*Math.pow(m,2)+this._x_s,$=this._y_v*m+.5*this._y_a*Math.pow(m,2)+this._y_s;return(this._x_a>0&&R<this._endPositionX||this._x_a<0&&R>this._endPositionX)&&(R=this._endPositionX),(this._y_a>0&&$<this._endPositionY||this._y_a<0&&$>this._endPositionY)&&($=this._endPositionY),{x:R,y:$}},Nn.prototype.ds=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),m>this._t&&(m=this._t),{dx:this._x_v+this._x_a*m,dy:this._y_v+this._y_a*m}},Nn.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Nn.prototype.dt=function(){return-this._x_v/this._x_a},Nn.prototype.done=function(){let m=ii(this.s().x,this._endPositionX)||ii(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,m},Nn.prototype.setEnd=function(m,R){this._endPositionX=m,this._endPositionY=R},Nn.prototype.reconfigure=function(m,R){this._m=m,this._f=1e3*R};function Zn(m,R,$){this._m=m,this._k=R,this._c=$,this._solution=null,this._endPosition=0,this._startTime=0}Zn.prototype._solve=function(m,R){let $=this._c,U=this._m,Z=this._k,q=$*$-4*U*Z;if(q===0){let fe=-$/(2*U),we=m,ut=R/(fe*m);return{x:function(pt){return(we+ut*pt)*Math.pow(Math.E,fe*pt)},dx:function(pt){let $t=Math.pow(Math.E,fe*pt);return fe*(we+ut*pt)*$t+ut*$t}}}if(q>0){let fe=(-$-Math.sqrt(q))/(2*U),we=(-$+Math.sqrt(q))/(2*U),ut=(R-fe*m)/(we-fe),pt=m-ut;return{x:function($t){let Et,je;return $t===this._t&&(Et=this._powER1T,je=this._powER2T),this._t=$t,Et||(Et=this._powER1T=Math.pow(Math.E,fe*$t)),je||(je=this._powER2T=Math.pow(Math.E,we*$t)),pt*Et+ut*je},dx:function($t){let Et,je;return $t===this._t&&(Et=this._powER1T,je=this._powER2T),this._t=$t,Et||(Et=this._powER1T=Math.pow(Math.E,fe*$t)),je||(je=this._powER2T=Math.pow(Math.E,we*$t)),pt*fe*Et+ut*we*je}}}let te=Math.sqrt(4*U*Z-$*$)/(2*U),ce=-$/2*U,pe=m,Ie=(R-ce*m)/te;return{x:function(fe){return Math.pow(Math.E,ce*fe)*(pe*Math.cos(te*fe)+Ie*Math.sin(te*fe))},dx:function(fe){let we=Math.pow(Math.E,ce*fe),ut=Math.cos(te*fe),pt=Math.sin(te*fe);return we*(Ie*te*ut-pe*te*pt)+ce*we*(Ie*pt+pe*ut)}}},Zn.prototype.x=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(m):0},Zn.prototype.dx=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(m):0},Zn.prototype.setEnd=function(m,R,$){if($||($=new Date().getTime()),m!==this._endPosition||!ar(R,.1)){R=R||0;let U=this._endPosition;this._solution&&(ar(R,.1)&&(R=this._solution.dx(($-this._startTime)/1e3)),U=this._solution.x(($-this._startTime)/1e3),ar(R,.1)&&(R=0),ar(U,.1)&&(U=0),U+=this._endPosition),this._solution&&ar(U-m,.1)&&ar(R,.1)||(this._endPosition=m,this._solution=this._solve(U-this._endPosition,R),this._startTime=$)}},Zn.prototype.snap=function(m){this._startTime=new Date().getTime(),this._endPosition=m,this._solution={x:function(){return 0},dx:function(){return 0}}},Zn.prototype.done=function(m){return m||(m=new Date().getTime()),ii(this.x(),this._endPosition,.1)&&ar(this.dx(),.1)},Zn.prototype.reconfigure=function(m,R,$){this._m=m,this._k=R,this._c=$,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},Zn.prototype.springConstant=function(){return this._k},Zn.prototype.damping=function(){return this._c},Zn.prototype.configuration=function(){function m($,U){$.reconfigure(1,U,$.damping())}function R($,U){$.reconfigure(1,$.springConstant(),U)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:m.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:R.bind(this,this),min:1,max:500}]};function Ni(m,R,$){this._springX=new Zn(m,R,$),this._springY=new Zn(m,R,$),this._springScale=new Zn(m,R,$),this._startTime=0}Ni.prototype.setEnd=function(m,R,$,U){let Z=new Date().getTime();this._springX.setEnd(m,U,Z),this._springY.setEnd(R,U,Z),this._springScale.setEnd($,U,Z),this._startTime=Z},Ni.prototype.x=function(){let m=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(m),y:this._springY.x(m),scale:this._springScale.x(m)}},Ni.prototype.done=function(){let m=new Date().getTime();return this._springX.done(m)&&this._springY.done(m)&&this._springScale.done(m)},Ni.prototype.reconfigure=function(m,R,$){this._springX.reconfigure(m,R,$),this._springY.reconfigure(m,R,$),this._springScale.reconfigure(m,R,$)};let Hi={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function oi(m,R){return+((1e3*m-1e3*R)/1e3).toFixed(1)}function Fr(m,R,$){let U={id:0,cancelled:!1},Z=function(te){te&&te.id&&Vr(te.id),te&&(te.cancelled=!0)};function q(te,ce,pe,Ie){if(!te||!te.cancelled){pe(ce);let fe=ce.done();fe||te.cancelled||(te.id=No(q.bind(null,te,ce,pe,Ie))),fe&&Ie&&Ie(ce)}}return q(U,m,R,$),{cancel:Z.bind(null,U),model:m}}let vr=!1;function ki(m){vr||(vr=!0,No(function(){m(),vr=!1}))}function No(m){return f(m,16)}function Vr(m){s(m)}let Zr=S.requireModule("animation"),Ar=I.defineComponent({name:"MovableView",props:Hi,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(m,{emit:R,slots:$}){let U=I.ref(null),Z=Kn(U,R),q=I.inject("setTouchMovableViewContext",()=>{}),te=gn(m,Z,U,q);return()=>{let ce={preventGesture:!0};return I.createVNode("view",I.mergeProps({ref:U,onTouchstart:te,class:"uni-movable-view",style:"transform-origin: center;"},ce),[$.default&&$.default()])}}});function gn(m,R,$,U){let Z=I.inject("_isMounted",I.ref(!1)),q=I.inject("parentSize",{width:I.ref(0),height:I.ref(0),top:I.ref(0),left:I.ref(0)}),te=I.inject("addMovableViewContext",()=>{}),ce=I.inject("removeMovableViewContext",()=>{}),pe={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function Ie(Be){return Number(Be)||0}function fe(Be){return Be=Number(Be),isNaN(Be)?1:Be}let we=I.ref(Ie(m.x)),ut=I.ref(Ie(m.y)),pt=I.ref(fe(Number(m.scaleValue))),$t=I.ref(0),Et=I.ref(0),je=I.ref(0),Mt=I.ref(0),fn=I.ref(0),Gt=I.ref(0),ht=null,Qt=null,Bn={x:0,y:0},Yt={x:0,y:0},Ht=1,Vt=0,qt=0,Qo=!1,ci,ei,qi=null,Ga=null,Un={top:0,left:0,width:0,height:0},$n=new kr,Ir=new kr,Hn={historyX:[0,0],historyY:[0,0],historyT:[0,0]},Er=I.computed(()=>{let Be=Number(m.damping);return isNaN(Be)?20:Be}),zr=I.computed(()=>{let Be=Number(m.friction);return isNaN(Be)||Be<=0?2:Be}),ea=I.computed(()=>{let Be=Number(m.scaleMin);return isNaN(Be)?.5:Be}),cs=I.computed(()=>{let Be=Number(m.scaleMax);return isNaN(Be)?10:Be}),tn=I.computed(()=>m.direction==="all"||m.direction==="horizontal"),mn=I.computed(()=>m.direction==="all"||m.direction==="vertical"),jn=new Ni(1,9*Math.pow(Er.value,2)/40,Er.value),qn=new Nn(1,zr.value);I.watch(()=>m.x,Be=>{we.value=Ie(Be)}),I.watch(()=>m.y,Be=>{ut.value=Ie(Be)}),I.watch(()=>m.scaleValue,Be=>{pt.value=fe(Number(Be))}),I.watch(we,us),I.watch(ut,Ya),I.watch(pt,ta),I.watch(ea,Na),I.watch(cs,Na);function Ai(){Qt&&Qt.cancel(),ht&&ht.cancel()}function us(Be){if(tn.value){if(Be+Yt.x===Vt)return Vt;ht&&ht.cancel(),bo(Be+Yt.x,ut.value+Yt.y,Ht)}return Be}function Ya(Be){if(mn.value){if(Be+Yt.y===qt)return qt;ht&&ht.cancel(),bo(we.value+Yt.x,Be+Yt.y,Ht)}return Be}function Na(){if(!m.scale)return!1;Li(Ht,!0)}function ta(Be){return m.scale?(Be=_o(Be),Li(Be,!0),Be):!1}function so(){m.disabled||(Ai(),Hn.historyX=[0,0],Hn.historyY=[0,0],Hn.historyT=[0,0],tn.value&&(ci=Vt),mn.value&&(ei=qt),qi=null,Ga=null,Qo=!0)}function qa(Be){if(!m.disabled&&Qo){let It=Vt,Pt=qt;if(Ga===null&&(Ga=Math.abs(Be.detail.dx/Be.detail.dy)>1?"htouchmove":"vtouchmove"),tn.value&&(It=Be.detail.dx+ci,Hn.historyX.shift(),Hn.historyX.push(It),!mn.value&&qi===null&&(qi=Math.abs(Be.detail.dx/Be.detail.dy)<1)),mn.value&&(Pt=Be.detail.dy+ei,Hn.historyY.shift(),Hn.historyY.push(Pt),!tn.value&&qi===null&&(qi=Math.abs(Be.detail.dy/Be.detail.dx)<1)),Hn.historyT.shift(),Hn.historyT.push(Be.detail.timeStamp),!qi){let wn="touch";It<je.value?m.outOfBounds?(wn="touch-out-of-bounds",It=je.value-$n.x(je.value-It)):It=je.value:It>fn.value&&(m.outOfBounds?(wn="touch-out-of-bounds",It=fn.value+$n.x(It-fn.value)):It=fn.value),Pt<Mt.value?m.outOfBounds?(wn="touch-out-of-bounds",Pt=Mt.value-Ir.x(Mt.value-Pt)):Pt=Mt.value:Pt>Gt.value&&(m.outOfBounds?(wn="touch-out-of-bounds",Pt=Gt.value+Ir.x(Pt-Gt.value)):Pt=Gt.value),ki(function(){Uo(It,Pt,Ht,wn)})}}}function fs(){if(!m.disabled&&Qo&&(Qo=!1,!qi&&!ds("out-of-bounds")&&m.inertia)){let Be=1e3*(Hn.historyX[1]-Hn.historyX[0])/(Hn.historyT[1]-Hn.historyT[0]),It=1e3*(Hn.historyY[1]-Hn.historyY[0])/(Hn.historyT[1]-Hn.historyT[0]);qn.setV(Be,It),qn.setS(Vt,qt);let Pt=qn.delta().x,wn=qn.delta().y,yr=Pt+Vt,Oi=wn+qt;yr<je.value?(yr=je.value,Oi=qt+(je.value-Vt)*wn/Pt):yr>fn.value&&(yr=fn.value,Oi=qt+(fn.value-Vt)*wn/Pt),Oi<Mt.value?(Oi=Mt.value,yr=Vt+(Mt.value-qt)*Pt/wn):Oi>Gt.value&&(Oi=Gt.value,yr=Vt+(Gt.value-qt)*Pt/wn),qn.setEnd(yr,Oi),Qt=Fr(qn,function(){let Ji=qn.s(),Eo=Ji.x,ka=Ji.y;Uo(Eo,ka,Ht,"friction")},function(){Qt.cancel()})}}function Wr(Be,It){let Pt=!1;return Be>fn.value?(Be=fn.value,Pt=!0):Be<je.value&&(Be=je.value,Pt=!0),It>Gt.value?(It=Gt.value,Pt=!0):It<Mt.value&&(It=Mt.value,Pt=!0),{x:Be,y:It,outOfBounds:Pt}}function Ja(){Bn.x=Un.left-q.left.value,Bn.y=Un.top-q.top.value}function Ka(Be){Be=Be||Ht,Be=_o(Be),Et.value=Un.height/Ht,$t.value=Un.width/Ht;let It=Et.value*Be,Pt=$t.value*Be;Yt.x=(Pt-$t.value)/2,Yt.y=(It-Et.value)/2}function Vo(){let Be=0-Bn.x+Yt.x,It=q.width.value-$t.value-Bn.x-Yt.x;je.value=Math.min(Be,It),fn.value=Math.max(Be,It);let Pt=0-Bn.y+Yt.y,wn=q.height.value-Et.value-Bn.y-Yt.y;Mt.value=Math.min(Pt,wn),Gt.value=Math.max(Pt,wn)}function Li(Be,It){if(m.scale){Be=_o(Be),Ka(Be),Vo();let Pt=Wr(Vt,qt),wn=Pt.x,yr=Pt.y;It?bo(wn,yr,Be,"",!0,!0):ki(function(){Uo(wn,yr,Be,"",!0,!0)})}}function _o(Be){return Be=Math.max(.5,ea.value,Be),Be=Math.min(10,cs.value,Be),Be}function bo(Be,It,Pt,wn,yr,Oi){Ai(),tn.value||(Be=Vt),mn.value||(It=qt),m.scale||(Pt=Ht);let Ji=Wr(Be,It);if(Be=Ji.x,It=Ji.y,!m.animation){Uo(Be,It,Pt,wn,yr,Oi);return}jn._springX._solution=null,jn._springY._solution=null,jn._springScale._solution=null,jn._springX._endPosition=Vt,jn._springY._endPosition=qt,jn._springScale._endPosition=Ht,jn.setEnd(Be,It,Pt,1),ht=Fr(jn,function(){let Eo=jn.x(),ka=Eo.x,na=Eo.y,gs=Eo.scale;Uo(ka,na,gs,wn,yr,Oi)},function(){ht.cancel()})}function ds(Be){let It=Wr(Vt,qt),Pt=It.x,wn=It.y,yr=It.outOfBounds;return yr&&bo(Pt,wn,Ht,Be),yr}function Uo(Be,It,Pt,wn="",yr,Oi){Be!==null&&Be.toString()!=="NaN"&&typeof Be=="number"||(Be=Vt||0),It!==null&&It.toString()!=="NaN"&&typeof It=="number"||(It=qt||0),Be=Number(Be.toFixed(1)),It=Number(It.toFixed(1)),Pt=Number(Pt.toFixed(1)),Vt===Be&&qt===It||yr||R("change",{x:oi(Be,Yt.x),y:oi(It,Yt.y),source:wn}),m.scale||(Pt=Ht),Pt=_o(Pt),Pt=+Pt.toFixed(3),Oi&&Pt!==Ht&&R("scale",{x:Be,y:It,scale:Pt});let Ji=`translate(${Be}px, ${It}px) scale(${Pt})`;Zr.transition($.value,{styles:{transform:Ji},duration:0,delay:0}),Vt=Be,qt=It,Ht=Pt}function Bs(){return kn($.value).then(Be=>{Un=Be})}function hs(){if(!Z.value)return;Ai();let Be=m.scale?pt.value:1;Ja(),Ka(Be),Vo(),Vt=we.value+Yt.x,qt=ut.value+Yt.y;let It=Wr(Vt,qt),Pt=It.x,wn=It.y;Uo(Pt,wn,Be,"",!0)}return I.onMounted(()=>{pe=Qi(It=>{switch(It.detail.state){case"start":so();break;case"move":qa(It);break;case"end":fs()}}),f(()=>{Bs().then(()=>{hs()})},100),qn.reconfigure(1,zr.value),jn.reconfigure(1,9*Math.pow(Er.value,2)/40,Er.value);let Be={setParent:hs};te(Be),I.onUnmounted(()=>{ce(Be)})}),I.onUnmounted(()=>{Ai()}),()=>{U(pe)}}let Xr=16,Ur={activeColor:In.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},Lt={percent:{type:[Number,String],default:0,validator(m){return!isNaN(parseFloat(m))}},fontSize:{type:[String,Number],default:Xr},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(m){return!isNaN(parseFloat(m))}},color:{type:String,default:Ur.activeColor},activeColor:{type:String,default:Ur.activeColor},backgroundColor:{type:String,default:Ur.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:Ur.activeMode},duration:{type:[Number,String],default:30,validator(m){return!isNaN(parseFloat(m))}},borderRadius:{type:[Number,String],default:0}},Oe=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}],_i=I.defineComponent({name:"Progress",props:Lt,styles:Oe,emits:["activeend"],setup(m,{emit:R}){let $=I.ref(null),U=I.ref(null),Z=Kn($,R),q=bi(m);return I.watch(()=>q.realPercent,(te,ce)=>{q.lastPercent=ce||0,Ei(q,m,Z)}),I.onMounted(()=>{f(()=>{kn(U.value).then(({width:te})=>{q.progressWidth=te||0,Ei(q,m,Z)})},50)}),()=>{let{showInfo:te,fontSize:ce}=m,{outerBarStyle:pe,innerBarStyle:Ie,currentPercent:fe}=q;return I.createVNode("div",{ref:$,class:"uni-progress"},[I.createVNode("div",{ref:U,style:pe,class:"uni-progress-bar"},[I.createVNode("div",{style:Ie,class:"uni-progress-inner-bar"},null)]),te?Jn(fe+"%",{class:"uni-progress-info",style:{fontSize:ce}}):null])}}});function bi(m){let R=I.ref(0),$=I.ref(0),U=I.computed(()=>({backgroundColor:m.backgroundColor,borderRadius:m.borderRadius,height:m.strokeWidth})),Z=I.computed(()=>{let ce=m.color!==Ur.activeColor&&m.activeColor===Ur.activeColor?m.color:m.activeColor;return{width:R.value*$.value/100,height:m.strokeWidth,backgroundColor:ce,borderRadius:m.borderRadius}}),q=I.computed(()=>{let ce=parseFloat(m.percent);return ce<0&&(ce=0),ce>100&&(ce=100),ce});return I.reactive({outerBarStyle:U,innerBarStyle:Z,realPercent:q,currentPercent:R,strokeTimer:0,lastPercent:0,progressWidth:$})}function Ei(m,R,$){m.strokeTimer&&clearInterval(m.strokeTimer),R.active?(m.currentPercent=R.activeMode===Ur.activeMode?0:m.lastPercent,m.strokeTimer=setInterval(()=>{m.currentPercent+1>m.realPercent?(m.currentPercent=m.realPercent,m.strokeTimer&&clearInterval(m.strokeTimer),$("activeend",{})):m.currentPercent+=1},parseFloat(R.duration))):m.currentPercent=m.realPercent}let Or={value:{type:Array,default(){return[]},validator:function(m){return St.isArray(m)&&m.filter(R=>typeof R=="number").length===m.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},Ri=St.extend({},Or,{height:{type:[Number,String],default:0},maskTopStyle:{type:String,default:""},maskBottomStyle:{type:String,default:""}}),Tr=I.defineComponent({name:"PickerView",props:Ri,emits:["change","update:value"],setup(m,{slots:R,emit:$}){let U=I.ref(null),Z=Rr(m),q=Kn(U,$),te=[],ce=Ie=>Array.prototype.indexOf.call(te.filter(fe=>fe.type!==I.Comment),Ie),pe=Ie=>I.computed({get(){let fe=ce(Ie.vnode);return Z.value[fe]||0},set(fe){if(!Ie.data._isMounted)return;let we=ce(Ie.vnode);if(we<0)return;if(Z.value[we]!==fe){Z.value[we]=fe;let pt=Z.value.map($t=>$t);$("update:value",pt),q("change",{value:pt})}}});return I.provide("getPickerViewColumn",pe),I.provide("pickerViewProps",m),()=>{let Ie=R.default&&R.default();te=mi(Ie);let fe=m.height?{height:`${parseFloat(m.height)}px`}:{};return I.createVNode("view",I.mergeProps({ref:U,class:"uni-picker-view",style:fe},{preventGesture:!0}),[I.createVNode("view",{class:"uni-picker-view-wrapper"},[te])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Rr(m){let R=I.reactive([...m.value]),$=I.reactive({value:R});return I.watch(()=>m.value,U=>{$.value.length=U.length,I.nextTick(()=>{U.forEach((Z,q)=>{Z!==$.value[q]&&$.value.splice(q,1,Z)})})}),$}let ai=S.requireModule("dom"),Pr=S.config.env.platform.toLowerCase()==="android";function yi(m){return St.extend({},St.isString(m)?uo(m):m)}let un={length:{type:[Number,String],default:0}},ji=I.defineComponent({name:"PickerViewColumn",props:un,data:()=>({_isMounted:!1}),setup(m,{slots:R}){let $=I.getCurrentInstance(),U=I.ref(null),Z=I.ref(null),q=I.ref(null),te=I.ref(null),ce=I.inject("pickerViewProps"),Ie=I.inject("getPickerViewColumn")($),fe=I.computed(()=>yi(ce.indicatorStyle)),we=I.computed(()=>yi(ce.maskTopStyle)),ut=I.computed(()=>yi(ce.maskBottomStyle)),pt=I.ref(0);pt.value=$r(fe.value);let $t=I.ref(0);$t.value=parseFloat(ce.height);let{setCurrent:Et,onScrollend:je}=to(m,Ie,Z,pt),Mt=()=>{let Gt,ht;f(()=>{Promise.all([kn(U.value).then(({height:Qt})=>{Gt=$t.value=Qt}),Pr&&m.length?kn(q.value).then(({height:Qt})=>{ht=pt.value=Qt/parseFloat(m.length)}):kn(te.value).then(({height:Qt})=>{ht=pt.value=Qt})]).then(()=>{Gt&&ht?f(()=>{$.data._isMounted=!0,Et(Ie.value,!1,!0)},50):Mt()})},50)};I.onMounted(Mt);let fn=Gt=>Gt?Pr?I.createVNode("div",{ref:q,style:"flex-direction:column;"},[Gt]):Gt:null;return()=>{let Gt=R.default&&R.default(),ht=($t.value-pt.value)/2,Qt=`${$t.value-ht}px`,Bn={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return Pr||(Bn.scrollTop=Ie.value*pt.value),I.createVNode("view",{ref:U,class:"uni-picker-view-column"},[I.createVNode("scroll-view",I.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:je},Bn),[I.createVNode("view",{ref:Z,class:"uni-picker-view-content",style:{paddingTop:`${ht}px`,paddingBottom:`${ht}px`}},[fn(Gt)])]),I.createVNode("u-scalable",{class:"uni-picker-view-mask"},[I.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:St.extend({},we.value,{bottom:Qt})},null),I.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:St.extend({},ut.value,{top:Qt})},null)]),I.createVNode("u-scalable",{ref:te,class:"uni-picker-view-indicator",style:St.extend({},fe.value,{top:`${ht}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function $r(m){let $=(m.height||m.lineHeight||"").match(/(-?[\d\.]+)px/),U=0;return $&&(U=parseFloat($[1])),U}function to(m,R,$,U){let Z;function q(pe,Ie=!0){ai.scrollToElement($.value,{offset:pe*U.value,animated:Ie}),Ie&&(Z=Date.now())}I.watch(()=>m.length,()=>{f(()=>{te(R.value,!0,!0)},150)}),I.watch(R,pe=>q(pe));let te=(pe,Ie=!0,fe)=>{R.value===pe&&!fe||(R.value=pe,Pr&&q(pe,Ie))};return{setCurrent:te,onScrollend:pe=>{if(Date.now()-Z<340)return;let Ie=pe.detail.contentOffset.y,fe=Math.round(Ie/U.value);Ie%U.value?te(fe,!0,!0):R.value=fe}}}let En={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Hr={YEAR:"year",MONTH:"month",DAY:"day"};function sr(m){return m>9?m:`0${m}`}function Si(m,R){m=String(m||"");let $=new Date;if(R===En.TIME){let U=m.split(":");U.length===2&&$.setHours(parseInt(U[0]),parseInt(U[1]))}else{let U=m.split("-");U.length===3&&$.setFullYear(parseInt(U[0]),parseInt(String(parseFloat(U[1])-1)),parseInt(U[2]))}return $}function xi(m){if(m.mode===En.TIME)return"00:00";if(m.mode===En.DATE){let R=new Date().getFullYear()-100;switch(m.fields){case Hr.YEAR:return R;case Hr.MONTH:return R+"-01";default:return R+"-01-01"}}return""}function mr(m){if(m.mode===En.TIME)return"23:59";if(m.mode===En.DATE){let R=new Date().getFullYear()+100;switch(m.fields){case Hr.YEAR:return R;case Hr.MONTH:return R+"-12";default:return R+"-12-31"}}return""}let Qr={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:En.SELECTOR,validator(m){return Object.values(En).indexOf(m)>=0}},fields:{type:String,default:""},start:{type:String,default:xi},end:{type:String,default:mr},disabled:{type:[Boolean,String],default:!1}},er=I.defineComponent({name:"Picker",props:Qr,emits:["change","cancel","columnchange"],setup(m,{slots:R,emit:$}){let U=I.ref(null),Z=Kn(U,$),q=I.ref(null),te=I.ref(null),ce=()=>{let Et=m.value;switch(m.mode){case En.MULTISELECTOR:{St.isArray(Et)||(Et=[]),St.isArray(q.value)||(q.value=[]);let je=q.value.length=Math.max(Et.length,m.range.length);for(let Mt=0;Mt<je;Mt++){let fn=Number(Et[Mt]),Gt=Number(q.value[Mt]),ht=isNaN(fn)?isNaN(Gt)?0:Gt:fn;q.value.splice(Mt,1,ht<0?0:ht)}}break;case En.TIME:case En.DATE:q.value=String(Et);break;default:{let je=Number(Et);q.value=je<0?0:je;break}}},pe=Et=>{te.value&&te.value.sendMessage(Et)},Ie=Et=>{let je={event:"cancel"};te.value=on({url:"__uniapppicker",data:Et,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:Mt=>{let fn=Mt.event;if(fn==="created"){pe(Et);return}if(fn==="columnchange"){delete Mt.event,Z(fn,Mt);return}je=Mt},onClose:()=>{te.value=null;let Mt=je.event;delete je.event,Mt&&Z(Mt,je)}})},fe=Et=>{h.nativeUI[m.mode===En.TIME?"pickTime":"pickDate"](je=>{let Mt=je.date;Z("change",{value:m.mode===En.TIME?`${sr(Mt.getHours())}:${sr(Mt.getMinutes())}`:`${Mt.getFullYear()}-${sr(Mt.getMonth()+1)}-${sr(Mt.getDate())}`})},()=>{Z("cancel",{})},m.mode===En.TIME?{time:Si(m.value,En.TIME)}:{date:Si(m.value,En.DATE),minDate:Si(m.start,En.DATE),maxDate:Si(m.end,En.DATE)})},we=Et=>{(Et.mode===En.TIME||Et.mode===En.DATE)&&!Et.fields?fe():(Et.fields=Object.values(Hr).includes(Et.fields)?Et.fields:Hr.DAY,Ie(Et))},ut=Et=>{m.disabled||we(St.extend({},m,{value:q.value,locale:p.getLocale()}))},pt=I.inject(ri,!1),$t={submit:()=>[m.name,q.value],reset:()=>{switch(m.mode){case En.SELECTOR:q.value=0;break;case En.MULTISELECTOR:St.isArray(m.value)&&(q.value=m.value.map(Et=>0));break;case En.DATE:case En.TIME:q.value="";break}}};return pt&&(pt.addField($t),I.onBeforeUnmount(()=>pt.removeField($t))),Object.keys(m).forEach(Et=>{I.watch(()=>m[Et],je=>{let Mt={};Mt[Et]=je,pe(Mt)},{deep:!0})}),I.watch(()=>m.value,ce,{deep:!0}),ce(),()=>I.createVNode("view",{ref:U,onClick:ut},[R.default&&R.default()])}}),tr={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},Gn=[{"uni-slider":{"":{flex:1,flexDirection:"column"}},"uni-slider-wrapper":{"":{flexDirection:"row",justifyContent:"center",alignItems:"center"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"row",alignItems:"center",paddingTop:"14",paddingBottom:"14"}},"uni-slider-handle-wrapper":{"":{position:"relative",flex:1,backgroundColor:"#e9e9e9",height:"2",borderRadius:"5",marginRight:"14",marginLeft:"14"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff"}},"uni-slider-thumb":{"":{position:"absolute",top:"1",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb"}},"uni-slider-value":{"":{color:"#888888",fontSize:"16",width:"30"}}}],nr=I.defineComponent({name:"USlider",props:tr,styles:Gn,setup(m,{emit:R}){let $=I.ref(null),U=I.ref(null),Z=Kn($,R),q=cr(m),te=ho(m,q,Z);return go(m,q),I.watch(()=>m.value,ce=>{q.sliderValue=Number(ce)}),I.onMounted(()=>{f(()=>{kn(U.value).then(({width:ce,left:pe})=>{q.sliderLeft=pe,q.sliderWidth=ce||0,q.sliderValue=Number(m.value)})},100)}),()=>{let{showValue:ce}=m,{trackTapStyle:pe,trackStyle:Ie,trackActiveStyle:fe,thumbStyle:we,sliderValue:ut}=q;return I.createVNode("div",{class:"uni-slider",ref:$},[I.createVNode("div",{class:"uni-slider-wrapper"},[I.createVNode("div",I.mergeProps({class:"uni-slider-tap-area",style:pe},te),[I.createVNode("div",{class:"uni-slider-handle-wrapper",style:Ie,ref:U},[I.createVNode("div",{class:"uni-slider-track",style:fe},null)]),I.createVNode("div",{class:"uni-slider-thumb",style:we},null)]),ce?Jn(ut+"",{class:"uni-slider-value"}):null])])}}});function cr(m){let R=I.ref(0),$=I.ref(0),U=I.ref(0),Z=()=>m.backgroundColor!=="#e9e9e9"?m.backgroundColor:m.color!=="#007aff"?m.color:"#007aff",q=()=>m.activeColor!=="#007aff"?m.activeColor:m.selectedColor!=="#e9e9e9"?m.selectedColor:"#e9e9e9",te=()=>{let Ie=Number(m.max),fe=Number(m.min);return(U.value-fe)/(Ie-fe)*$.value},ce=Number(m.blockSize)/2;return I.reactive({sliderLeft:R,sliderWidth:$,sliderValue:U,sliderThumbOffset:ce,trackTapStyle:I.computed(()=>({paddingTop:ce,paddingBottom:ce})),trackStyle:I.computed(()=>({backgroundColor:Z(),marginLeft:ce,marginRight:ce})),trackActiveStyle:I.computed(()=>({backgroundColor:q(),width:te()})),thumbStyle:I.computed(()=>({width:m.blockSize,height:m.blockSize,backgroundColor:m.blockColor,left:te()}))})}function ho(m,R,$){let U=null;function Z(ce,pe){m.disabled||(ce==="move"?(q(pe),$("changing",{value:R.sliderValue})):ce==="end"&&(q(pe),$("change",{value:R.sliderValue})))}function q(ce){ce-=R.sliderThumbOffset,ce<0&&(ce=0),ce>R.sliderWidth&&(ce=R.sliderWidth);let pe=Number(m.max),Ie=Number(m.min),fe=Number(m.step),we=ce/R.sliderWidth*(pe-Ie);fe>0&&we>fe&&we%fe/fe!==0?we-=we%fe:we=parseInt(we+""),R.sliderValue=we+Ie}return{onTouchstart(ce){ce.changedTouches.length===1&&!U&&(U=ce,Z("start",ce.changedTouches[0].pageX))},onTouchmove(ce){ce.changedTouches.length===1&&U&&Z("move",ce.changedTouches[0].pageX)},onTouchend(ce){ce.changedTouches.length===1&&U&&(U=null,Z("end",ce.changedTouches[0].pageX))}}}function go(m,R){let $=I.inject(ri,!1),U={submit:()=>{let Z=["",null];return m.name&&(Z[0]=m.name,Z[1]=R.sliderValue),Z},reset:()=>{R.sliderValue=Number(m.value)}};$&&($.addField(U),I.onUnmounted(()=>{$.removeField(U)}))}let ko={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},no={switch:"switch",checkbox:"checkbox"},Ro={width:52,height:32},jr=I.defineComponent({name:"Switch",props:ko,emits:["change"],setup(m,{emit:R}){let $=I.ref(null),U=I.ref(m.checked),Z=xr(m,U),q=Kn($,R);I.watch(()=>m.checked,ce=>{U.value=ce});let te=(ce,pe)=>{m.disabled||(U.value=ce.detail?ce.detail.value:!U.value,q("change",{value:U.value}))};return Z&&(Z.addHandler(te),I.onBeforeUnmount(()=>{Z.removeHandler(te)})),wr(m,{"label-click":te}),()=>{let{color:ce,type:pe,disabled:Ie}=m;return I.createVNode("div",{ref:$},[pe===no.switch?I.createVNode("dc-switch",I.mergeProps({dataUncType:"uni-switch"},{onChange:te},{checked:U.value,color:ce,disabled:Ie},{style:Ro}),null):null,pe===no.checkbox?I.createVNode(I.resolveComponent("checkbox"),I.mergeProps({style:{color:ce}},{checked:U.value,disabled:Ie},{onClick:te}),null):null])}}});function xr(m,R){let $=I.inject(ri,!1),U=I.inject(Wn,!1),Z={submit:()=>{let q=["",null];return m.name&&(q[0]=m.name,q[1]=R.value),q},reset:()=>{R.value=!1}};return $&&($.addField(Z),I.onUnmounted(()=>{$.removeField(Z)})),U}let po={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},xo=qr("ucg"),ro={name:{type:String,default:""}},Bi=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}],vo=I.defineComponent({name:"Checkbox",props:po,styles:Bi,setup(m,{slots:R}){let $=I.ref(null),U=I.ref(m.checked),Z=I.ref(m.value),q=I.computed(()=>m.disabled?"#adadad":m.color),te=()=>{U.value=!1},ce=(we,ut)=>{m.disabled||(U.value=!U.value,pe&&pe.checkboxChange(we))},{uniCheckGroup:pe,uniLabel:Ie}=Mi(U,Z,te);Ie&&(Ie.addHandler(ce),I.onBeforeUnmount(()=>{Ie.removeHandler(ce)})),wr(m,{"label-click":ce}),I.watch([()=>m.checked,()=>m.value],([we,ut])=>{U.value=we,Z.value=ut});let fe=()=>{if(!R.default)return[];let we=R.default();return we.length===1&&we[0].type===Text?[Jn(we[0].children,{class:"uni-checkbox-slot"})]:we};return()=>I.createVNode("div",I.mergeProps({ref:$},{dataUncType:"uni-checkbox"},{onClick:ce,class:"uni-checkbox"}),[I.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":m.disabled}]},[U.value?Jn("\uEA08",{class:"uni-icon",style:{color:q.value}}):null]),...fe()])}});function Mi(m,R,$){let U=I.computed(()=>({checkboxChecked:Boolean(m.value),value:R.value})),Z={reset:$},q=I.inject(xo,!1);q&&q.addField(U);let te=I.inject(ri,!1);te&&te.addField(Z);let ce=I.inject(Wn,!1);return I.onBeforeUnmount(()=>{q&&q.removeField(U),te&&te.removeField(Z)}),{uniCheckGroup:q,uniForm:te,uniLabel:ce}}let zi=I.defineComponent({name:"CheckboxGroup",props:ro,emits:["change"],setup(m,{slots:R,emit:$}){let U=I.ref(null),Z=Kn(U,$);return Zo(m,Z),()=>I.createVNode("div",{ref:U,class:"uni-checkbox-group"},[R.default&&R.default()])}});function Zo(m,R){let $=[],U=()=>$.reduce((q,te)=>(te.value.checkboxChecked&&q.push(te.value.value),q),new Array);I.provide(xo,{addField(q){$.push(q)},removeField(q){$.splice($.indexOf(q),1)},checkboxChange(q){R("change",{value:U()})}});let Z=I.inject(ri,!1);return Z&&Z.addField({submit:()=>{let q=["",null];return m.name!==""&&(q[0]=m.name,q[1]=U()),q}}),U}let B={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Q=qr("ucg"),he={name:{type:String,default:""}},ae=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}],de=I.defineComponent({name:"Radio",props:B,styles:ae,emits:["change"],setup(m,{slots:R}){let $=I.ref(null),U=I.ref(m.checked),Z=I.ref(m.value),q=I.computed(()=>{let ut=m.disabled?"#adadad":m.color;return U.value?{backgroundColor:ut,borderColor:ut}:{borderColor:"#d1d1d1"}}),te=()=>{U.value=!1},{uniCheckGroup:ce,uniLabel:pe,field:Ie}=mt(U,Z,te),fe=(ut,pt)=>{m.disabled||U.value||(U.value=!U.value,ce&&ce.radioChange(ut,Ie))};pe&&(pe.addHandler(fe),I.onBeforeUnmount(()=>{pe.removeHandler(fe)})),wr(m,{"label-click":fe}),I.watch([()=>m.checked,()=>m.value],([ut,pt])=>{U.value=ut,Z.value=pt});let we=()=>{if(!R.default)return[];let ut=R.default();return ut.length===1&&ut[0].type===Text?[Jn(ut[0].children,{class:"uni-radio-slot"})]:ut};return()=>{let{disabled:ut}=m;return I.createVNode("div",I.mergeProps({ref:$},{dataUncType:"uni-radio"},{onClick:fe,class:"uni-radio"}),[I.createVNode("div",{style:q.value,class:["uni-radio-input",{"uni-radio-input-disabled":ut}]},[U.value?Jn("\uEA08",{class:"uni-radio-input-icon"}):null]),...we()])}}});function mt(m,R,$){let U=I.computed({get:()=>({radioChecked:Boolean(m.value),value:R.value}),set:({radioChecked:pe})=>{m.value=pe}}),Z={reset:$},q=I.inject(Q,!1);q&&q.addField(U);let te=I.inject(ri,!1);te&&te.addField(Z);let ce=I.inject(Wn,!1);return I.onBeforeUnmount(()=>{q&&q.removeField(U),te&&te.removeField(Z)}),{uniCheckGroup:q,uniForm:te,uniLabel:ce,field:U}}let kt=I.defineComponent({name:"RadioGroup",props:he,emits:["change"],setup(m,{slots:R,emit:$}){let U=I.ref(null),Z=Kn(U,$);return X(m,Z),()=>I.createVNode("div",{ref:U},[R.default&&R.default()])}});function X(m,R){let $=[];I.onMounted(()=>{ce($.length-1)});let U=()=>{var pe;return(pe=$.find(Ie=>Ie.value.radioChecked))==null?void 0:pe.value.value};I.provide(Q,{addField(pe){$.push(pe)},removeField(pe){$.splice($.indexOf(pe),1)},radioChange(pe,Ie){let fe=$.indexOf(Ie);ce(fe,!0),R("change",{value:U()})}});let Z=I.inject(ri,!1),q={submit:()=>{let pe=["",null];return m.name!==""&&(pe[0]=m.name,pe[1]=U()),pe}};Z&&(Z.addField(q),I.onBeforeUnmount(()=>{Z.removeField(q)}));function te(pe,Ie){pe.value={radioChecked:Ie,value:pe.value.value}}function ce(pe,Ie){$.forEach((fe,we)=>{we!==pe&&Ie&&te($[we],!1)})}return $}let K=["u-input","u-textarea"],ie=I.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:m,emit:R}){let $=I.ref(null),U=Kn($,R),Z=[],q;return I.provide(ri,{addField(te){Z.push(te)},removeField(te){Z.splice(Z.indexOf(te),1)},submit(te){let ce={};q&&q(ce);let pe=Z.reduce((Ie,fe)=>{if(fe.submit){let[we,ut]=fe.submit();we&&(Ie[we]=ut)}return Ie},Object.create(null));Object.assign(ce,pe),U("submit",{value:ce})},reset(te){q&&q(),Z.forEach(ce=>ce.reset&&ce.reset()),U("reset",te)}}),()=>{let te=m.default&&m.default();return q=Ne(te),I.createVNode("view",{ref:$},[te])}}});function Ne(m){let R=S.requireModule("plus"),$=(U,Z)=>{(Z||m||[]).forEach(function(q){K.indexOf(String(q.type))>=0&&q.el&&q.el.attr&&q.el.attr.name&&(U?U[q.el.attr.name]=R.getValue(q.el.nodeId):q.el.setValue("")),St.isArray(q.children)&&q.children&&q.children.length&&$(U,q.children)})};return $}let lt={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},Zt={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},xn={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},Ln=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}],_r=I.defineComponent({name:"Icon",props:lt,styles:Ln,setup(m,{}){return()=>Jn(xn[m.type],{class:"uni-icon",style:{color:m.color||Zt[m.type],fontSize:m.size}})}}),Br={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},mo=S.config.env.platform.toLowerCase()==="android",Bo=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}],Mo=I.defineComponent({name:"Swiper",props:Br,styles:Bo,emits:["change","transition","animationfinish"],setup(m,{slots:R,emit:$}){let U=I.ref(null),Z=[],q=Kn(U,$),te=Dn(m),ce=Yn(te,m,Z,q);return I.watch([()=>m.current,()=>m.currentItemId],([pe,Ie])=>{Fn(te,m,Z)}),I.onMounted(()=>{f(()=>{kn(U.value).then(({width:pe,height:Ie})=>{te.swiperWidth=pe,te.swiperHeight=Ie})},50)}),()=>{let pe=R.default&&R.default(),{indicatorStyle:Ie,currentSync:fe}=te;return Z=mi(pe),I.createVNode("div",{ref:U,class:"uni-swiper"},[I.createVNode("slider",I.mergeProps({class:"uni-swiper-slider"},{autoPlay:m.autoplay,interval:m.interval,index:fe,keepIndex:!0,showIndicators:m.indicatorDots,infinite:m.circular,vertical:m.vertical,scrollable:!m.disableTouch},ce),[Z,I.createVNode("indicator",{class:"uni-swiper-dots",style:Ie},null)])])}}});function Dn(m){let R=I.ref(0),$=I.ref(0),U=I.ref(m.current),Z=I.ref("autoplay"),q=I.computed(()=>({itemColor:m.indicatorColor,itemSelectedColor:m.indicatorActiveColor,itemSize:8,opacity:m.indicatorDots?1:0}));return I.reactive({swiperWidth:R,swiperHeight:$,indicatorStyle:q,currentSync:U,currentChangeSource:Z})}function Yn(m,R,$,U){let Z=0,q=fe=>{let we=fe.detail,ut=R.vertical,pt=(ut?we.offsetYRatio:we.offsetXRatio)||0;if((fe.drag||fe.drag)&&(m.currentChangeSource="touch"),pt===0){let $t=Math.abs(Z);if($t===1)return;$t>.5&&(pt=1)}Z=pt,U("transition",{dx:ut?0:-m.swiperWidth*pt,dy:ut?-m.swiperHeight*pt:0})},te=fe=>{let we=()=>{U("animationfinish",pe()),m.currentChangeSource="autoplay"};mo?we():f(we,50)},ce=fe=>{St.isString(fe.detail.source)&&(m.currentChangeSource=fe.detail.source),m.currentSync=fe.detail.index,Z=0};function pe(){let fe=Number(m.currentSync),we=$[fe]||{},ut=we.componentInstance&&we.componentInstance.itemId||"";return{current:fe,currentItemId:ut,source:m.currentChangeSource}}return I.watch(()=>m.currentSync,fe=>{U("change",pe())}),{onScroll:q,onScrollend:te,onChange:ce}}function Fn(m,R,$){let U=-1;if(R.currentItemId)for(let Z=0,q=$;Z<q.length;Z++){let te=q[Z].componentInstance;if(te&&te.itemId===R.currentItemId){U=Z;break}}U<0&&(U=Math.round(Number(R.current))||0),U=U<0?0:U,m.currentSync!==U&&(m.currentChangeSource="",m.currentSync=U)}let wi={itemId:{type:String,default:""}},is=I.defineComponent({name:"SwiperItem",props:wi,setup(m,{slots:R}){return()=>I.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[R.default&&R.default()])}});var fa=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,br=/^<\/([-A-Za-z0-9_]+)[^>]*>/,Pa=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,Ua=Lo("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),$a=Lo("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),Ha=Lo("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),ja=Lo("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),da=Lo("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),Ia=Lo("script,style");function Vn(m,R){var $,U,Z,q=[],te=m;for(q.last=function(){return this[this.length-1]};m;){if(U=!0,!q.last()||!Ia[q.last()]){if(m.indexOf("<!--")==0?($=m.indexOf("-->"),$>=0&&(R.comment&&R.comment(m.substring(4,$)),m=m.substring($+3),U=!1)):m.indexOf("</")==0?(Z=m.match(br),Z&&(m=m.substring(Z[0].length),Z[0].replace(br,Ie),U=!1)):m.indexOf("<")==0&&(Z=m.match(fa),Z&&(m=m.substring(Z[0].length),Z[0].replace(fa,pe),U=!1)),U){$=m.indexOf("<");var ce=$<0?m:m.substring(0,$);m=$<0?"":m.substring($),R.chars&&R.chars(ce)}}else m=m.replace(new RegExp("([\\s\\S]*?)</"+q.last()+"[^>]*>"),function(fe,we){return we=we.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),R.chars&&R.chars(we),""}),Ie("",q.last());if(m==te)throw"Parse Error: "+m;te=m}Ie();function pe(fe,we,ut,pt){if(we=we.toLowerCase(),$a[we])for(;q.last()&&Ha[q.last()];)Ie("",q.last());if(ja[we]&&q.last()==we&&Ie("",we),pt=Ua[we]||!!pt,pt||q.push(we),R.start){var $t=[];ut.replace(Pa,function(Et,je){var Mt=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:da[je]?je:"";$t.push({name:je,value:Mt,escaped:Mt.replace(/(^|[^\\])"/g,'$1\\"')})}),R.start&&R.start(we,$t,pt)}}function Ie(fe,we){if(we)for(var ut=q.length-1;ut>=0&&q[ut]!=we;ut--);else var ut=0;if(ut>=0){for(var pt=q.length-1;pt>=ut;pt--)R.end&&R.end(q[pt]);q.length=ut}}}function Lo(m){for(var R={},$=m.split(","),U=0;U<$.length;U++)R[$[U]]=!0;return R}function Xo(m){return m.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function Wi(m){return m.reduce(function(R,$){let U=$.value,Z=$.name;return U.match(/ /)&&["style","src"].indexOf(Z)===-1&&(U=U.split(" ")),R[Z]?Array.isArray(R[Z])?R[Z].push(U):R[Z]=[R[Z],U]:R[Z]=U,R},{})}function os(m){m=Xo(m);let R=[],$={node:"root",children:[]};return Vn(m,{start:function(U,Z,q){let te={name:U};if(Z.length!==0&&(te.attrs=Wi(Z)),q){let ce=R[0]||$;ce.children||(ce.children=[]),ce.children.push(te)}else R.unshift(te)},end:function(U){let Z=R.shift();if(Z.name!==U&&console.error("invalid state: mismatch end tag"),R.length===0)$.children.push(Z);else{let q=R[0];q.children||(q.children=[]),q.children.push(Z)}},chars:function(U){let Z={type:"text",text:U};if(R.length===0)$.children.push(Z);else{let q=R[0];q.children||(q.children=[]),q.children.push(Z)}},comment:function(U){let Z={node:"comment",text:U},q=R[0];q.children||(q.children=[]),q.children.push(Z)}}),$.children}let as={nodes:{type:[Array,String],default:function(){return[]}}},Do=16,ss=I.defineComponent({name:"RichText",props:as,setup(m){let R=I.getCurrentInstance();return()=>{let $=m.nodes;return St.isString($)&&($=os($)),I.createVNode("u-rich-text",{value:io($||[],R.root,{defaultFontSize:Do})},null)}}});function io(m,R,$){let U=["span","a","image","img"],Z={blockquote:we,br:Et,div:we,dl:we,h1:pt(2),h2:pt(1.5),h3:pt(1.17),h4:pt(1),h5:pt(.83),h6:pt(.67),hr:we,ol:we,p:we,strong:$t,table:we,tbody:we,tfoot:we,thead:we,ul:we},q=/&(amp|gt|lt|nbsp|quot|apos);/g,te={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},ce={type:"span",__type:"break",attr:{value:`
`}},pe={__block:!0,__break:!0,children:[]},Ie=null;function fe(ht){let Qt=Object.create(null);if(ht.attrs){let Bn=(ht.attrs.class||"").split(" ");Object.assign(Qt,I.parseClassList(Bn,R),uo(ht.attrs.style||""))}if(ht.name==="img"||ht.name==="image"){let Bn=ht.attrs;Qt.width=Qt.width||Bn.width,Qt.height=Qt.height||Bn.height}return Qt}function we(ht){return ht.__block=!0,ht}function ut(ht,Qt){return ht.style&&!ht.style.fontSize&&(ht.style.fontSize=$.defaultFontSize*Qt),we($t(ht))}function pt(ht){return function(Qt){return ut(Qt,ht)}}function $t(ht){return ht.style&&!ht.style.fontWeight&&(ht.style.fontWeight="bold"),ht}function Et(ht){return ht.__value=" ",we(ht)}function je(ht){return ht.replace(q,function(Qt,Bn){return te[Bn]})}function Mt(ht){let Qt=(ht.name||"").toLowerCase(),Bn=Qt,Yt=Z[Qt];U.indexOf(Qt)===-1&&(Qt="span"),Qt==="img"&&(Qt="image");let Ht={type:Qt,__type:Bn,attr:Object.create(null)};return(ht.type==="text"||ht.text)&&(Ht.__value=Ht.attr.value=je((ht.text||"").trim())),ht.attrs&&Object.keys(ht.attrs).forEach(Vt=>{Vt!=="class"&&Vt!=="style"&&(Ht.attr[Vt]=ht.attrs[Vt])}),Ht.style=fe(ht),Yt&&Yt(Ht),(pe.__block||Ht.__block)&&(Ie||(pe.children.push(ce),Ie=[pe,ce])),pe=Ht,(pe.__value||pe.type==="image"&&pe.attr.src)&&(Ie=null),Ht.children=fn(ht.children),pe=Ht,pe.__block&&pe.style.height&&!/^0(px)?$/.test(pe.style.height)&&(Ie=null),Ht}function fn(ht){return St.isArray(ht)?ht.map(Qt=>Mt(Qt)):[]}let Gt=fn(m);if(Ie){let[ht,Qt]=Ie,Bn=ht.children,Yt=Bn.indexOf(Qt);Bn.splice(Yt,1)}return Gt}let si={};function Ci(m,R,$){let{adpid:U,width:Z}=m,q=U+"-"+Z,te=si[q];if(te&&te.length>0){R(te.splice(0,1)[0]);return}h.ad.getAds(m,ce=>{let pe=ce.ads;R(pe.splice(0,1)[0]),si[q]=te?te.concat(pe):pe},ce=>{$({errCode:ce.code,errMsg:ce.message})})}let Gi={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},li={load:"load",close:"close",error:"error",downloadchange:"downloadchange"},ur=I.defineComponent({name:"Ad",props:Gi,emits:[li.load,li.close,li.error,li.downloadchange],setup(m,{emit:R}){let $=I.ref(null),U=Kn($,R),Z=lr();I.watch(()=>m.adpid,te=>{za(Z,m,U)}),I.watch(()=>m.data,te=>{Z.data=te}),I.onMounted(()=>{f(()=>{kn($.value).then(({width:te})=>{Z.width=te===0?-1:te,za(Z,m,U)})},50)});let q={onDownloadchange(te){U(li.downloadchange,te)},onDislike(te){U(li.close,te)}};return()=>I.createVNode("u-ad",I.mergeProps({ref:$},{data:Z.data,rendering:!0},q),null)}});function lr(m){let R=I.ref("");return I.reactive({width:0,data:R})}function za(m,R,$){Ci({adpid:R.adpid,width:m.width},U=>{m.data=U,$(li.load,{})},U=>{$(li.error,U)})}let Wa={};function Yi(m,R,$,U,Z){let q=m+"-"+R,te=Wa[q];if(te&&te.length>0){U(te.splice(0,1)[0]);return}h.ad.getDrawAds({adpid:String(m),count:3,width:R},ce=>{let pe=ce.ads;U(pe.splice(0,1)[0]),Wa[q]=te?te.concat(pe):pe},ce=>{Z({errCode:ce.code,errMsg:ce.message})})}let oo={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},ao={load:"load",close:"close",error:"error"},ls=I.defineComponent({name:"AdDraw",props:oo,emits:[ao.load,ao.close,ao.error],setup(m,{emit:R}){let $=I.ref(null),U=Kn($,R),Z=ha();I.watch(()=>m.adpid,te=>{Fo(Z,m,U)}),I.watch(()=>m.data,te=>{Z.data=te});let q={onDislike(te){U(ao.close,te)}};return I.onMounted(()=>{f(()=>{kn($.value).then(({width:te,height:ce})=>{Z.width=te===0?-1:te,Z.height=ce===0?-1:ce,Fo(Z,m,U)})},50)}),()=>{let{data:te}=Z;return I.createVNode("u-ad-draw",I.mergeProps({ref:$},{data:te,rendering:!0},q),null)}}});function ha(m){let R=I.ref("");return I.reactive({width:0,height:0,data:R})}function Fo(m,R,$){Yi(R.adpid,m.width,m.height,U=>{m.data=U,$(ao.load,{})},U=>{$(ao.error,U)})}return{Navigator:pi,Label:hn,Button:To,MovableArea:Cr,MovableView:Ar,Progress:_i,PickerView:Tr,PickerViewColumn:ji,Picker:er,USlider:nr,Switch:jr,Checkbox:vo,CheckboxGroup:zi,Radio:de,RadioGroup:kt,Form:ie,Icon:_r,Swiper:Mo,SwiperItem:is,RichText:ss,Ad:ur,AdDraw:ls}}(N,Ve,Nt);return Tt}function CI(f,s){let{UniShared:p,Vue:w}=s;function N(h,E,x){let Ve=h.$[E];return Ve&&p.invokeArrayFns(Ve,x)}let S=f.setup;return f.inheritAttrs=!1,f.setup=(h,E)=>{let{attrs:{__pageId:x,__pagePath:Ve,__pageQuery:Nt}}=E,zt=s.__uniRoutes.find(St=>St.meta.route===Ve),Tt=w.getCurrentInstance(),I=Tt.proxy;if(zt&&(zt.meta.isSubNVue||AI(I,s,{__pageId:x,__pagePath:Ve})),w.onMounted(()=>{w.nextTick(()=>{N(I,p.ON_READY)}),Tt.onPageScroll&&I.$el.addEvent("scroll",St=>{St.scrollTop=St.detail.scrollTop,N(I,p.ON_PAGE_SCROLL,St)}),Tt.onReachBottom&&I.$el.addEvent("scrolltolower",St=>{N(I,p.ON_REACH_BOTTOM,St)})}),w.onBeforeUnmount(()=>{N(I,p.ON_UNLOAD)}),S)return S(Nt,E)},f}function AI(f,s,{__pageId:p,__pagePath:w}){let N=s.getCurrentPages(),S=N[N.length-1];if(S&&S.__setup)S.__setup(f,S);else{let h="/"+w;return s.__registerPage({url:h,path:h,query:{},openType:"launch",webview:{id:p+""},nvuePageVm:f})}}var Bl={},kp;function Rp(f){kp=f}var tu;function OI(f){if(tu)return tu;let s=new f.Emitter;return tu={on(p,w){return s.on(p,w)},once(p,w){return s.once(p,w)},off(p,w){return s.off(p,w)},emit(p,...w){return s.emit(p,...w)}},tu}function TI(f){return(s,p,w)=>{let{nvue:N}=p,S=eu(f,p);p.Vue=S,Bl[s]={instanceId:s,config:N.config,document:N.document,data:w};let{createApp:h}=S;S.createVueApp=S.createApp=(E,x)=>(p.__uniConfig.styles=E.styles||[],h(E,x).use(PI,s,p)),S.createPageApp=(E,x)=>{CI(E,p);let Ve=x.$store;delete x.$store;let Nt=h(E,x);return Ve&&Nt.use(Ve),Nt.use(NI,S,s,p)}}}var PI={install(f,s,p){dc(p).initApp(f),II(f,s,p)}};function II(f,s,p){let{mount:w}=f,N=Bl[s];return f.mount=S=>{let h=S==="#app",E=N.app=w(xp(N.document,{isRoot:h}));return h&&p.__registerApp(E),E},f}var NI={install(f,s,p,w){let{weex:N,plus:S,BroadcastChannel:h,VueShared:E,UniShared:x,getCurrentPages:Ve,setTimeout:Nt,clearTimeout:zt,__uniConfig:Tt}=w;f.config.globalProperties.$requireNativePlugin=N.requireModule;let I=wI({uni:kp,Vue:s,weex:N,plus:S,BroadcastChannel:h,UniViewJSBridge:OI(x),VueShared:E,UniShared:x,getCurrentPages:Ve,setTimeout:Nt,clearTimeout:zt,__uniConfig:Tt});Object.keys(I).forEach(St=>{f.component(s.hyphenate(St),I[St])}),dc(w).initApp(f),kI(f,p,w)}};function kI(f,s,{nvue:p}){let{config:{compilerOptions:w},mount:N}=f;w.isCustomElement=h=>!!p.supports(`@component/${h}`);let S=Bl[s];return f.mount=h=>{let E=h==="#root",x=S.app=N(xp(S.document,{isRoot:E}));if(E)try{p.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(Ve){}return x},f}function xp(f,{isRoot:s}){if(s)return f.documentElement;let p=f.createComment("root");return f.documentElement.appendChild(p),p}function Bp(f){let s=Bl[f];if(s&&s.app&&s.document){try{s.app.$.appContext.app.unmount(),s.document.destroy()}catch(p){}delete s.document,delete s.app}delete Bl[f]}function Mp(f){let s=Bl[f];if(!s||!s.app)return new Error(`refreshInstance: instance ${f} not found!`);s.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function RI(f,s){let{UniShared:p,VueShared:w,VueReactivity:N}=f;var S=function(h,E,x,Ve){"use strict";function Nt(a){}function zt(a,u){}function Tt(a,u,v,y){var P;try{P=y?a(...y):a()}catch(O){St(O,u,v)}return P}function I(a,u,v,y){if(E.isFunction(a)){var P=Tt(a,u,v,y);return P&&E.isPromise(P)&&P.catch(W=>{St(W,u,v)}),P}for(var O=[],F=0;F<a.length;F++)O.push(I(a[F],u,v,y));return O}function St(a,u,v){if(u&&u.vnode,u){for(var y=u.parent,P=u.proxy,O=v;y;){var F=y.ec;if(F){for(var W=0;W<F.length;W++)if(F[W](a,P,O)===!1)return}y=y.parent}var G=u.appContext.config.errorHandler;if(G){Tt(G,null,10,[a,P,O]);return}}In(a)}function In(a,u,v){console.error(a)}var at=!1,z=!1,J=[],dn=0,cn=[],bn=null,Jn=0,gi=Promise.resolve(),pi=null;function qr(a){var u=pi||gi;return a?u.then(this?a.bind(this):a):u}function gr(a){for(var u=dn+1,v=J.length;u<v;){var y=u+v>>>1,P=We(J[y]);P<a?u=y+1:v=y}return u}function Sn(a){(!J.length||!J.includes(a,at&&a.allowRecurse?dn+1:dn))&&(a.id==null?J.push(a):J.splice(gr(a.id),0,a),pr())}function pr(){!at&&!z&&(z=!0,pi=gi.then(Ot))}function Dr(a){var u=J.indexOf(a);u>dn&&J.splice(u,1)}function Jr(a){E.isArray(a)?cn.push(...a):(!bn||!bn.includes(a,a.allowRecurse?Jn+1:Jn))&&cn.push(a),pr()}function vi(a){for(var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:at?dn+1:0;u<J.length;u++){var v=J[u];v&&v.pre&&(J.splice(u,1),u--,v())}}function Pn(a){if(cn.length){var u=[...new Set(cn)];if(cn.length=0,bn){bn.push(...u);return}for(bn=u,bn.sort((v,y)=>We(v)-We(y)),Jn=0;Jn<bn.length;Jn++)bn[Jn]();bn=null,Jn=0}}var We=a=>a.id==null?1/0:a.id,nt=(a,u)=>{var v=We(a)-We(u);if(v===0){if(a.pre&&!u.pre)return-1;if(u.pre&&!a.pre)return 1}return v};function Ot(a){z=!1,at=!0,J.sort(nt);var u=E.NOOP;try{for(dn=0;dn<J.length;dn++){var v=J[dn];v&&v.active!==!1&&Tt(v,null,14)}}finally{dn=0,J.length=0,Pn(),at=!1,pi=null,(J.length||cn.length)&&Ot()}}h.devtools=void 0;var Xt=[];function On(a,u){var v,y;if(h.devtools=a,h.devtools)h.devtools.enabled=!0,Xt.forEach(O=>{var{event:F,args:W}=O;return h.devtools.emit(F,...W)}),Xt=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((y=(v=window.navigator)===null||v===void 0?void 0:v.userAgent)===null||y===void 0?void 0:y.includes("jsdom"))){var P=u.__VUE_DEVTOOLS_HOOK_REPLAY__=u.__VUE_DEVTOOLS_HOOK_REPLAY__||[];P.push(O=>{On(O,u)}),setTimeout(()=>{h.devtools||(u.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Xt=[])},3e3)}else Xt=[]}function on(a,u){if(!a.isUnmounted){for(var v=a.vnode.props||E.EMPTY_OBJ,y=arguments.length,P=new Array(y>2?y-2:0),O=2;O<y;O++)P[O-2]=arguments[O];var F=P,W=u.startsWith("update:"),G=W&&u.slice(7);if(G&&G in v){var le="".concat(G==="modelValue"?"model":G,"Modifiers"),{number:ze,trim:ot}=v[le]||E.EMPTY_OBJ;ot&&(F=P.map(wt=>E.isString(wt)?wt.trim():wt)),ze&&(F=P.map(E.looseToNumber))}var ge,Ge=v[ge=E.toHandlerKey(u)]||v[ge=E.toHandlerKey(E.camelize(u))];!Ge&&W&&(Ge=v[ge=E.toHandlerKey(E.hyphenate(u))]),Ge&&I(Ge,a,6,F);var Xe=v[ge+"Once"];if(Xe){if(!a.emitted)a.emitted={};else if(a.emitted[ge])return;a.emitted[ge]=!0,I(Xe,a,6,F)}}}function or(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,y=u.emitsCache,P=y.get(a);if(P!==void 0)return P;var O=a.emits,F={},W=!1;if(!E.isFunction(a)){var G=le=>{var ze=or(le,u,!0);ze&&(W=!0,E.extend(F,ze))};!v&&u.mixins.length&&u.mixins.forEach(G),a.extends&&G(a.extends),a.mixins&&a.mixins.forEach(G)}return!O&&!W?(E.isObject(a)&&y.set(a,null),null):(E.isArray(O)?O.forEach(le=>F[le]=null):E.extend(F,O),E.isObject(a)&&y.set(a,F),F)}function Wn(a,u){return!a||!E.isOn(u)?!1:(u=u.slice(2).replace(/Once$/,""),E.hasOwn(a,u[0].toLowerCase()+u.slice(1))||E.hasOwn(a,E.hyphenate(u))||E.hasOwn(a,u))}var Cn=null,hn=null;function wr(a){var u=Cn;return Cn=a,hn=a&&a.type.__scopeId||null,u}function Kr(a){hn=a}function Co(){hn=null}var ua=a=>Ui;function Ui(a){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Cn;if(!u||a._n)return a;var v=function(){v._d&&$t(-1);var y=wr(u),P;try{P=a(...arguments)}finally{wr(y),v._d&&$t(1)}return P};return v._n=!0,v._c=!0,v._d=!0,v}function Jo(){}function Ko(a){var{type:u,vnode:v,proxy:y,withProxy:P,props:O,propsOptions:[F],slots:W,attrs:G,emit:le,render:ze,renderCache:ot,data:ge,setupState:Ge,ctx:Xe,inheritAttrs:wt}=a,it,Ce,Ee=wr(a);try{if(v.shapeFlag&4){var Te=P||y;it=Un(ze.call(Te,Te,ot,O,Ge,ge,Xe)),Ce=G}else{var st=u;it=Un(st.length>1?st(O,{attrs:G,slots:W,emit:le}):st(O,null)),Ce=u.props?G:ri(G)}}catch(l){Ie.length=0,St(l,a,1),it=Vt(ce)}var ke=it;if(Ce&&wt!==!1){var Ct=Object.keys(Ce),{shapeFlag:i}=ke;Ct.length&&i&(1|6)&&(F&&Ct.some(E.isModelListener)&&(Ce=Ao(Ce,F)),ke=ci(ke,Ce))}return v.dirs&&(ke=ci(ke),ke.dirs=ke.dirs?ke.dirs.concat(v.dirs):v.dirs),v.transition&&(ke.transition=v.transition),it=ke,wr(Ee),it}function $i(a){for(var u,v=0;v<a.length;v++){var y=a[v];if(fn(y)){if(y.type!==ce||y.children==="v-if"){if(u)return;u=y}}else return}return u}var ri=a=>{var u;for(var v in a)(v==="class"||v==="style"||E.isOn(v))&&((u||(u={}))[v]=a[v]);return u},Ao=(a,u)=>{var v={};for(var y in a)(!E.isModelListener(y)||!(y.slice(9)in u))&&(v[y]=a[y]);return v};function Oo(a,u,v){var{props:y,children:P,component:O}=a,{props:F,children:W,patchFlag:G}=u,le=O.emitsOptions;if(u.dirs||u.transition)return!0;if(v&&G>=0){if(G&1024)return!0;if(G&16)return y?To(y,F,le):!!F;if(G&8)for(var ze=u.dynamicProps,ot=0;ot<ze.length;ot++){var ge=ze[ot];if(F[ge]!==y[ge]&&!Wn(le,ge))return!0}}else return(P||W)&&(!W||!W.$stable)?!0:y===F?!1:y?F?To(y,F,le):!0:!!F;return!1}function To(a,u,v){var y=Object.keys(u);if(y.length!==Object.keys(a).length)return!0;for(var P=0;P<y.length;P++){var O=y[P];if(u[O]!==a[O]&&!Wn(v,O))return!0}return!1}function Xi(a,u){for(var{vnode:v,parent:y}=a;y&&y.subTree===v;)(v=y.vnode).el=u,y=y.parent}var mi=a=>a.__isSuspense,Po={name:"Suspense",__isSuspense:!0,process(a,u,v,y,P,O,F,W,G,le){a==null?Cr(u,v,y,P,O,F,W,G,le):Qi(a,u,v,y,P,F,W,G,le)},hydrate:eo,create:Kn,normalize:Io},uo=Po;function kn(a,u){var v=a.props&&a.props[u];E.isFunction(v)&&v()}function Cr(a,u,v,y,P,O,F,W,G){var{p:le,o:{createElement:ze}}=G,ot=ze("div"),ge=a.suspense=Kn(a,P,y,u,ot,v,O,F,W,G);le(null,ge.pendingBranch=a.ssContent,ot,null,y,ge,O,F),ge.deps>0?(kn(a,"onPending"),kn(a,"onFallback"),le(null,a.ssFallback,u,v,y,null,O,F),ar(ge,a.ssFallback)):ge.resolve()}function Qi(a,u,v,y,P,O,F,W,G){var{p:le,um:ze,o:{createElement:ot}}=G,ge=u.suspense=a.suspense;ge.vnode=u,u.el=a.el;var Ge=u.ssContent,Xe=u.ssFallback,{activeBranch:wt,pendingBranch:it,isInFallback:Ce,isHydrating:Ee}=ge;if(it)ge.pendingBranch=Ge,Gt(Ge,it)?(le(it,Ge,ge.hiddenContainer,null,P,ge,O,F,W),ge.deps<=0?ge.resolve():Ce&&(le(wt,Xe,v,y,P,null,O,F,W),ar(ge,Xe))):(ge.pendingId++,Ee?(ge.isHydrating=!1,ge.activeBranch=it):ze(it,P,ge),ge.deps=0,ge.effects.length=0,ge.hiddenContainer=ot("div"),Ce?(le(null,Ge,ge.hiddenContainer,null,P,ge,O,F,W),ge.deps<=0?ge.resolve():(le(wt,Xe,v,y,P,null,O,F,W),ar(ge,Xe))):wt&&Gt(Ge,wt)?(le(wt,Ge,v,y,P,ge,O,F,W),ge.resolve(!0)):(le(null,Ge,ge.hiddenContainer,null,P,ge,O,F,W),ge.deps<=0&&ge.resolve()));else if(wt&&Gt(Ge,wt))le(wt,Ge,v,y,P,ge,O,F,W),ar(ge,Ge);else if(kn(u,"onPending"),ge.pendingBranch=Ge,ge.pendingId++,le(null,Ge,ge.hiddenContainer,null,P,ge,O,F,W),ge.deps<=0)ge.resolve();else{var{timeout:Te,pendingId:st}=ge;Te>0?setTimeout(()=>{ge.pendingId===st&&ge.fallback(Xe)},Te):Te===0&&ge.fallback(Xe)}}function Kn(a,u,v,y,P,O,F,W,G,le){var ze=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:ot,m:ge,um:Ge,n:Xe,o:{parentNode:wt,remove:it}}=le,Ce=a.props?E.toNumber(a.props.timeout):void 0,Ee={vnode:a,parent:u,parentComponent:v,isSVG:F,container:y,hiddenContainer:P,anchor:O,deps:0,pendingId:0,timeout:typeof Ce=="number"?Ce:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:ze,isUnmounted:!1,effects:[],resolve(){var Te=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:st,activeBranch:ke,pendingBranch:Ct,pendingId:i,effects:l,parentComponent:d,container:_}=Ee;if(Ee.isHydrating)Ee.isHydrating=!1;else if(!Te){var A=ke&&Ct.transition&&Ct.transition.mode==="out-in";A&&(ke.transition.afterLeave=()=>{i===Ee.pendingId&&ge(Ct,_,C,0)});var{anchor:C}=Ee;ke&&(C=Xe(ke),Ge(ke,d,Ee,!0)),A||ge(Ct,_,C,0)}ar(Ee,Ct),Ee.pendingBranch=null,Ee.isInFallback=!1;for(var k=Ee.parent,L=!1;k;){if(k.pendingBranch){k.effects.push(...l),L=!0;break}k=k.parent}L||Jr(l),Ee.effects=[],kn(st,"onResolve")},fallback(Te){if(!!Ee.pendingBranch){var{vnode:st,activeBranch:ke,parentComponent:Ct,container:i,isSVG:l}=Ee;kn(st,"onFallback");var d=Xe(ke),_=()=>{!Ee.isInFallback||(ot(null,Te,i,d,Ct,null,l,W,G),ar(Ee,Te))},A=Te.transition&&Te.transition.mode==="out-in";A&&(ke.transition.afterLeave=_),Ee.isInFallback=!0,Ge(ke,Ct,null,!0),A||_()}},move(Te,st,ke){Ee.activeBranch&&ge(Ee.activeBranch,Te,st,ke),Ee.container=Te},next(){return Ee.activeBranch&&Xe(Ee.activeBranch)},registerDep(Te,st){var ke=!!Ee.pendingBranch;ke&&Ee.deps++;var Ct=Te.vnode.el;Te.asyncDep.catch(i=>{St(i,Te,0)}).then(i=>{if(!(Te.isUnmounted||Ee.isUnmounted||Ee.pendingId!==Te.suspenseId)){Te.asyncResolved=!0;var{vnode:l}=Te;Na(Te,i,!1),Ct&&(l.el=Ct);var d=!Ct&&Te.subTree.el;st(Te,l,wt(Ct||Te.subTree.el),Ct?null:Xe(Te.subTree),Ee,F,G),d&&it(d),Xi(Te,l.el),ke&&--Ee.deps===0&&Ee.resolve()}})},unmount(Te,st){Ee.isUnmounted=!0,Ee.activeBranch&&Ge(Ee.activeBranch,v,Te,st),Ee.pendingBranch&&Ge(Ee.pendingBranch,v,Te,st)}};return Ee}function eo(a,u,v,y,P,O,F,W,G){var le=u.suspense=Kn(u,y,v,a.parentNode,s.createElement("div"),null,P,O,F,W,!0),ze=G(a,le.pendingBranch=u.ssContent,v,le,O,F);return le.deps===0&&le.resolve(),ze}function Io(a){var{shapeFlag:u,children:v}=a,y=u&32;a.ssContent=fo(y?v.default:v),a.ssFallback=y?fo(v.fallback):Vt(ce)}function fo(a){var u;if(E.isFunction(a)){var v=pt&&a._c;v&&(a._d=!1,we()),a=a(),v&&(a._d=!0,u=fe,ut())}if(E.isArray(a)){var y=$i(a);a=y}return a=Un(a),u&&!a.dynamicChildren&&(a.dynamicChildren=u.filter(P=>P!==a)),a}function ii(a,u){u&&u.pendingBranch?E.isArray(a)?u.effects.push(...a):u.effects.push(a):Jr(a)}function ar(a,u){a.activeBranch=u;var{vnode:v,parentComponent:y}=a,P=v.el=u.el;y&&y.subTree===v&&(y.vnode.el=P,Xi(y,P))}function kr(a,u){if(tn){var v=tn.provides,y=tn.parent&&tn.parent.provides;y===v&&(v=tn.provides=Object.create(y)),v[a]=u,tn.type.mpType==="app"&&tn.appContext.app.provide(a,u)}}function Nn(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,y=tn||Cn;if(y){var P=y.parent==null?y.vnode.appContext&&y.vnode.appContext.provides:y.parent.provides;if(P&&a in P)return P[a];if(arguments.length>1)return v&&E.isFunction(u)?u.call(y.proxy):u}}function Zn(a,u){return vr(a,null,u)}function Ni(a,u){return vr(a,null,{flush:"post"})}function Hi(a,u){return vr(a,null,{flush:"sync"})}var oi={};function Fr(a,u,v){return vr(a,u,v)}function vr(a,u){var{immediate:v,deep:y,flush:P,onTrack:O,onTrigger:F}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:E.EMPTY_OBJ,W=x.getCurrentScope()===(tn==null?void 0:tn.scope)?tn:null,G,le=!1,ze=!1;if(x.isRef(a)?(G=()=>a.value,le=x.isShallow(a)):x.isReactive(a)?(G=()=>a,y=!0):E.isArray(a)?(ze=!0,le=a.some(ke=>x.isReactive(ke)||x.isShallow(ke)),G=()=>a.map(ke=>{if(x.isRef(ke))return ke.value;if(x.isReactive(ke))return Vr(ke);if(E.isFunction(ke))return Tt(ke,W,2)})):E.isFunction(a)?u?G=()=>Tt(a,W,2):G=()=>{if(!(W&&W.isUnmounted))return ge&&ge(),I(a,W,3,[Ge])}:G=E.NOOP,u&&y){var ot=G;G=()=>Vr(ot())}var ge,Ge=ke=>{ge=Te.onStop=()=>{Tt(ke,W,4)}},Xe;if(h.isInSSRComponentSetup)if(Ge=E.NOOP,u?v&&I(u,W,3,[G(),ze?[]:void 0,Ge]):G(),P==="sync"){var wt=Eo();Xe=wt.__watcherHandles||(wt.__watcherHandles=[])}else return E.NOOP;var it=ze?new Array(a.length).fill(oi):oi,Ce=()=>{if(!!Te.active)if(u){var ke=Te.run();(y||le||(ze?ke.some((Ct,i)=>E.hasChanged(Ct,it[i])):E.hasChanged(ke,it)))&&(ge&&ge(),I(u,W,3,[ke,it===oi?void 0:ze&&it[0]===oi?[]:it,Ge]),it=ke)}else Te.run()};Ce.allowRecurse=!!u;var Ee;P==="sync"?Ee=Ce:P==="post"?Ee=()=>ur(Ce,W&&W.suspense):(Ce.pre=!0,W&&(Ce.id=W.uid),Ee=()=>Sn(Ce));var Te=new x.ReactiveEffect(G,Ee);u?v?Ce():it=Te.run():P==="post"?ur(Te.run.bind(Te),W&&W.suspense):Te.run();var st=()=>{Te.stop(),W&&W.scope&&E.remove(W.scope.effects,Te)};return Xe&&Xe.push(st),st}function ki(a,u,v){var y=this.proxy,P=E.isString(a)?a.includes(".")?No(y,a):()=>y[a]:a.bind(y,y),O;E.isFunction(u)?O=u:(O=u.handler,v=u);var F=tn;jn(this);var W=vr(P,O.bind(y),v);return F?jn(F):qn(),W}function No(a,u){var v=u.split(".");return()=>{for(var y=a,P=0;P<v.length&&y;P++)y=y[v[P]];return y}}function Vr(a,u){if(!E.isObject(a)||a.__v_skip||(u=u||new Set,u.has(a)))return a;if(u.add(a),x.isRef(a))Vr(a.value,u);else if(E.isArray(a))for(var v=0;v<a.length;v++)Vr(a[v],u);else if(E.isSet(a)||E.isMap(a))a.forEach(P=>{Vr(P,u)});else if(E.isPlainObject(a))for(var y in a)Vr(a[y],u);return a}function Zr(){var a={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return er(()=>{a.isMounted=!0}),nr(()=>{a.isUnmounting=!0}),a}var Ar=[Function,Array],gn={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Ar,onEnter:Ar,onAfterEnter:Ar,onEnterCancelled:Ar,onBeforeLeave:Ar,onLeave:Ar,onAfterLeave:Ar,onLeaveCancelled:Ar,onBeforeAppear:Ar,onAppear:Ar,onAfterAppear:Ar,onAppearCancelled:Ar},Xr={name:"BaseTransition",props:gn,setup(a,u){var{slots:v}=u,y=mn(),P=Zr(),O;return()=>{var F=v.default&&Or(v.default(),!0);if(!(!F||!F.length)){var W=F[0];if(F.length>1){for(var G of F)if(G.type!==ce){W=G;break}}var le=x.toRaw(a),{mode:ze}=le;if(P.isLeaving)return _i(W);var ot=bi(W);if(!ot)return _i(W);var ge=Oe(ot,le,P,y);Ei(ot,ge);var Ge=y.subTree,Xe=Ge&&bi(Ge),wt=!1,{getTransitionKey:it}=ot.type;if(it){var Ce=it();O===void 0?O=Ce:Ce!==O&&(O=Ce,wt=!0)}if(Xe&&Xe.type!==ce&&(!Gt(ot,Xe)||wt)){var Ee=Oe(Xe,le,P,y);if(Ei(Xe,Ee),ze==="out-in")return P.isLeaving=!0,Ee.afterLeave=()=>{P.isLeaving=!1,y.update.active!==!1&&y.update()},_i(W);ze==="in-out"&&ot.type!==ce&&(Ee.delayLeave=(Te,st,ke)=>{var Ct=Lt(P,Xe);Ct[String(Xe.key)]=Xe,Te._leaveCb=()=>{st(),Te._leaveCb=void 0,delete ge.delayedLeave},ge.delayedLeave=ke})}return W}}}},Ur=Xr;function Lt(a,u){var{leavingVNodes:v}=a,y=v.get(u.type);return y||(y=Object.create(null),v.set(u.type,y)),y}function Oe(a,u,v,y){var{appear:P,mode:O,persisted:F=!1,onBeforeEnter:W,onEnter:G,onAfterEnter:le,onEnterCancelled:ze,onBeforeLeave:ot,onLeave:ge,onAfterLeave:Ge,onLeaveCancelled:Xe,onBeforeAppear:wt,onAppear:it,onAfterAppear:Ce,onAppearCancelled:Ee}=u,Te=String(a.key),st=Lt(v,a),ke=(l,d)=>{l&&I(l,y,9,d)},Ct=(l,d)=>{var _=d[1];ke(l,d),E.isArray(l)?l.every(A=>A.length<=1)&&_():l.length<=1&&_()},i={mode:O,persisted:F,beforeEnter(l){var d=W;if(!v.isMounted)if(P)d=wt||W;else return;l._leaveCb&&l._leaveCb(!0);var _=st[Te];_&&Gt(a,_)&&_.el._leaveCb&&_.el._leaveCb(),ke(d,[l])},enter(l){var d=G,_=le,A=ze;if(!v.isMounted)if(P)d=it||G,_=Ce||le,A=Ee||ze;else return;var C=!1,k=l._enterCb=L=>{C||(C=!0,L?ke(A,[l]):ke(_,[l]),i.delayedLeave&&i.delayedLeave(),l._enterCb=void 0)};d?Ct(d,[l,k]):k()},leave(l,d){var _=String(a.key);if(l._enterCb&&l._enterCb(!0),v.isUnmounting)return d();ke(ot,[l]);var A=!1,C=l._leaveCb=k=>{A||(A=!0,d(),k?ke(Xe,[l]):ke(Ge,[l]),l._leaveCb=void 0,st[_]===a&&delete st[_])};st[_]=a,ge?Ct(ge,[l,C]):C()},clone(l){return Oe(l,u,v,y)}};return i}function _i(a){if(Pr(a))return a=ci(a),a.children=null,a}function bi(a){return Pr(a)?a.children?a.children[0]:void 0:a}function Ei(a,u){a.shapeFlag&6&&a.component?Ei(a.component.subTree,u):a.shapeFlag&128?(a.ssContent.transition=u.clone(a.ssContent),a.ssFallback.transition=u.clone(a.ssFallback)):a.transition=u}function Or(a){for(var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,v=arguments.length>2?arguments[2]:void 0,y=[],P=0,O=0;O<a.length;O++){var F=a[O],W=v==null?F.key:String(v)+String(F.key!=null?F.key:O);F.type===q?(F.patchFlag&128&&P++,y=y.concat(Or(F.children,u,W))):(u||F.type!==ce)&&y.push(W!=null?ci(F,{key:W}):F)}if(P>1)for(var G=0;G<y.length;G++)y[G].patchFlag=-2;return y}function Ri(a){return E.isFunction(a)?{setup:a,name:a.name}:a}var Tr=a=>!!a.type.__asyncLoader;function Rr(a){E.isFunction(a)&&(a={loader:a});var{loader:u,loadingComponent:v,errorComponent:y,delay:P=200,timeout:O,suspensible:F=!0,onError:W}=a,G=null,le,ze=0,ot=()=>(ze++,G=null,ge()),ge=()=>{var Ge;return G||(Ge=G=u().catch(Xe=>{if(Xe=Xe instanceof Error?Xe:new Error(String(Xe)),W)return new Promise((wt,it)=>{var Ce=()=>wt(ot()),Ee=()=>it(Xe);W(Xe,Ce,Ee,ze+1)});throw Xe}).then(Xe=>Ge!==G&&G?G:(Xe&&(Xe.__esModule||Xe[Symbol.toStringTag]==="Module")&&(Xe=Xe.default),le=Xe,Xe)))};return Ri({name:"AsyncComponentWrapper",__asyncLoader:ge,get __asyncResolved(){return le},setup(){var Ge=tn;if(le)return()=>ai(le,Ge);var Xe=Ee=>{G=null,St(Ee,Ge,13)};if(F&&Ge.suspense||h.isInSSRComponentSetup)return ge().then(Ee=>()=>ai(Ee,Ge)).catch(Ee=>(Xe(Ee),()=>y?Vt(y,{error:Ee}):null));var wt=x.ref(!1),it=x.ref(),Ce=x.ref(!!P);return P&&setTimeout(()=>{Ce.value=!1},P),O!=null&&setTimeout(()=>{if(!wt.value&&!it.value){var Ee=new Error("Async component timed out after ".concat(O,"ms."));Xe(Ee),it.value=Ee}},O),ge().then(()=>{wt.value=!0,Ge.parent&&Pr(Ge.parent.vnode)&&Sn(Ge.parent.update)}).catch(Ee=>{Xe(Ee),it.value=Ee}),()=>{if(wt.value&&le)return ai(le,Ge);if(it.value&&y)return Vt(y,{error:it.value});if(v&&!Ce.value)return Vt(v)}}})}function ai(a,u){var{ref:v,props:y,children:P,ce:O}=u.vnode,F=Vt(a,y,P);return F.ref=v,F.ce=O,delete u.vnode.ce,F}var Pr=a=>a.type.__isKeepAlive,yi={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(a,u){var{slots:v}=u,y=mn(),P=y.ctx;if(!P.renderer)return()=>{var Te=v.default&&v.default();return Te&&Te.length===1?Te[0]:Te};var O=new Map,F=new Set,W=null,G=y.suspense,{renderer:{p:le,m:ze,um:ot,o:{createElement:ge}}}=P,Ge=ge("div");P.activate=(Te,st,ke,Ct,i)=>{var l=Te.component;ze(Te,st,ke,0,G),le(l.vnode,Te,st,ke,l,G,Ct,Te.slotScopeIds,i),ur(()=>{l.isDeactivated=!1,l.a&&E.invokeArrayFns(l.a);var d=Te.props&&Te.props.onVnodeMounted;d&&Er(d,l.parent,Te)},G)},P.deactivate=Te=>{var st=Te.component;ze(Te,Ge,null,1,G),ur(()=>{st.da&&E.invokeArrayFns(st.da);var ke=Te.props&&Te.props.onVnodeUnmounted;ke&&Er(ke,st.parent,Te),st.isDeactivated=!0},G)};function Xe(Te){sr(Te),ot(Te,y,G,!0)}function wt(Te){O.forEach((st,ke)=>{var Ct=Li(st.type);Ct&&(!Te||!Te(Ct))&&it(ke)})}function it(Te){var st=O.get(Te);!W||!Gt(st,W)?Xe(st):W&&sr(W),O.delete(Te),F.delete(Te)}Fr(()=>[a.include,a.exclude],Te=>{var[st,ke]=Te;st&&wt(Ct=>ji(st,Ct)),ke&&wt(Ct=>!ji(ke,Ct))},{flush:"post",deep:!0});var Ce=null,Ee=()=>{Ce!=null&&O.set(Ce,Si(y.subTree))};return er(Ee),Gn(Ee),nr(()=>{O.forEach(Te=>{var{subTree:st,suspense:ke}=y,Ct=Si(st);if(Te.type===Ct.type&&Te.key===Ct.key){sr(Ct);var i=Ct.component.da;i&&ur(i,ke);return}Xe(Te)})}),()=>{if(Ce=null,!v.default)return null;var Te=v.default(),st=Te[0];if(Te.length>1)return W=null,Te;if(!fn(st)||!(st.shapeFlag&4)&&!(st.shapeFlag&128))return W=null,st;var ke=Si(st),Ct=ke.type,i=Li(Tr(ke)?ke.type.__asyncResolved||{}:Ct),{include:l,exclude:d,max:_}=a;if(l&&(!i||!ji(l,i))||d&&i&&ji(d,i))return W=ke,st;var A=ke.key==null?Ct:ke.key,C=O.get(A);return ke.el&&(ke=ci(ke),st.shapeFlag&128&&(st.ssContent=ke)),Ce=A,C?(ke.el=C.el,ke.component=C.component,ke.transition&&Ei(ke,ke.transition),ke.shapeFlag|=512,F.delete(A),F.add(A)):(F.add(A),_&&F.size>parseInt(_,10)&&it(F.values().next().value)),ke.shapeFlag|=256,W=ke,mi(st.type)?st:ke}}},un=yi;function ji(a,u){return E.isArray(a)?a.some(v=>ji(v,u)):E.isString(a)?a.split(",").includes(u):E.isRegExp(a)?a.test(u):!1}function $r(a,u){En(a,"a",u)}function to(a,u){En(a,"da",u)}function En(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:tn,y=a.__wdc||(a.__wdc=()=>{for(var O=v;O;){if(O.isDeactivated)return;O=O.parent}return a()});if(xi(u,y,v),v)for(var P=v.parent;P&&P.parent;)Pr(P.parent.vnode)&&Hr(y,u,v,P),P=P.parent}function Hr(a,u,v,y){var P=xi(u,a,y,!0);cr(()=>{E.remove(y[u],P)},v)}function sr(a){a.shapeFlag&=~256,a.shapeFlag&=~512}function Si(a){return a.shapeFlag&128?a.ssContent:a}function xi(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:tn,y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(v){if(Ve.isRootHook(a)&&v!==v.root&&(v=v.root,Ve.isRootImmediateHook(a))){var P=v.proxy;I(u.bind(P),v,a,Ve.ON_LOAD===a?[P.$page.options]:[])}var O=v[a]||(v[a]=[]),F=u.__weh||(u.__weh=function(){if(!v.isUnmounted){x.pauseTracking(),jn(v);for(var W=arguments.length,G=new Array(W),le=0;le<W;le++)G[le]=arguments[le];var ze=I(u,v,a,G);return qn(),x.resetTracking(),ze}});return y?O.unshift(F):O.push(F),F}}var mr=a=>function(u){var v=arguments.length>1&&arguments[1]!==void 0?arguments[1]:tn;return(!h.isInSSRComponentSetup||a==="sp")&&xi(a,function(){return u(...arguments)},v)},Qr=mr("bm"),er=mr("m"),tr=mr("bu"),Gn=mr("u"),nr=mr("bum"),cr=mr("um"),ho=mr("sp"),go=mr("rtg"),ko=mr("rtc");function no(a){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:tn;xi("ec",a,u)}function Ro(a,u){var v=Cn;if(v===null)return a;for(var y=Vo(v)||v.proxy,P=a.dirs||(a.dirs=[]),O=0;O<u.length;O++){var[F,W,G,le=E.EMPTY_OBJ]=u[O];F&&(E.isFunction(F)&&(F={mounted:F,updated:F}),F.deep&&Vr(W),P.push({dir:F,instance:y,value:W,oldValue:void 0,arg:G,modifiers:le}))}return a}function jr(a,u,v,y){for(var P=a.dirs,O=u&&u.dirs,F=0;F<P.length;F++){var W=P[F];O&&(W.oldValue=O[F].value);var G=W.dir[y];G&&(x.pauseTracking(),I(G,v,8,[a.el,W,a,u]),x.resetTracking())}}var xr="components",po="directives";function xo(a,u){return Mi(xr,a,!0,u)||a}var ro=Symbol();function Bi(a){return E.isString(a)?Mi(xr,a,!1)||a:a||ro}function vo(a){return Mi(po,a)}function Mi(a,u){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,y=Cn||tn;if(y){var P=y.type;if(a===xr){var O=Li(P,!1);if(O&&(O===u||O===E.camelize(u)||O===E.capitalize(E.camelize(u))))return P}var F=zi(y[a]||P[a],u)||zi(y.appContext[a],u);return!F&&v?P:F}}function zi(a,u){return a&&(a[u]||a[E.camelize(u)]||a[E.capitalize(E.camelize(u))])}function Zo(a,u,v,y){var P,O=v&&v[y];if(E.isArray(a)||E.isString(a)){P=new Array(a.length);for(var F=0,W=a.length;F<W;F++)P[F]=u(a[F],F,void 0,O&&O[F])}else if(typeof a=="number"){P=new Array(a);for(var G=0;G<a;G++)P[G]=u(G+1,G,void 0,O&&O[G])}else if(E.isObject(a))if(a[Symbol.iterator])P=Array.from(a,(Ge,Xe)=>u(Ge,Xe,void 0,O&&O[Xe]));else{var le=Object.keys(a);P=new Array(le.length);for(var ze=0,ot=le.length;ze<ot;ze++){var ge=le[ze];P[ze]=u(a[ge],ge,ze,O&&O[ze])}}else P=[];return v&&(v[y]=P),P}function B(a,u){for(var v=function(P){var O=u[P];if(E.isArray(O))for(var F=0;F<O.length;F++)a[O[F].name]=O[F].fn;else O&&(a[O.name]=O.key?function(){var W=O.fn(...arguments);return W&&(W.key=O.key),W}:O.fn)},y=0;y<u.length;y++)v(y);return a}function Q(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},y=arguments.length>3?arguments[3]:void 0,P=arguments.length>4?arguments[4]:void 0;if(Cn.isCE||Cn.parent&&Tr(Cn.parent)&&Cn.parent.isCE)return u!=="default"&&(v.name=u),Vt("slot",v,y&&y());var O=a[u];O&&O._c&&(O._d=!1),we();var F=O&&he(O(v)),W=Mt(q,{key:v.key||F&&F.key||"_".concat(u)},F||(y?y():[]),F&&a._===1?64:-2);return!P&&W.scopeId&&(W.slotScopeIds=[W.scopeId+"-s"]),O&&O._c&&(O._d=!0),W}function he(a){return a.some(u=>fn(u)?!(u.type===ce||u.type===q&&!he(u.children)):!0)?a:null}function ae(a,u){var v={};for(var y in a)v[u&&/[A-Z]/.test(y)?"on:".concat(y):E.toHandlerKey(y)]=a[y];return v}var de=a=>a?Ai(a)?Vo(a)||a.proxy:de(a.parent):null,mt=E.extend(Object.create(null),{$:a=>a,$el:a=>a.vnode.el,$data:a=>a.data,$props:a=>a.props,$attrs:a=>a.attrs,$slots:a=>a.slots,$refs:a=>a.refs,$parent:a=>de(a.parent),$root:a=>de(a.root),$emit:a=>a.emit,$options:a=>Ln(a),$forceUpdate:a=>a.f||(a.f=()=>Sn(a.update)),$nextTick:a=>a.n||(a.n=qr.bind(a.proxy)),$watch:a=>ki.bind(a)}),kt=(a,u)=>a!==E.EMPTY_OBJ&&!a.__isScriptSetup&&E.hasOwn(a,u),X={get(a,u){var{_:v}=a,{ctx:y,setupState:P,data:O,props:F,accessCache:W,type:G,appContext:le}=v,ze;if(u[0]!=="$"){var ot=W[u];if(ot!==void 0)switch(ot){case 1:return P[u];case 2:return O[u];case 4:return y[u];case 3:return F[u]}else{if(kt(P,u))return W[u]=1,P[u];if(O!==E.EMPTY_OBJ&&E.hasOwn(O,u))return W[u]=2,O[u];if((ze=v.propsOptions[0])&&E.hasOwn(ze,u))return W[u]=3,F[u];if(y!==E.EMPTY_OBJ&&E.hasOwn(y,u))return W[u]=4,y[u];ie&&(W[u]=0)}}var ge=mt[u],Ge,Xe;if(ge)return u==="$attrs"&&x.track(v,"get",u),ge(v);if((Ge=G.__cssModules)&&(Ge=Ge[u]))return Ge;if(y!==E.EMPTY_OBJ&&E.hasOwn(y,u))return W[u]=4,y[u];if(Xe=le.config.globalProperties,E.hasOwn(Xe,u))return Xe[u]},set(a,u,v){var{_:y}=a,{data:P,setupState:O,ctx:F}=y;return kt(O,u)?(O[u]=v,!0):P!==E.EMPTY_OBJ&&E.hasOwn(P,u)?(P[u]=v,!0):E.hasOwn(y.props,u)||u[0]==="$"&&u.slice(1)in y?!1:(F[u]=v,!0)},has(a,u){var{_:{data:v,setupState:y,accessCache:P,ctx:O,appContext:F,propsOptions:W}}=a,G;return!!P[u]||v!==E.EMPTY_OBJ&&E.hasOwn(v,u)||kt(y,u)||(G=W[0])&&E.hasOwn(G,u)||E.hasOwn(O,u)||E.hasOwn(mt,u)||E.hasOwn(F.config.globalProperties,u)},defineProperty(a,u,v){return v.get!=null?a._.accessCache[u]=0:E.hasOwn(v,"value")&&this.set(a,u,v.value,null),Reflect.defineProperty(a,u,v)}},K=E.extend({},X,{get(a,u){if(u!==Symbol.unscopables)return X.get(a,u,a)},has(a,u){var v=u[0]!=="_"&&!E.isGloballyWhitelisted(u);return v}}),ie=!0;function Ne(a){var u=Ln(a),v=a.proxy,y=a.ctx;ie=!1,u.beforeCreate&&Zt(u.beforeCreate,a,"bc");var{data:P,computed:O,methods:F,watch:W,provide:G,inject:le,created:ze,beforeMount:ot,mounted:ge,beforeUpdate:Ge,updated:Xe,activated:wt,deactivated:it,beforeDestroy:Ce,beforeUnmount:Ee,destroyed:Te,unmounted:st,render:ke,renderTracked:Ct,renderTriggered:i,errorCaptured:l,serverPrefetch:d,expose:_,inheritAttrs:A,components:C,directives:k,filters:L}=u,H=null;if(le&&lt(le,y,H,a.appContext.config.unwrapInjectedRef),F)for(var ne in F){var ve=F[ne];E.isFunction(ve)&&(y[ne]=ve.bind(v))}if(P){var Me=P.call(v,v);E.isObject(Me)&&(a.data=x.reactive(Me))}if(ie=!0,O){var ue=function(ye){var Fe=O[ye],Ae=E.isFunction(Fe)?Fe.bind(v,v):E.isFunction(Fe.get)?Fe.get.bind(v,v):E.NOOP,bt=!E.isFunction(Fe)&&E.isFunction(Fe.set)?Fe.set.bind(v):E.NOOP,At=bo({get:Ae,set:bt});Object.defineProperty(y,ye,{enumerable:!0,configurable:!0,get:()=>At.value,set:Je=>At.value=Je})};for(var Re in O)ue(Re)}if(W)for(var Ye in W)xn(W[Ye],y,v,Ye);if(G){var ft=E.isFunction(G)?G.call(v):G;Reflect.ownKeys(ft).forEach(ye=>{kr(ye,ft[ye])})}ze&&Zt(ze,a,"c");function Qe(ye,Fe){E.isArray(Fe)?Fe.forEach(Ae=>ye(Ae.bind(v))):Fe&&ye(Fe.bind(v))}if(Qe(Qr,ot),Qe(er,ge),Qe(tr,Ge),Qe(Gn,Xe),Qe($r,wt),Qe(to,it),Qe(no,l),Qe(ko,Ct),Qe(go,i),Qe(nr,Ee),Qe(cr,st),Qe(ho,d),E.isArray(_))if(_.length){var xe=a.exposed||(a.exposed={});_.forEach(ye=>{Object.defineProperty(xe,ye,{get:()=>v[ye],set:Fe=>v[ye]=Fe})})}else a.exposed||(a.exposed={});ke&&a.render===E.NOOP&&(a.render=ke),A!=null&&(a.inheritAttrs=A),C&&(a.components=C),k&&(a.directives=k);var me=a.appContext.config.globalProperties.$applyOptions;me&&me(u,a,v)}function lt(a,u){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;E.isArray(a)&&(a=Mo(a));var y=function(O){var F=a[O],W=void 0;E.isObject(F)?"default"in F?W=Nn(F.from||O,F.default,!0):W=Nn(F.from||O):W=Nn(F),x.isRef(W)&&v?Object.defineProperty(u,O,{enumerable:!0,configurable:!0,get:()=>W.value,set:G=>W.value=G}):u[O]=W};for(var P in a)y(P)}function Zt(a,u,v){I(E.isArray(a)?a.map(y=>y.bind(u.proxy)):a.bind(u.proxy),u,v)}function xn(a,u,v,y){var P=y.includes(".")?No(v,y):()=>v[y];if(E.isString(a)){var O=u[a];E.isFunction(O)&&Fr(P,O)}else if(E.isFunction(a))Fr(P,a.bind(v));else if(E.isObject(a))if(E.isArray(a))a.forEach(W=>xn(W,u,v,y));else{var F=E.isFunction(a.handler)?a.handler.bind(v):u[a.handler];E.isFunction(F)&&Fr(P,F,a)}}function Ln(a){var u=a.type,{mixins:v,extends:y}=u,{mixins:P,optionsCache:O,config:{optionMergeStrategies:F}}=a.appContext,W=O.get(u),G;return W?G=W:!P.length&&!v&&!y?G=u:(G={},P.length&&P.forEach(le=>_r(G,le,F,!0)),_r(G,u,F)),E.isObject(u)&&O.set(u,G),G}function _r(a,u,v){var y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:P,extends:O}=u;O&&_r(a,O,v,!0),P&&P.forEach(G=>_r(a,G,v,!0));for(var F in u)if(!(y&&F==="expose")){var W=Br[F]||v&&v[F];a[F]=W?W(a[F],u[F]):u[F]}return a}var Br={data:mo,props:Yn,emits:Yn,methods:Yn,computed:Yn,beforeCreate:Dn,created:Dn,beforeMount:Dn,mounted:Dn,beforeUpdate:Dn,updated:Dn,beforeDestroy:Dn,beforeUnmount:Dn,destroyed:Dn,unmounted:Dn,activated:Dn,deactivated:Dn,errorCaptured:Dn,serverPrefetch:Dn,components:Yn,directives:Yn,watch:Fn,provide:mo,inject:Bo};function mo(a,u){return u?a?function(){return E.extend(E.isFunction(a)?a.call(this,this):a,E.isFunction(u)?u.call(this,this):u)}:u:a}function Bo(a,u){return Yn(Mo(a),Mo(u))}function Mo(a){if(E.isArray(a)){for(var u={},v=0;v<a.length;v++)u[a[v]]=a[v];return u}return a}function Dn(a,u){return a?[...new Set([].concat(a,u))]:u}function Yn(a,u){return a?E.extend(E.extend(Object.create(null),a),u):u}function Fn(a,u){if(!a)return u;if(!u)return a;var v=E.extend(Object.create(null),a);for(var y in u)v[y]=Dn(a[y],u[y]);return v}function wi(a,u,v){var y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,P={},O={};E.def(O,Qt,1),a.propsDefaults=Object.create(null),fa(a,u,P,O);for(var F in a.propsOptions[0])F in P||(P[F]=void 0);v?a.props=y?P:x.shallowReactive(P):a.type.props?a.props=P:a.props=O,a.attrs=O}function is(a,u,v,y){var{props:P,attrs:O,vnode:{patchFlag:F}}=a,W=x.toRaw(P),[G]=a.propsOptions,le=!1;if((y||F>0)&&!(F&16)){if(F&8)for(var ze=a.vnode.dynamicProps,ot=0;ot<ze.length;ot++){var ge=ze[ot];if(!Wn(a.emitsOptions,ge)){var Ge=u[ge];if(G)if(E.hasOwn(O,ge))Ge!==O[ge]&&(O[ge]=Ge,le=!0);else{var Xe=E.camelize(ge);P[Xe]=br(G,W,Xe,Ge,a,!1)}else Ge!==O[ge]&&(O[ge]=Ge,le=!0)}}}else{fa(a,u,P,O)&&(le=!0);var wt;for(var it in W)(!u||!E.hasOwn(u,it)&&((wt=E.hyphenate(it))===it||!E.hasOwn(u,wt)))&&(G?v&&(v[it]!==void 0||v[wt]!==void 0)&&(P[it]=br(G,W,it,void 0,a,!0)):delete P[it]);if(O!==W)for(var Ce in O)(!u||!E.hasOwn(u,Ce)&&!0)&&(delete O[Ce],le=!0)}le&&x.trigger(a,"set","$attrs")}function fa(a,u,v,y){var[P,O]=a.propsOptions,F=!1,W;if(u){for(var G in u)if(!E.isReservedProp(G)){var le=u[G],ze=void 0;P&&E.hasOwn(P,ze=E.camelize(G))?!O||!O.includes(ze)?v[ze]=le:(W||(W={}))[ze]=le:Wn(a.emitsOptions,G)||(!(G in y)||le!==y[G])&&(y[G]=le,F=!0)}}if(O)for(var ot=x.toRaw(v),ge=W||E.EMPTY_OBJ,Ge=0;Ge<O.length;Ge++){var Xe=O[Ge];v[Xe]=br(P,ot,Xe,ge[Xe],a,!E.hasOwn(ge,Xe))}return F}function br(a,u,v,y,P,O){var F=a[v];if(F!=null){var W=E.hasOwn(F,"default");if(W&&y===void 0){var G=F.default;if(F.type!==Function&&E.isFunction(G)){var{propsDefaults:le}=P;v in le?y=le[v]:(jn(P),y=le[v]=G.call(null,u),qn())}else y=G}F[0]&&(O&&!W?y=!1:F[1]&&(y===""||y===E.hyphenate(v))&&(y=!0))}return y}function Pa(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,y=u.propsCache,P=y.get(a);if(P)return P;var O=a.props,F={},W=[],G=!1;if(!E.isFunction(a)){var le=Te=>{G=!0;var[st,ke]=Pa(Te,u,!0);E.extend(F,st),ke&&W.push(...ke)};!v&&u.mixins.length&&u.mixins.forEach(le),a.extends&&le(a.extends),a.mixins&&a.mixins.forEach(le)}if(!O&&!G)return E.isObject(a)&&y.set(a,E.EMPTY_ARR),E.EMPTY_ARR;if(E.isArray(O))for(var ze=0;ze<O.length;ze++){var ot=E.camelize(O[ze]);Ua(ot)&&(F[ot]=E.EMPTY_OBJ)}else if(O)for(var ge in O){var Ge=E.camelize(ge);if(Ua(Ge)){var Xe=O[ge],wt=F[Ge]=E.isArray(Xe)||E.isFunction(Xe)?{type:Xe}:Object.assign({},Xe);if(wt){var it=ja(Boolean,wt.type),Ce=ja(String,wt.type);wt[0]=it>-1,wt[1]=Ce<0||it<Ce,(it>-1||E.hasOwn(wt,"default"))&&W.push(Ge)}}}var Ee=[F,W];return E.isObject(a)&&y.set(a,Ee),Ee}function Ua(a){return a[0]!=="$"}function $a(a){var u=a&&a.toString().match(/^\s*(function|class) (\w+)/);return u?u[2]:a===null?"null":""}function Ha(a,u){return $a(a)===$a(u)}function ja(a,u){return E.isArray(u)?u.findIndex(v=>Ha(v,a)):E.isFunction(u)&&Ha(u,a)?0:-1}var da=a=>a[0]==="_"||a==="$stable",Ia=a=>E.isArray(a)?a.map(Un):[Un(a)],Vn=(a,u,v)=>{if(u._n)return u;var y=Ui(function(){return Ia(u(...arguments))},v);return y._c=!1,y},Lo=(a,u,v)=>{var y=a._ctx;for(var P in a)if(!da(P)){var O=a[P];E.isFunction(O)?u[P]=Vn(P,O,y):O!=null&&function(){var F=Ia(O);u[P]=()=>F}()}},Xo=(a,u)=>{var v=Ia(u);a.slots.default=()=>v},Wi=(a,u)=>{if(a.vnode.shapeFlag&32){var v=u._;v?(a.slots=x.toRaw(u),E.def(u,"_",v)):Lo(u,a.slots={})}else a.slots={},u&&Xo(a,u);E.def(a.slots,Qt,1)},os=(a,u,v)=>{var{vnode:y,slots:P}=a,O=!0,F=E.EMPTY_OBJ;if(y.shapeFlag&32){var W=u._;W?v&&W===1?O=!1:(E.extend(P,u),!v&&W===1&&delete P._):(O=!u.$stable,Lo(u,P)),F=u}else u&&(Xo(a,u),F={default:1});if(O)for(var G in P)!da(G)&&!(G in F)&&delete P[G]};function as(){return{app:null,config:{isNativeTag:E.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var Do=0;function ss(a,u){return function(y){var P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;E.isFunction(y)||(y=Object.assign({},y)),P!=null&&!E.isObject(P)&&(P=null);var O=as(),F=new Set,W=!1,G=O.app={_uid:Do++,_component:y,_props:P,_container:null,_context:O,_instance:null,version:ps,get config(){return O.config},set config(le){},use(le){for(var ze=arguments.length,ot=new Array(ze>1?ze-1:0),ge=1;ge<ze;ge++)ot[ge-1]=arguments[ge];return F.has(le)||(le&&E.isFunction(le.install)?(F.add(le),le.install(G,...ot)):E.isFunction(le)&&(F.add(le),le(G,...ot))),G},mixin(le){return O.mixins.includes(le)||O.mixins.push(le),G},component(le,ze){return ze?(O.components[le]=ze,G):O.components[le]},directive(le,ze){return ze?(O.directives[le]=ze,G):O.directives[le]},mount(le,ze,ot){if(!W){var ge=Vt(y,P);return ge.appContext=O,ze&&u?u(ge,le):a(ge,le,ot),W=!0,G._container=le,le.__vue_app__=G,G._instance=ge.component,Vo(ge.component)||ge.component.proxy}},unmount(){W&&(a(null,G._container),delete G._container.__vue_app__)},provide(le,ze){return O.provides[le]=ze,G}};return G}}function io(a,u,v,y){var P=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(E.isArray(a)){a.forEach((wt,it)=>io(wt,u&&(E.isArray(u)?u[it]:u),v,y,P));return}if(!(Tr(y)&&!P)){var O=y.shapeFlag&4?Vo(y.component)||y.component.proxy:y.el,F=P?null:O,{i:W,r:G}=a,le=u&&u.r,ze=W.refs===E.EMPTY_OBJ?W.refs={}:W.refs,ot=W.setupState;if(le!=null&&le!==G&&(E.isString(le)?(ze[le]=null,E.hasOwn(ot,le)&&(ot[le]=null)):x.isRef(le)&&(le.value=null)),E.isFunction(G))Tt(G,W,12,[F,ze]);else{var ge=E.isString(G),Ge=x.isRef(G);if(ge||Ge){var Xe=()=>{if(a.f){var wt=ge?E.hasOwn(ot,G)?ot[G]:ze[G]:G.value;P?E.isArray(wt)&&E.remove(wt,O):E.isArray(wt)?wt.includes(O)||wt.push(O):ge?(ze[G]=[O],E.hasOwn(ot,G)&&(ot[G]=ze[G])):(G.value=[O],a.k&&(ze[a.k]=G.value))}else ge?(ze[G]=F,E.hasOwn(ot,G)&&(ot[G]=F)):Ge&&(G.value=F,a.k&&(ze[a.k]=F))};F?(Xe.id=-1,ur(Xe,v)):Xe()}}}}var si=!1,Ci=a=>/svg/.test(a.namespaceURI)&&a.tagName!=="foreignObject",Gi=a=>a.nodeType===8;function li(a){var{mt:u,p:v,o:{patchProp:y,createText:P,nextSibling:O,parentNode:F,remove:W,insert:G,createComment:le}}=a,ze=(Ce,Ee)=>{if(!Ee.hasChildNodes()){v(null,Ce,Ee),Pn(),Ee._vnode=Ce;return}si=!1,ot(Ee.firstChild,Ce,null,null,null),Pn(),Ee._vnode=Ce,si&&console.error("Hydration completed but contains mismatches.")},ot=function(Ce,Ee,Te,st,ke){var Ct=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,i=Gi(Ce)&&Ce.data==="[",l=()=>wt(Ce,Ee,Te,st,ke,i),{type:d,ref:_,shapeFlag:A,patchFlag:C}=Ee,k=Ce.nodeType;Ee.el=Ce,C===-2&&(Ct=!1,Ee.dynamicChildren=null);var L=null;switch(d){case te:k!==3?Ee.children===""?(G(Ee.el=P(""),F(Ce),Ce),L=Ce):L=l():(Ce.data!==Ee.children&&(si=!0,Ce.data=Ee.children),L=O(Ce));break;case ce:k!==8||i?L=l():L=O(Ce);break;case pe:if(i&&(Ce=O(Ce),k=Ce.nodeType),k===1||k===3){L=Ce;for(var H=!Ee.children.length,ne=0;ne<Ee.staticCount;ne++)H&&(Ee.children+=L.nodeType===1?L.outerHTML:L.data),ne===Ee.staticCount-1&&(Ee.anchor=L),L=O(L);return i?O(L):L}else l();break;case q:i?L=Xe(Ce,Ee,Te,st,ke,Ct):L=l();break;default:if(A&1)k!==1||Ee.type.toLowerCase()!==Ce.tagName.toLowerCase()?L=l():L=ge(Ce,Ee,Te,st,ke,Ct);else if(A&6){Ee.slotScopeIds=ke;var ve=F(Ce);if(u(Ee,ve,null,Te,st,Ci(ve),Ct),L=i?it(Ce):O(Ce),L&&Gi(L)&&L.data==="teleport end"&&(L=O(L)),Tr(Ee)){var Me;i?(Me=Vt(q),Me.anchor=L?L.previousSibling:ve.lastChild):Me=Ce.nodeType===3?ei(""):Vt("div"),Me.el=Ce,Ee.component.subTree=Me}}else A&64?k!==8?L=l():L=Ee.type.hydrate(Ce,Ee,Te,st,ke,Ct,a,Ge):A&128&&(L=Ee.type.hydrate(Ce,Ee,Te,st,Ci(F(Ce)),ke,Ct,a,ot))}return _!=null&&io(_,null,st,Ee),L},ge=(Ce,Ee,Te,st,ke,Ct)=>{Ct=Ct||!!Ee.dynamicChildren;var{type:i,props:l,patchFlag:d,shapeFlag:_,dirs:A}=Ee,C=i==="input"&&A||i==="option";if(C||d!==-1){if(A&&jr(Ee,null,Te,"created"),l)if(C||!Ct||d&(16|32))for(var k in l)(C&&k.endsWith("value")||E.isOn(k)&&!E.isReservedProp(k))&&y(Ce,k,null,l[k],!1,void 0,Te);else l.onClick&&y(Ce,"onClick",null,l.onClick,!1,void 0,Te);var L;if((L=l&&l.onVnodeBeforeMount)&&Er(L,Te,Ee),A&&jr(Ee,null,Te,"beforeMount"),((L=l&&l.onVnodeMounted)||A)&&ii(()=>{L&&Er(L,Te,Ee),A&&jr(Ee,null,Te,"mounted")},st),_&16&&!(l&&(l.innerHTML||l.textContent)))for(var H=Ge(Ce.firstChild,Ee,Ce,Te,st,ke,Ct);H;){si=!0;var ne=H;H=H.nextSibling,W(ne)}else _&8&&Ce.textContent!==Ee.children&&(si=!0,Ce.textContent=Ee.children)}return Ce.nextSibling},Ge=(Ce,Ee,Te,st,ke,Ct,i)=>{i=i||!!Ee.dynamicChildren;for(var l=Ee.children,d=l.length,_=0;_<d;_++){var A=i?l[_]:l[_]=Un(l[_]);if(Ce)Ce=ot(Ce,A,st,ke,Ct,i);else{if(A.type===te&&!A.children)continue;si=!0,v(null,A,Te,null,st,ke,Ci(Te),Ct)}}return Ce},Xe=(Ce,Ee,Te,st,ke,Ct)=>{var{slotScopeIds:i}=Ee;i&&(ke=ke?ke.concat(i):i);var l=F(Ce),d=Ge(O(Ce),Ee,l,Te,st,ke,Ct);return d&&Gi(d)&&d.data==="]"?O(Ee.anchor=d):(si=!0,G(Ee.anchor=le("]"),l,d),d)},wt=(Ce,Ee,Te,st,ke,Ct)=>{if(si=!0,Ee.el=null,Ct)for(var i=it(Ce);;){var l=O(Ce);if(l&&l!==i)W(l);else break}var d=O(Ce),_=F(Ce);return W(Ce),v(null,Ee,_,d,Te,st,Ci(_),ke),d},it=Ce=>{for(var Ee=0;Ce;)if(Ce=O(Ce),Ce&&Gi(Ce)&&(Ce.data==="["&&Ee++,Ce.data==="]")){if(Ee===0)return O(Ce);Ee--}return Ce};return[ze,ot]}var ur=ii;function lr(a){return Wa(a)}function za(a){return Wa(a,li)}function Wa(a,u){var v=E.getGlobalThis();v.__VUE__=!0;var{insert:y,remove:P,patchProp:O,forcePatchProp:F,createElement:W,createText:G,createComment:le,setText:ze,setElementText:ot,parentNode:ge,nextSibling:Ge,setScopeId:Xe=E.NOOP,insertStaticContent:wt}=a,it=function(M,j,se){var re=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Ue=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,rt=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,qe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,Ke=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!j.dynamicChildren;if(M!==j){M&&!Gt(M,j)&&(re=Ae(M),Qe(M,oe,Ue,!0),M=null),j.patchFlag===-2&&(Ke=!1,j.dynamicChildren=null);var{type:$e,ref:Ut,shapeFlag:vt}=j;switch($e){case te:Ce(M,j,se,re);break;case ce:Ee(M,j,se,re);break;case pe:M==null&&Te(j,se,re,rt);break;case q:k(M,j,se,re,oe,Ue,rt,qe,Ke);break;default:vt&1?Ct(M,j,se,re,oe,Ue,rt,qe,Ke):vt&6?L(M,j,se,re,oe,Ue,rt,qe,Ke):(vt&64||vt&128)&&$e.process(M,j,se,re,oe,Ue,rt,qe,Ke,At)}Ut!=null&&oe&&io(Ut,M&&M.ref,Ue,j||M,!j)}},Ce=(M,j,se,re)=>{if(M==null)y(j.el=G(j.children),se,re);else{var oe=j.el=M.el;j.children!==M.children&&ze(oe,j.children)}},Ee=(M,j,se,re)=>{M==null?y(j.el=le(j.children||""),se,re):j.el=M.el},Te=(M,j,se,re)=>{[M.el,M.anchor]=wt(M.children,j,se,re,M.el,M.anchor)},st=(M,j,se)=>{for(var{el:re,anchor:oe}=M,Ue;re&&re!==oe;)Ue=Ge(re),y(re,j,se),re=Ue;y(oe,j,se)},ke=M=>{for(var{el:j,anchor:se}=M,re;j&&j!==se;)re=Ge(j),P(j),j=re;P(se)},Ct=(M,j,se,re,oe,Ue,rt,qe,Ke)=>{rt=rt||j.type==="svg",M==null?i(j,se,re,oe,Ue,rt,qe,Ke):_(M,j,oe,Ue,rt,qe,Ke)},i=(M,j,se,re,oe,Ue,rt,qe)=>{var Ke,$e,{type:Ut,props:vt,shapeFlag:xt,transition:Bt,dirs:Mn}=M;if(Ke=M.el=W(M.type,Ue,vt&&vt.is,vt),xt&8?ot(Ke,M.children):xt&16&&d(M.children,Ke,null,re,oe,Ue&&Ut!=="foreignObject",rt,qe),Mn&&jr(M,null,re,"created"),l(Ke,M,M.scopeId,rt,re),vt){for(var Rn in vt)Rn!=="value"&&!E.isReservedProp(Rn)&&O(Ke,Rn,null,vt[Rn],Ue,M.children,re,oe,Fe,M.hostInstance);"value"in vt&&O(Ke,"value",null,vt.value,!1,[],re,null,void 0,M.hostInstance),($e=vt.onVnodeBeforeMount)&&Er($e,re,M)}Mn&&jr(M,null,re,"beforeMount");var pn=(!oe||oe&&!oe.pendingBranch)&&Bt&&!Bt.persisted;pn&&Bt.beforeEnter(Ke),y(Ke,j,se),(($e=vt&&vt.onVnodeMounted)||pn||Mn)&&ur(()=>{$e&&Er($e,re,M),pn&&Bt.enter(Ke),Mn&&jr(M,null,re,"mounted")},oe)},l=(M,j,se,re,oe)=>{if(se&&Xe(M,se),re)for(var Ue=0;Ue<re.length;Ue++)Xe(M,re[Ue]);if(oe){var rt=oe.subTree;if(j===rt){var qe=oe.vnode;l(M,qe,qe.scopeId,qe.slotScopeIds,oe.parent)}}},d=function(M,j,se,re,oe,Ue,rt,qe){for(var Ke=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,$e=Ke;$e<M.length;$e++){var Ut=M[$e]=qe?$n(M[$e]):Un(M[$e]);it(null,Ut,j,se,re,oe,Ue,rt,qe)}},_=(M,j,se,re,oe,Ue,rt)=>{var qe=j.el=M.el,{patchFlag:Ke,dynamicChildren:$e,dirs:Ut}=j;Ke|=M.patchFlag&16;var vt=M.props||E.EMPTY_OBJ,xt=j.props||E.EMPTY_OBJ,Bt;se&&Yi(se,!1),(Bt=xt.onVnodeBeforeUpdate)&&Er(Bt,se,j,M),Ut&&jr(j,M,se,"beforeUpdate"),se&&Yi(se,!0);var Mn=oe&&j.type!=="foreignObject";if($e?A(M.dynamicChildren,$e,qe,se,re,Mn,Ue):rt||ue(M,j,qe,null,se,re,Mn,Ue,!1),Ke>0){if(Ke&16)C(qe,j,vt,xt,se,re,oe);else if(Ke&2&&vt.class!==xt.class&&O(qe,"class",null,xt.class,oe,[],se,null,void 0,j.hostInstance),Ke&4&&O(qe,"style",vt.style,xt.style,oe,[],se,null,void 0,j.hostInstance),Ke&8)for(var Rn=j.dynamicProps,pn=0;pn<Rn.length;pn++){var _n=Rn[pn],fr=vt[_n],ni=xt[_n];(ni!==fr||_n==="value"||F&&F(qe,_n))&&O(qe,_n,fr,ni,oe,M.children,se,re,Fe,j.hostInstance)}Ke&1&&M.children!==j.children&&ot(qe,j.children)}else!rt&&$e==null&&C(qe,j,vt,xt,se,re,oe);((Bt=xt.onVnodeUpdated)||Ut)&&ur(()=>{Bt&&Er(Bt,se,j,M),Ut&&jr(j,M,se,"updated")},re)},A=(M,j,se,re,oe,Ue,rt)=>{for(var qe=0;qe<j.length;qe++){var Ke=M[qe],$e=j[qe],Ut=Ke.el&&(Ke.type===q||!Gt(Ke,$e)||Ke.shapeFlag&(6|64))?ge(Ke.el):se;it(Ke,$e,Ut,null,re,oe,Ue,rt,!0)}},C=(M,j,se,re,oe,Ue,rt)=>{if(se!==re){if(se!==E.EMPTY_OBJ)for(var qe in se)!E.isReservedProp(qe)&&!(qe in re)&&O(M,qe,se[qe],null,rt,j.children,oe,Ue,Fe,j.hostInstance);for(var Ke in re)if(!E.isReservedProp(Ke)){var $e=re[Ke],Ut=se[Ke];($e!==Ut&&Ke!=="value"||F&&F(M,Ke))&&O(M,Ke,Ut,$e,rt,j.children,oe,Ue,Fe,j.hostInstance)}"value"in re&&O(M,"value",se.value,re.value,!1,[],oe,null,void 0,j.hostInstance)}},k=(M,j,se,re,oe,Ue,rt,qe,Ke)=>{var $e=j.el=M?M.el:G(""),Ut=j.anchor=M?M.anchor:G(""),{patchFlag:vt,dynamicChildren:xt,slotScopeIds:Bt}=j;Bt&&(qe=qe?qe.concat(Bt):Bt),M==null?(y($e,se,re),y(Ut,se,re),d(j.children,se,Ut,oe,Ue,rt,qe,Ke)):vt>0&&vt&64&&xt&&M.dynamicChildren?(A(M.dynamicChildren,xt,se,oe,Ue,rt,qe),(j.key!=null||oe&&j===oe.subTree)&&oo(M,j,!0)):ue(M,j,se,Ut,oe,Ue,rt,qe,Ke)},L=(M,j,se,re,oe,Ue,rt,qe,Ke)=>{j.slotScopeIds=qe,M==null?j.shapeFlag&512?oe.ctx.activate(j,se,re,rt,Ke):H(j,se,re,oe,Ue,rt,Ke):ne(M,j,Ke)},H=(M,j,se,re,oe,Ue,rt)=>{var qe=M.component=cs(M,re,oe);if(Pr(M)&&(qe.ctx.renderer=At),us(qe),qe.asyncDep){if(oe&&oe.registerDep(qe,ve),!M.el){var Ke=qe.subTree=Vt(ce);Ee(null,Ke,j,se)}return}ve(qe,M,j,se,oe,Ue,rt)},ne=(M,j,se)=>{var re=j.component=M.component;if(Oo(M,j,se))if(re.asyncDep&&!re.asyncResolved){Me(re,j,se);return}else re.next=j,Dr(re.update),re.update();else j.el=M.el,re.vnode=j},ve=(M,j,se,re,oe,Ue,rt)=>{var qe=()=>{if(M.isMounted){var{next:Jt,bu:nn,u:lo,parent:Y,vnode:ee}=M,be=Jt,Le;Yi(M,!1),Jt?(Jt.el=ee.el,Me(M,Jt,rt)):Jt=ee,nn&&E.invokeArrayFns(nn),(Le=Jt.props&&Jt.props.onVnodeBeforeUpdate)&&Er(Le,Y,Jt,ee),Yi(M,!0);var De=Ko(M),Ze=M.subTree;M.subTree=De,it(Ze,De,ge(Ze.el),Ae(Ze),M,oe,Ue),Jt.el=De.el,be===null&&Xi(M,De.el),lo&&ur(lo,oe),(Le=Jt.props&&Jt.props.onVnodeUpdated)&&ur(()=>Er(Le,Y,Jt,ee),oe)}else{var Ut,{el:vt,props:xt}=j,{bm:Bt,m:Mn,parent:Rn}=M,pn=Tr(j);if(Yi(M,!1),Bt&&E.invokeArrayFns(Bt),!pn&&(Ut=xt&&xt.onVnodeBeforeMount)&&Er(Ut,Rn,j),Yi(M,!0),vt&&Rt){var _n=()=>{M.subTree=Ko(M),Rt(vt,M.subTree,M,oe,null)};pn?j.type.__asyncLoader().then(()=>!M.isUnmounted&&_n()):_n()}else{var fr=M.subTree=Ko(M);it(null,fr,se,re,M,oe,Ue),j.el=fr.el}if(Mn&&ur(Mn,oe),!pn&&(Ut=xt&&xt.onVnodeMounted)){var ni=j;ur(()=>Er(Ut,Rn,ni),oe)}(j.shapeFlag&256||Rn&&Tr(Rn.vnode)&&Rn.vnode.shapeFlag&256)&&M.a&&ur(M.a,oe),M.isMounted=!0,j=se=re=null}},Ke=M.effect=new x.ReactiveEffect(qe,()=>Sn($e),M.scope),$e=M.update=()=>Ke.run();$e.id=M.uid,Yi(M,!0),$e()},Me=(M,j,se)=>{j.component=M;var re=M.vnode.props;M.vnode=j,M.next=null,is(M,j.props,re,se),os(M,j.children,se),x.pauseTracking(),vi(),x.resetTracking()},ue=function(M,j,se,re,oe,Ue,rt,qe){var Ke=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,$e=M&&M.children,Ut=M?M.shapeFlag:0,vt=j.children,{patchFlag:xt,shapeFlag:Bt}=j;if(xt>0){if(xt&128){Ye($e,vt,se,re,oe,Ue,rt,qe,Ke);return}else if(xt&256){Re($e,vt,se,re,oe,Ue,rt,qe,Ke);return}}Bt&8?(Ut&16&&Fe($e,oe,Ue),vt!==$e&&ot(se,vt)):Ut&16?Bt&16?Ye($e,vt,se,re,oe,Ue,rt,qe,Ke):Fe($e,oe,Ue,!0):(Ut&8&&ot(se,""),Bt&16&&d(vt,se,re,oe,Ue,rt,qe,Ke))},Re=(M,j,se,re,oe,Ue,rt,qe,Ke)=>{M=M||E.EMPTY_ARR,j=j||E.EMPTY_ARR;var $e=M.length,Ut=j.length,vt=Math.min($e,Ut),xt;for(xt=0;xt<vt;xt++){var Bt=j[xt]=Ke?$n(j[xt]):Un(j[xt]);it(M[xt],Bt,se,null,oe,Ue,rt,qe,Ke)}$e>Ut?Fe(M,oe,Ue,!0,!1,vt):d(j,se,re,oe,Ue,rt,qe,Ke,vt)},Ye=(M,j,se,re,oe,Ue,rt,qe,Ke)=>{for(var $e=0,Ut=j.length,vt=M.length-1,xt=Ut-1;$e<=vt&&$e<=xt;){var Bt=M[$e],Mn=j[$e]=Ke?$n(j[$e]):Un(j[$e]);if(Gt(Bt,Mn))it(Bt,Mn,se,null,oe,Ue,rt,qe,Ke);else break;$e++}for(;$e<=vt&&$e<=xt;){var Rn=M[vt],pn=j[xt]=Ke?$n(j[xt]):Un(j[xt]);if(Gt(Rn,pn))it(Rn,pn,se,null,oe,Ue,rt,qe,Ke);else break;vt--,xt--}if($e>vt){if($e<=xt)for(var _n=xt+1,fr=_n<Ut?j[_n].el:re;$e<=xt;)it(null,j[$e]=Ke?$n(j[$e]):Un(j[$e]),se,fr,oe,Ue,rt,qe,Ke),$e++}else if($e>xt)for(;$e<=vt;)Qe(M[$e],oe,Ue,!0),$e++;else{var ni=$e,Jt=$e,nn=new Map;for($e=Jt;$e<=xt;$e++){var lo=j[$e]=Ke?$n(j[$e]):Un(j[$e]);lo.key!=null&&nn.set(lo.key,$e)}var Y,ee=0,be=xt-Jt+1,Le=!1,De=0,Ze=new Array(be);for($e=0;$e<be;$e++)Ze[$e]=0;for($e=ni;$e<=vt;$e++){var _t=M[$e];if(ee>=be){Qe(_t,oe,Ue,!0);continue}var et=void 0;if(_t.key!=null)et=nn.get(_t.key);else for(Y=Jt;Y<=xt;Y++)if(Ze[Y-Jt]===0&&Gt(_t,j[Y])){et=Y;break}et===void 0?Qe(_t,oe,Ue,!0):(Ze[et-Jt]=$e+1,et>=De?De=et:Le=!0,it(_t,j[et],se,null,oe,Ue,rt,qe,Ke),ee++)}var tt=Le?ao(Ze):E.EMPTY_ARR;for(Y=tt.length-1,$e=be-1;$e>=0;$e--){var He=Jt+$e,jt=j[He],Dt=He+1<Ut?j[He+1].el:re;Ze[$e]===0?it(null,jt,se,Dt,oe,Ue,rt,qe,Ke):Le&&(Y<0||$e!==tt[Y]?ft(jt,se,Dt,2):Y--)}}},ft=function(M,j,se,re){var oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Ue,type:rt,transition:qe,children:Ke,shapeFlag:$e}=M;if($e&6){ft(M.component.subTree,j,se,re);return}if($e&128){M.suspense.move(j,se,re);return}if($e&64){rt.move(M,j,se,At);return}if(rt===q){y(Ue,j,se);for(var Ut=0;Ut<Ke.length;Ut++)ft(Ke[Ut],j,se,re);y(M.anchor,j,se);return}if(rt===pe){st(M,j,se);return}var vt=re!==2&&$e&1&&qe;if(vt)if(re===0)qe.beforeEnter(Ue),y(Ue,j,se),ur(()=>qe.enter(Ue),oe);else{var{leave:xt,delayLeave:Bt,afterLeave:Mn}=qe,Rn=()=>y(Ue,j,se),pn=()=>{xt(Ue,()=>{Rn(),Mn&&Mn()})};Bt?Bt(Ue,Rn,pn):pn()}else y(Ue,j,se)},Qe=function(M,j,se){var re=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Ue,props:rt,ref:qe,children:Ke,dynamicChildren:$e,shapeFlag:Ut,patchFlag:vt,dirs:xt}=M;if(qe!=null&&io(qe,null,se,M,!0),Ut&256){j.ctx.deactivate(M);return}var Bt=Ut&1&&xt,Mn=!Tr(M),Rn;if(Mn&&(Rn=rt&&rt.onVnodeBeforeUnmount)&&Er(Rn,j,M),Ut&6)ye(M.component,se,re);else{if(Ut&128){M.suspense.unmount(se,re);return}Bt&&jr(M,null,j,"beforeUnmount"),Ut&64?M.type.remove(M,j,se,oe,At,re):$e&&(Ue!==q||vt>0&&vt&64)?Fe($e,j,se,!1,!0):(Ue===q&&vt&(128|256)||!oe&&Ut&16)&&Fe(Ke,j,se),re&&xe(M)}(Mn&&(Rn=rt&&rt.onVnodeUnmounted)||Bt)&&ur(()=>{Rn&&Er(Rn,j,M),Bt&&jr(M,null,j,"unmounted")},se)},xe=M=>{var{type:j,el:se,anchor:re,transition:oe}=M;if(j===q){me(se,re);return}if(j===pe){ke(M);return}var Ue=()=>{P(se),oe&&!oe.persisted&&oe.afterLeave&&oe.afterLeave()};if(M.shapeFlag&1&&oe&&!oe.persisted){var{leave:rt,delayLeave:qe}=oe,Ke=()=>rt(se,Ue);qe?qe(M.el,Ue,Ke):Ke()}else Ue()},me=(M,j)=>{for(var se;M!==j;)se=Ge(M),P(M),M=se;P(j)},ye=(M,j,se)=>{var{bum:re,scope:oe,update:Ue,subTree:rt,um:qe}=M;re&&E.invokeArrayFns(re),oe.stop(),Ue&&(Ue.active=!1,Qe(rt,M,j,se)),qe&&ur(qe,j),ur(()=>{M.isUnmounted=!0},j),j&&j.pendingBranch&&!j.isUnmounted&&M.asyncDep&&!M.asyncResolved&&M.suspenseId===j.pendingId&&(j.deps--,j.deps===0&&j.resolve())},Fe=function(M,j,se){for(var re=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Ue=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,rt=Ue;rt<M.length;rt++)Qe(M[rt],j,se,re,oe)},Ae=M=>M.shapeFlag&6?Ae(M.component.subTree):M.shapeFlag&128?M.suspense.next():Ge(M.anchor||M.el),bt=(M,j,se)=>{M==null?j._vnode&&Qe(j._vnode,null,null,!0):it(j._vnode||null,M,j,null,null,null,se),vi(),Pn(),j._vnode=M},At={p:it,um:Qe,m:ft,r:xe,mt:H,mc:d,pc:ue,pbc:A,n:Ae,o:a},Je,Rt;return u&&([Je,Rt]=u(At)),{render:bt,hydrate:Je,createApp:ss(bt,Je)}}function Yi(a,u){var{effect:v,update:y}=a;v.allowRecurse=y.allowRecurse=u}function oo(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,y=a.children,P=u.children;if(E.isArray(y)&&E.isArray(P))for(var O=0;O<y.length;O++){var F=y[O],W=P[O];W.shapeFlag&1&&!W.dynamicChildren&&((W.patchFlag<=0||W.patchFlag===32)&&(W=P[O]=$n(P[O]),W.el=F.el),v||oo(F,W)),W.type===te&&(W.el=F.el)}}function ao(a){var u=a.slice(),v=[0],y,P,O,F,W,G=a.length;for(y=0;y<G;y++){var le=a[y];if(le!==0){if(P=v[v.length-1],a[P]<le){u[y]=P,v.push(y);continue}for(O=0,F=v.length-1;O<F;)W=O+F>>1,a[v[W]]<le?O=W+1:F=W;le<a[v[O]]&&(O>0&&(u[y]=v[O-1]),v[O]=y)}}for(O=v.length,F=v[O-1];O-- >0;)v[O]=F,F=u[F];return v}var ls=a=>a.__isTeleport,ha=a=>a&&(a.disabled||a.disabled===""),Fo=a=>typeof SVGElement!="undefined"&&a instanceof SVGElement,ga=(a,u)=>{var v=a&&a.to;if(E.isString(v))if(u){var y=u(v);return y}else return null;else return v},m={__isTeleport:!0,process(a,u,v,y,P,O,F,W,G,le){var{mc:ze,pc:ot,pbc:ge,o:{insert:Ge,querySelector:Xe,createText:wt,createComment:it}}=le,Ce=ha(u.props),{shapeFlag:Ee,children:Te,dynamicChildren:st}=u;if(a==null){var ke=u.el=wt(""),Ct=u.anchor=wt("");Ge(ke,v,y),Ge(Ct,v,y);var i=u.target=ga(u.props,Xe),l=u.targetAnchor=wt("");i&&(Ge(l,i),F=F||Fo(i));var d=(ve,Me)=>{Ee&16&&ze(Te,ve,Me,P,O,F,W,G)};Ce?d(v,Ct):i&&d(i,l)}else{u.el=a.el;var _=u.anchor=a.anchor,A=u.target=a.target,C=u.targetAnchor=a.targetAnchor,k=ha(a.props),L=k?v:A,H=k?_:C;if(F=F||Fo(A),st?(ge(a.dynamicChildren,st,L,P,O,F,W),oo(a,u,!0)):G||ot(a,u,L,H,P,O,F,W,!1),Ce)k||R(u,v,_,le,1);else if((u.props&&u.props.to)!==(a.props&&a.props.to)){var ne=u.target=ga(u.props,Xe);ne&&R(u,ne,null,le,0)}else k&&R(u,A,C,le,1)}Z(u)},remove(a,u,v,y,P,O){var{um:F,o:{remove:W}}=P,{shapeFlag:G,children:le,anchor:ze,targetAnchor:ot,target:ge,props:Ge}=a;if(ge&&W(ot),(O||!ha(Ge))&&(W(ze),G&16))for(var Xe=0;Xe<le.length;Xe++){var wt=le[Xe];F(wt,u,v,!0,!!wt.dynamicChildren)}},move:R,hydrate:$};function R(a,u,v,y){var{o:{insert:P},m:O}=y,F=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;F===0&&P(a.targetAnchor,u,v);var{el:W,anchor:G,shapeFlag:le,children:ze,props:ot}=a,ge=F===2;if(ge&&P(W,u,v),(!ge||ha(ot))&&le&16)for(var Ge=0;Ge<ze.length;Ge++)O(ze[Ge],u,v,2);ge&&P(G,u,v)}function $(a,u,v,y,P,O,F,W){var{o:{nextSibling:G,parentNode:le,querySelector:ze}}=F,ot=u.target=ga(u.props,ze);if(ot){var ge=ot._lpa||ot.firstChild;if(u.shapeFlag&16)if(ha(u.props))u.anchor=W(G(a),u,le(a),v,y,P,O),u.targetAnchor=ge;else{u.anchor=G(a);for(var Ge=ge;Ge;)if(Ge=G(Ge),Ge&&Ge.nodeType===8&&Ge.data==="teleport anchor"){u.targetAnchor=Ge,ot._lpa=u.targetAnchor&&G(u.targetAnchor);break}W(ge,u,ot,v,y,P,O)}Z(u)}return u.anchor&&G(u.anchor)}var U=m;function Z(a){var u=a.ctx;if(u&&u.ut){for(var v=a.children[0].el;v!==a.targetAnchor;)v.nodeType===1&&v.setAttribute("data-v-owner",u.uid),v=v.nextSibling;u.ut()}}var q=Symbol(void 0),te=Symbol(void 0),ce=Symbol(void 0),pe=Symbol(void 0),Ie=[],fe=null;function we(){var a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Ie.push(fe=a?null:[])}function ut(){Ie.pop(),fe=Ie[Ie.length-1]||null}var pt=1;function $t(a){pt+=a}function Et(a){return a.dynamicChildren=pt>0?fe||E.EMPTY_ARR:null,ut(),pt>0&&fe&&fe.push(a),a}function je(a,u,v,y,P,O){return Et(Ht(a,u,v,y,P,O,!0))}function Mt(a,u,v,y,P){return Et(Vt(a,u,v,y,P,!0))}function fn(a){return a?a.__v_isVNode===!0:!1}function Gt(a,u){return a.type===u.type&&a.key===u.key}function ht(a){}var Qt="__vInternal",Bn=a=>{var{key:u}=a;return u!=null?u:null},Yt=a=>{var{ref:u,ref_key:v,ref_for:y}=a;return u!=null?E.isString(u)||x.isRef(u)||E.isFunction(u)?{i:Cn,r:u,k:v,f:!!y}:u:null};function Ht(a){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,P=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,O=arguments.length>5&&arguments[5]!==void 0?arguments[5]:a===q?0:1,F=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,W=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,G={__v_isVNode:!0,__v_skip:!0,type:a,props:u,key:u&&Bn(u),ref:u&&Yt(u),scopeId:hn,slotScopeIds:null,children:v,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:O,patchFlag:y,dynamicProps:P,dynamicChildren:null,appContext:null,hostInstance:Cn,ctx:Cn};return W?(Ir(G,v),O&128&&a.normalize(G)):v&&(G.shapeFlag|=E.isString(v)?8:16),pt>0&&!F&&fe&&(G.patchFlag>0||O&6)&&G.patchFlag!==32&&fe.push(G),G}var Vt=qt;function qt(a){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,P=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,O=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!a||a===ro)&&(a=ce),fn(a)){var F=ci(a,u,!0);return v&&Ir(F,v),pt>0&&!O&&fe&&(F.shapeFlag&6?fe[fe.indexOf(a)]=F:fe.push(F)),F.patchFlag|=-2,F}if(_o(a)&&(a=a.__vccOpts),u){u=Qo(u);var{class:W,style:G}=u;W&&!E.isString(W)&&(u.class=E.normalizeClass(W)),E.isObject(G)&&(x.isProxy(G)&&!E.isArray(G)&&(G=E.extend({},G)),u.style=E.normalizeStyle(G))}var le=E.isString(a)?1:mi(a)?128:ls(a)?64:E.isObject(a)?4:E.isFunction(a)?2:0;return Ht(a,u,v,y,P,le,O,!0)}function Qo(a){return a?x.isProxy(a)||Qt in a?E.extend({},a):a:null}function ci(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:y,ref:P,patchFlag:O,children:F}=a,W=u?Hn(y||{},u):y,G={__v_isVNode:!0,__v_skip:!0,type:a.type,props:W,key:W&&Bn(W),ref:u&&u.ref?v&&P?E.isArray(P)?P.concat(Yt(u)):[P,Yt(u)]:Yt(u):P,scopeId:a.scopeId,slotScopeIds:a.slotScopeIds,children:F,target:a.target,targetAnchor:a.targetAnchor,staticCount:a.staticCount,shapeFlag:a.shapeFlag,patchFlag:u&&a.type!==q?O===-1?16:O|16:O,dynamicProps:a.dynamicProps,dynamicChildren:a.dynamicChildren,appContext:a.appContext,hostInstance:a.hostInstance,dirs:a.dirs,transition:a.transition,component:a.component,suspense:a.suspense,ssContent:a.ssContent&&ci(a.ssContent),ssFallback:a.ssFallback&&ci(a.ssFallback),el:a.el,anchor:a.anchor,ctx:a.ctx,ce:a.ce};return G}function ei(){var a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Vt(te,null,a,u)}function qi(a,u){var v=Vt(pe,null,a);return v.staticCount=u,v}function Ga(){var a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return u?(we(),Mt(ce,null,a)):Vt(ce,null,a)}function Un(a){return a==null||typeof a=="boolean"?Vt(ce):E.isArray(a)?Vt(q,null,a.slice()):typeof a=="object"?$n(a):Vt(te,null,String(a))}function $n(a){return a.el===null&&a.patchFlag!==-1||a.memo?a:ci(a)}function Ir(a,u){var v=0,{shapeFlag:y}=a;if(u==null)u=null;else if(E.isArray(u))v=16;else if(typeof u=="object")if(y&(1|64)){var P=u.default;P&&(P._c&&(P._d=!1),Ir(a,P()),P._c&&(P._d=!0));return}else{v=32;var O=u._;!O&&!(Qt in u)?u._ctx=Cn:O===3&&Cn&&(Cn.slots._===1?u._=1:(u._=2,a.patchFlag|=1024))}else E.isFunction(u)?(u={default:u,_ctx:Cn},v=32):(u=String(u),y&64?(v=16,u=[ei(u)]):v=8);a.children=u,a.shapeFlag|=v}function Hn(){for(var a={},u=0;u<arguments.length;u++){var v=u<0||arguments.length<=u?void 0:arguments[u];for(var y in v)if(y==="class")a.class!==v.class&&(a.class=E.normalizeClass([a.class,v.class]));else if(y==="style")a.style=E.normalizeStyle([a.style,v.style]);else if(E.isOn(y)){var P=a[y],O=v[y];O&&P!==O&&!(E.isArray(P)&&P.includes(O))&&(a[y]=P?[].concat(P,O):O)}else y!==""&&(a[y]=v[y])}return a}function Er(a,u,v){var y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;I(a,u,7,[v,y])}var zr=as(),ea=0;function cs(a,u,v){var y=a.type,P=(u?u.appContext:a.appContext)||zr,O={uid:ea++,vnode:a,type:y,parent:u,appContext:P,root:null,next:null,subTree:null,effect:null,update:null,scope:new x.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:u?u.provides:Object.create(P.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Pa(y,P),emitsOptions:or(y,P),emit:null,emitted:null,propsDefaults:E.EMPTY_OBJ,inheritAttrs:y.inheritAttrs,ctx:E.EMPTY_OBJ,data:E.EMPTY_OBJ,props:E.EMPTY_OBJ,attrs:E.EMPTY_OBJ,slots:E.EMPTY_OBJ,refs:E.EMPTY_OBJ,setupState:E.EMPTY_OBJ,setupContext:null,suspense:v,suspenseId:v?v.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return O.ctx={_:O},O.root=u?u.root:O,O.emit=on.bind(null,O),a.ce&&a.ce(O),O}var tn=null,mn=()=>tn||Cn,jn=a=>{tn=a,a.scope.on()},qn=()=>{tn&&tn.scope.off(),tn=null};function Ai(a){return a.vnode.shapeFlag&4}h.isInSSRComponentSetup=!1;function us(a){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;h.isInSSRComponentSetup=u;var{props:v,children:y}=a.vnode,P=Ai(a);wi(a,v,P,u),Wi(a,y);var O=P?Ya(a,u):void 0;return h.isInSSRComponentSetup=!1,O}function Ya(a,u){var v=a.type;a.accessCache=Object.create(null),a.proxy=x.markRaw(new Proxy(a.ctx,X));var{setup:y}=v;if(y){var P=a.setupContext=y.length>1?Ka(a):null;jn(a),x.pauseTracking();var O=Tt(y,a,0,[a.props,P]);if(x.resetTracking(),qn(),E.isPromise(O)){if(O.then(qn,qn),u)return O.then(F=>{Na(a,F,u)}).catch(F=>{St(F,a,0)});a.asyncDep=O}else Na(a,O,u)}else Wr(a,u)}function Na(a,u,v){E.isFunction(u)?a.type.__ssrInlineRender?a.ssrRender=u:a.render=u:E.isObject(u)&&(a.setupState=x.proxyRefs(u)),Wr(a,v)}var ta,so;function qa(a){ta=a,so=u=>{u.render._rc&&(u.withProxy=new Proxy(u.ctx,K))}}var fs=()=>!ta;function Wr(a,u,v){var y=a.type;if(!a.render){if(!u&&ta&&!y.render){var P=y.template||Ln(a).template;if(P){var{isCustomElement:O,compilerOptions:F}=a.appContext.config,{delimiters:W,compilerOptions:G}=y,le=E.extend(E.extend({isCustomElement:O,delimiters:W},F),G);y.render=ta(P,le)}}a.render=y.render||E.NOOP,so&&so(a)}jn(a),x.pauseTracking(),Ne(a),x.resetTracking(),qn()}function Ja(a){return new Proxy(a.attrs,{get(u,v){return x.track(a,"get","$attrs"),u[v]}})}function Ka(a){var u=y=>{a.exposed=y||{}},v;return{get attrs(){return v||(v=Ja(a))},slots:a.slots,emit:a.emit,expose:u}}function Vo(a){if(a.exposed)return a.exposeProxy||(a.exposeProxy=new Proxy(x.proxyRefs(x.markRaw(a.exposed)),{get(u,v){if(v in u)return u[v];if(v in mt)return mt[v](a)},has(u,v){return v in u||v in mt}}))}function Li(a){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return E.isFunction(a)?a.displayName||a.name:a.name||u&&a.__name}function _o(a){return E.isFunction(a)&&"__vccOpts"in a}var bo=(a,u)=>x.computed(a,u,h.isInSSRComponentSetup);function ds(){return null}function Uo(){return null}function Bs(a){}function hs(a,u){return null}function Ms(){return It().slots}function Be(){return It().attrs}function It(){var a=mn();return a.setupContext||(a.setupContext=Ka(a))}function Pt(a,u){var v=E.isArray(a)?a.reduce((O,F)=>(O[F]={},O),{}):a;for(var y in u){var P=v[y];P?E.isArray(P)||E.isFunction(P)?v[y]={type:P,default:u[y]}:P.default=u[y]:P===null&&(v[y]={default:u[y]})}return v}function wn(a,u){var v={},y=function(O){u.includes(O)||Object.defineProperty(v,O,{enumerable:!0,get:()=>a[O]})};for(var P in a)y(P);return v}function yr(a){var u=mn(),v=a();return qn(),E.isPromise(v)&&(v=v.catch(y=>{throw jn(u),y})),[v,()=>jn(u)]}function Oi(a,u,v){var y=arguments.length;return y===2?E.isObject(u)&&!E.isArray(u)?fn(u)?Vt(a,null,[u]):Vt(a,u):Vt(a,null,u):(y>3?v=Array.prototype.slice.call(arguments,2):y===3&&fn(v)&&(v=[v]),Vt(a,u,v))}var Ji=Symbol(""),Eo=()=>{{var a=Nn(Ji);return a}};function ka(){}function na(a,u,v,y){var P=v[y];if(P&&gs(P,a))return P;var O=u();return O.memo=a.slice(),v[y]=O}function gs(a,u){var v=a.memo;if(v.length!=u.length)return!1;for(var y=0;y<v.length;y++)if(E.hasChanged(v[y],u[y]))return!1;return pt>0&&fe&&fe.push(a),!0}var ps="3.2.47",dl=null,Ul=null,$l={insert:(a,u,v)=>v?u.insertBefore(a,v):u.appendChild(a),remove:a=>{var u=a.parentNode;u&&u.removeChild(a)},createElement:a=>s.createElement(a),createText:a=>s.createText(a),createComment:a=>s.createComment(a),setText:(a,u)=>{a.setAttr("value",u)},setElementText:(a,u)=>{a.setAttr("value",u)},parentNode:a=>a.parentNode,nextSibling:a=>a.nextSibling};function pa(a){return Object.keys(a)}function va(a){var u={};return E.isArray(a)&&a.forEach(v=>{pa(v).forEach(y=>{var P=v[y],O=u[y]||(u[y]={});pa(P).forEach(F=>{var W=P[F],G=O[F]||(O[F]={});pa(W).forEach(le=>{le[0]==="!"?(G[le]=W[le],delete G[le.slice(1)]):E.hasOwn(G,"!"+le)||(G[le]=W[le])})})})}),u}function ra(a,u){var v=u&&u.classList;return v&&v.includes(a)}var ma=/[+~> ]$/,Ra="parentNode",vs="previousSibling";function ia(a,u){for(var v=a.split("."),y=v.length-1;y>0;y--){var P=v[y],O=P[P.length-1],F=P.replace(ma,"");if(O==="~"||O===" "){for(var W=O==="~"?vs:Ra;u&&(u=u[W],!ra(F,u)););if(!u)return!1}else if(O===">"?u=u&&u[Ra]:O==="+"&&(u=u&&u[vs]),!ra(F,u))return!1}return!0}var Ls=1e3;function Hl(a,u,v){var{styles:y,weights:P}=a;pa(u).forEach(O=>{if(!(O&&v&&!ia(O,v))){var F=O.split(".").length,W=u[O];pa(W).forEach(G=>{var le=W[G],ze=G[0]==="!";ze&&(G=G.slice(1));var ot=P[G]||0,ge=F+(ze?Ls:0);ge>=ot&&(P[G]=ge,y[G]=le)})}})}function ms(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,y={styles:{},weights:{}};return a.forEach(P=>{var O=u[P];O&&Hl(y,O,v)}),y.styles}function Ds(a){return ms(a.classList,a.styleSheet,a)}function Fs(a,u){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return ms(a,Vs(u),v)}function Vs(a){var{type:u,appContext:v}=a,y=u;if(!y.__styles)if(v&&E.isArray(v.provides.__globalStyles)&&(v.provides.__globalStyles=va(v.provides.__globalStyles)),y.mpType==="page"&&v)y.__styles=v.provides.__globalStyles;else{var P=[];v&&P.push(v.provides.__globalStyles),E.isArray(y.styles)&&y.styles.forEach(O=>P.push(O)),y.__styles=va(P)}return y.__styles}function _s(a,u,v){var y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;y&&([u,v]=yo(a,u,v,y)),a.setAttr(u,v)}var xa="hoverClass",hl="placeholderClass",Us="placeholderStyle",jl="indicatorClass",$o="indicatorStyle",Za="maskClass",_a="maskStyle",Ba={view:{class:[xa],style:[]},button:{class:[xa],style:[]},navigator:{class:[xa],style:[]},"u-input":{class:[hl],style:[Us]},"u-textarea":{class:[hl],style:[Us]},"picker-view":{class:[jl,Za],style:[$o,_a]}};function yo(a,u,v,y){if(!v)return[u,v];var P=Ba[a.type];if(P){var O=E.camelize(u);if(P.class.indexOf(O)>-1)return[O,Fs([v],y,a)];if(P.style.indexOf(u)>-1)return E.isString(v)?[O,E.parseStringStyle(v)]:[O,E.normalizeStyle(v)]}return[u,v]}function oa(a,u,v){var y=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!y){var P=v?v.split(" "):[];a.setClassList(P),a.setStyleSheet(Vs(y))}}function Xa(a,u,v,y){a.addEvent(u,v)}function $s(a,u){a.removeEvent(u)}function gl(a,u,v,y){var P=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,O=a._vei||(a._vei={}),F=O[u];if(y&&F)F.value=y;else{var[W,G]=Hs(u);if(y){var le=O[u]=Qa(y,P);Xa(a,W,le)}else F&&($s(a,W),O[u]=void 0)}}var Ho=/(?:Once|Passive|Capture)$/;function bs(a){return a==="on-post-message"?"onPostMessage":a}function Hs(a){var u;if(Ho.test(a)){u={};for(var v;v=a.match(Ho);)a=a.slice(0,a.length-v[0].length),u[v[0].toLowerCase()]=!0}var y=a[2]===":"?a.slice(3):a.slice(2);return[bs(E.hyphenate(y)),u]}function Qa(a,u){var v=P=>{I(v.value,u,5,[P])};v.value=a;var y=new Set;return E.isArray(v.value)?v.value.forEach(P=>{P.modifiers&&P.modifiers.forEach(O=>{y.add(O)})}):(v.value.modifiers&&v.value.modifiers.forEach(P=>{y.add(P)}),ti(v,u)),v.modifiers=[...y],v}function ti(a,u){if(!!u){var{$wxsModules:v}=u;if(!!v){var y=a.value.toString();!v.find(P=>y.indexOf("."+P+".")>-1)||(a.wxsEvent=a.value())}}}function Mr(a,u,v){if(!!v){E.isString(v)&&(v=E.parseStringStyle(v));var y={},P=u&&!E.isString(u);if(P){for(var O in u)v[O]==null&&(y[E.camelize(O)]="");for(var F in v){var W=v[F];W!==u[F]&&(y[E.camelize(F)]=W)}}else for(var G in v)y[E.camelize(G)]=v[G];a.setStyles(y)}}var aa=["u-input","u-textarea"],pl=function(a,u,v,y){var P=arguments.length>6?arguments[6]:void 0,O=arguments.length>9?arguments[9]:void 0;u==="class"?oa(a,v,y,O||P):u==="style"?Mr(a,v,y):E.isOn(u)?E.isModelListener(u)||gl(a,u,v,y,P):u==="modelValue"&&aa.includes(a.type)?a.setAttrs({modelValue:y,value:y}):_s(a,u,y,P)};function zl(){var a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var u=mn();if(!u)return E.EMPTY_OBJ;var v=u.type.__cssModules;if(!v)return E.EMPTY_OBJ;var y=v[a];return y||E.EMPTY_OBJ}}function js(a){var u=mn();if(!!u){var v=()=>Es(u.subTree,a(u.proxy));er(()=>Zn(v,{flush:"post"})),Gn(v)}}function Es(a,u){if(a.shapeFlag&128){var v=a.suspense;a=v.activeBranch,v.pendingBranch&&!v.isHydrating&&v.effects.push(()=>{Es(v.activeBranch,u)})}for(;a.component;)a=a.component.subTree;if(a.shapeFlag&1&&a.el){var y=a.el.style;for(var P in u)y.setProperty("--".concat(P),u[P])}else a.type===q&&a.children.forEach(O=>Es(O,u))}var zs=["ctrl","shift","alt","meta"],Ws={stop:a=>a.stopPropagation(),prevent:a=>a.preventDefault(),self:a=>a.target!==a.currentTarget,ctrl:a=>!a.ctrlKey,shift:a=>!a.shiftKey,alt:a=>!a.altKey,meta:a=>!a.metaKey,left:a=>"button"in a&&a.button!==0,middle:a=>"button"in a&&a.button!==1,right:a=>"button"in a&&a.button!==2,exact:(a,u)=>zs.some(v=>a["".concat(v,"Key")]&&!u.includes(v))},vl=(a,u)=>function(v){for(var y=0;y<u.length;y++){var P=Ws[u[y]];if(P&&P(v,u))return}for(var O=arguments.length,F=new Array(O>1?O-1:0),W=1;W<O;W++)F[W-1]=arguments[W];return a(v,...F)},Gs=(a,u)=>v=>{if("key"in v){var y=E.hyphenate(v.key);if(u.some(P=>P===y))return a(v)}},ys=E.extend({patchProp:pl},$l),Ss;function ws(){return Ss||(Ss=lr(ys))}var ml=function(){ws().render(...arguments)},_l=function(){var a=ws().createApp(...arguments),{mount:u}=a;return a.mount=v=>u(v),a};return Object.defineProperty(h,"camelize",{enumerable:!0,get:function(){return E.camelize}}),Object.defineProperty(h,"capitalize",{enumerable:!0,get:function(){return E.capitalize}}),Object.defineProperty(h,"hyphenate",{enumerable:!0,get:function(){return E.hyphenate}}),Object.defineProperty(h,"normalizeClass",{enumerable:!0,get:function(){return E.normalizeClass}}),Object.defineProperty(h,"normalizeProps",{enumerable:!0,get:function(){return E.normalizeProps}}),Object.defineProperty(h,"normalizeStyle",{enumerable:!0,get:function(){return E.normalizeStyle}}),Object.defineProperty(h,"toDisplayString",{enumerable:!0,get:function(){return E.toDisplayString}}),Object.defineProperty(h,"toHandlerKey",{enumerable:!0,get:function(){return E.toHandlerKey}}),Object.defineProperty(h,"EffectScope",{enumerable:!0,get:function(){return x.EffectScope}}),Object.defineProperty(h,"ReactiveEffect",{enumerable:!0,get:function(){return x.ReactiveEffect}}),Object.defineProperty(h,"customRef",{enumerable:!0,get:function(){return x.customRef}}),Object.defineProperty(h,"effect",{enumerable:!0,get:function(){return x.effect}}),Object.defineProperty(h,"effectScope",{enumerable:!0,get:function(){return x.effectScope}}),Object.defineProperty(h,"getCurrentScope",{enumerable:!0,get:function(){return x.getCurrentScope}}),Object.defineProperty(h,"isProxy",{enumerable:!0,get:function(){return x.isProxy}}),Object.defineProperty(h,"isReactive",{enumerable:!0,get:function(){return x.isReactive}}),Object.defineProperty(h,"isReadonly",{enumerable:!0,get:function(){return x.isReadonly}}),Object.defineProperty(h,"isRef",{enumerable:!0,get:function(){return x.isRef}}),Object.defineProperty(h,"isShallow",{enumerable:!0,get:function(){return x.isShallow}}),Object.defineProperty(h,"markRaw",{enumerable:!0,get:function(){return x.markRaw}}),Object.defineProperty(h,"onScopeDispose",{enumerable:!0,get:function(){return x.onScopeDispose}}),Object.defineProperty(h,"proxyRefs",{enumerable:!0,get:function(){return x.proxyRefs}}),Object.defineProperty(h,"reactive",{enumerable:!0,get:function(){return x.reactive}}),Object.defineProperty(h,"readonly",{enumerable:!0,get:function(){return x.readonly}}),Object.defineProperty(h,"ref",{enumerable:!0,get:function(){return x.ref}}),Object.defineProperty(h,"shallowReactive",{enumerable:!0,get:function(){return x.shallowReactive}}),Object.defineProperty(h,"shallowReadonly",{enumerable:!0,get:function(){return x.shallowReadonly}}),Object.defineProperty(h,"shallowRef",{enumerable:!0,get:function(){return x.shallowRef}}),Object.defineProperty(h,"stop",{enumerable:!0,get:function(){return x.stop}}),Object.defineProperty(h,"toRaw",{enumerable:!0,get:function(){return x.toRaw}}),Object.defineProperty(h,"toRef",{enumerable:!0,get:function(){return x.toRef}}),Object.defineProperty(h,"toRefs",{enumerable:!0,get:function(){return x.toRefs}}),Object.defineProperty(h,"triggerRef",{enumerable:!0,get:function(){return x.triggerRef}}),Object.defineProperty(h,"unref",{enumerable:!0,get:function(){return x.unref}}),h.BaseTransition=Ur,h.BaseTransitionPropsValidators=gn,h.Comment=ce,h.Fragment=q,h.KeepAlive=un,h.Static=pe,h.Suspense=uo,h.Teleport=U,h.Text=te,h.assertNumber=zt,h.callWithAsyncErrorHandling=I,h.callWithErrorHandling=Tt,h.cloneVNode=ci,h.compatUtils=Ul,h.computed=bo,h.createApp=_l,h.createBlock=Mt,h.createCommentVNode=Ga,h.createElementBlock=je,h.createElementVNode=Ht,h.createHydrationRenderer=za,h.createPropsRestProxy=wn,h.createRenderer=lr,h.createSlots=B,h.createStaticVNode=qi,h.createTextVNode=ei,h.createVNode=Vt,h.defineAsyncComponent=Rr,h.defineComponent=Ri,h.defineEmits=Uo,h.defineExpose=Bs,h.defineProps=ds,h.getCurrentInstance=mn,h.getTransitionRawChildren=Or,h.guardReactiveProps=Qo,h.h=Oi,h.handleError=St,h.initCustomFormatter=ka,h.inject=Nn,h.injectHook=xi,h.isMemoSame=gs,h.isRuntimeOnly=fs,h.isVNode=fn,h.mergeDefaults=Pt,h.mergeProps=Hn,h.nextTick=qr,h.onActivated=$r,h.onBeforeMount=Qr,h.onBeforeUnmount=nr,h.onBeforeUpdate=tr,h.onDeactivated=to,h.onErrorCaptured=no,h.onMounted=er,h.onRenderTracked=ko,h.onRenderTriggered=go,h.onServerPrefetch=ho,h.onUnmounted=cr,h.onUpdated=Gn,h.openBlock=we,h.parseClassList=Fs,h.parseClassStyles=Ds,h.popScopeId=Co,h.provide=kr,h.pushScopeId=Kr,h.queuePostFlushCb=Jr,h.registerRuntimeCompiler=qa,h.render=ml,h.renderList=Zo,h.renderSlot=Q,h.resolveComponent=xo,h.resolveDirective=vo,h.resolveDynamicComponent=Bi,h.resolveFilter=dl,h.resolveTransitionHooks=Oe,h.setBlockTracking=$t,h.setDevtoolsHook=On,h.setTransitionHooks=Ei,h.ssrContextKey=Ji,h.toHandlers=ae,h.transformVNodeArgs=ht,h.useAttrs=Be,h.useCssModule=zl,h.useCssStyles=va,h.useCssVars=js,h.useSSRContext=Eo,h.useSlots=Ms,h.useTransitionState=Zr,h.version=ps,h.warn=Nt,h.watch=Fr,h.watchEffect=Zn,h.watchPostEffect=Ni,h.watchSyncEffect=Hi,h.withAsyncContext=yr,h.withCtx=Ui,h.withDefaults=hs,h.withDirectives=Ro,h.withKeys=Gs,h.withMemo=na,h.withModifiers=vl,h.withScopeId=ua,Object.defineProperty(h,"__esModule",{value:!0}),h}({},w,N,p);return S.__TYPE__="nvue",S}var Lp=TI(RI);var hc={};SI(hc,{EMPTY_ARR:()=>GI,EMPTY_OBJ:()=>WI,NO:()=>qI,NOOP:()=>YI,camelize:()=>lN,capitalize:()=>ru,def:()=>hN,extend:()=>Fi,getGlobalThis:()=>vN,hasChanged:()=>fN,hasOwn:()=>il,hyphenate:()=>ff,invokeArrayFns:()=>dN,isArray:()=>Ii,isBuiltInDirective:()=>aN,isFunction:()=>zn,isGloballyWhitelisted:()=>MI,isHTMLTag:()=>HI,isIntegerKey:()=>iN,isMap:()=>Vp,isModelListener:()=>ZI,isObject:()=>Ll,isOn:()=>KI,isPlainObject:()=>Dl,isPromise:()=>nN,isRegExp:()=>eN,isReservedProp:()=>oN,isSVGTag:()=>jI,isSet:()=>Up,isString:()=>hi,isSymbol:()=>tN,looseToNumber:()=>gN,makeMap:()=>Ml,normalizeClass:()=>uf,normalizeProps:()=>VI,normalizeStyle:()=>cf,parseStringStyle:()=>Dp,remove:()=>XI,toDisplayString:()=>zI,toHandlerKey:()=>uN,toNumber:()=>pN,toRawType:()=>rN,toTypeString:()=>Fa});function Ml(f,s){let p=Object.create(null),w=f.split(",");for(let N=0;N<w.length;N++)p[w[N]]=!0;return s?N=>!!p[N.toLowerCase()]:N=>!!p[N]}var BI="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",MI=Ml(BI);function cf(f){if(Ii(f)){let s={};for(let p=0;p<f.length;p++){let w=f[p],N=hi(w)?Dp(w):cf(w);if(N)for(let S in N)s[S]=N[S]}return s}else{if(hi(f))return f;if(Ll(f))return f}}var LI=/;(?![^(]*\))/g,DI=/:([^]+)/,FI=/\/\*.*?\*\//gs;function Dp(f){let s={};return f.replace(FI,"").split(LI).forEach(p=>{if(p){let w=p.split(DI);w.length>1&&(s[w[0].trim()]=w[1].trim())}}),s}function uf(f){let s="";if(hi(f))s=f;else if(Ii(f))for(let p=0;p<f.length;p++){let w=uf(f[p]);w&&(s+=w+" ")}else if(Ll(f))for(let p in f)f[p]&&(s+=p+" ");return s.trim()}function VI(f){if(!f)return null;let{class:s,style:p}=f;return s&&!hi(s)&&(f.class=uf(s)),p&&(f.style=cf(p)),f}var UI="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",$I="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",HI=Ml(UI),jI=Ml($I),zI=f=>hi(f)?f:f==null?"":Ii(f)||Ll(f)&&(f.toString===$p||!zn(f.toString))?JSON.stringify(f,Fp,2):String(f),Fp=(f,s)=>s&&s.__v_isRef?Fp(f,s.value):Vp(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((p,[w,N])=>(p[`${w} =>`]=N,p),{})}:Up(s)?{[`Set(${s.size})`]:[...s.values()]}:Ll(s)&&!Ii(s)&&!Dl(s)?String(s):s,WI={},GI=[],YI=()=>{},qI=()=>!1,JI=/^on[^a-z]/,KI=f=>JI.test(f),ZI=f=>f.startsWith("onUpdate:"),Fi=Object.assign,XI=(f,s)=>{let p=f.indexOf(s);p>-1&&f.splice(p,1)},QI=Object.prototype.hasOwnProperty,il=(f,s)=>QI.call(f,s),Ii=Array.isArray,Vp=f=>Fa(f)==="[object Map]",Up=f=>Fa(f)==="[object Set]",eN=f=>Fa(f)==="[object RegExp]",zn=f=>typeof f=="function",hi=f=>typeof f=="string",tN=f=>typeof f=="symbol",Ll=f=>f!==null&&typeof f=="object",nN=f=>Ll(f)&&zn(f.then)&&zn(f.catch),$p=Object.prototype.toString,Fa=f=>$p.call(f),rN=f=>Fa(f).slice(8,-1),Dl=f=>Fa(f)==="[object Object]",iN=f=>hi(f)&&f!=="NaN"&&f[0]!=="-"&&""+parseInt(f,10)===f,oN=Ml(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),aN=Ml("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),nu=f=>{let s=Object.create(null);return p=>s[p]||(s[p]=f(p))},sN=/-(\w)/g,lN=nu(f=>f.replace(sN,(s,p)=>p?p.toUpperCase():"")),cN=/\B([A-Z])/g,ff=nu(f=>f.replace(cN,"-$1").toLowerCase()),ru=nu(f=>f.charAt(0).toUpperCase()+f.slice(1)),uN=nu(f=>f?`on${ru(f)}`:""),fN=(f,s)=>!Object.is(f,s),dN=(f,s)=>{for(let p=0;p<f.length;p++)f[p](s)},hN=(f,s,p)=>{Object.defineProperty(f,s,{configurable:!0,enumerable:!1,value:p})},gN=f=>{let s=parseFloat(f);return isNaN(s)?f:s},pN=f=>{let s=hi(f)?Number(f):NaN;return isNaN(s)?f:s},Hp,vN=()=>Hp||(Hp=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function jp(f){var s=function(p,w){"use strict";function N(B,...Q){console.warn(`[Vue warn] ${B}`,...Q)}let S;class h{constructor(Q=!1){this.detached=Q,this._active=!0,this.effects=[],this.cleanups=[],this.parent=S,!Q&&S&&(this.index=(S.scopes||(S.scopes=[])).push(this)-1)}get active(){return this._active}run(Q){if(this._active){let he=S;try{return S=this,Q()}finally{S=he}}}on(){S=this}off(){S=this.parent}stop(Q){if(this._active){let he,ae;for(he=0,ae=this.effects.length;he<ae;he++)this.effects[he].stop();for(he=0,ae=this.cleanups.length;he<ae;he++)this.cleanups[he]();if(this.scopes)for(he=0,ae=this.scopes.length;he<ae;he++)this.scopes[he].stop(!0);if(!this.detached&&this.parent&&!Q){let de=this.parent.scopes.pop();de&&de!==this&&(this.parent.scopes[this.index]=de,de.index=this.index)}this.parent=void 0,this._active=!1}}}function E(B){return new h(B)}function x(B,Q=S){Q&&Q.active&&Q.effects.push(B)}function Ve(){return S}function Nt(B){S&&S.cleanups.push(B)}let zt=B=>{let Q=new Set(B);return Q.w=0,Q.n=0,Q},Tt=B=>(B.w&J)>0,I=B=>(B.n&J)>0,St=({deps:B})=>{if(B.length)for(let Q=0;Q<B.length;Q++)B[Q].w|=J},In=B=>{let{deps:Q}=B;if(Q.length){let he=0;for(let ae=0;ae<Q.length;ae++){let de=Q[ae];Tt(de)&&!I(de)?de.delete(B):Q[he++]=de,de.w&=~J,de.n&=~J}Q.length=he}},at=new WeakMap,z=0,J=1,dn=30,cn,bn=Symbol(""),Jn=Symbol("");class gi{constructor(Q,he=null,ae){this.fn=Q,this.scheduler=he,this.active=!0,this.deps=[],this.parent=void 0,x(this,ae)}run(){if(!this.active)return this.fn();let Q=cn,he=Sn;for(;Q;){if(Q===this)return;Q=Q.parent}try{return this.parent=cn,cn=this,Sn=!0,J=1<<++z,z<=dn?St(this):pi(this),this.fn()}finally{z<=dn&&In(this),J=1<<--z,cn=this.parent,Sn=he,this.parent=void 0,this.deferStop&&this.stop()}}stop(){cn===this?this.deferStop=!0:this.active&&(pi(this),this.onStop&&this.onStop(),this.active=!1)}}function pi(B){let{deps:Q}=B;if(Q.length){for(let he=0;he<Q.length;he++)Q[he].delete(B);Q.length=0}}function qr(B,Q){B.effect&&(B=B.effect.fn);let he=new gi(B);Q&&(w.extend(he,Q),Q.scope&&x(he,Q.scope)),(!Q||!Q.lazy)&&he.run();let ae=he.run.bind(he);return ae.effect=he,ae}function gr(B){B.effect.stop()}let Sn=!0,pr=[];function Dr(){pr.push(Sn),Sn=!1}function Jr(){pr.push(Sn),Sn=!0}function vi(){let B=pr.pop();Sn=B===void 0?!0:B}function Pn(B,Q,he){if(Sn&&cn){let ae=at.get(B);ae||at.set(B,ae=new Map);let de=ae.get(he);de||ae.set(he,de=zt()),We(de,void 0)}}function We(B,Q){let he=!1;z<=dn?I(B)||(B.n|=J,he=!Tt(B)):he=!B.has(cn),he&&(B.add(cn),cn.deps.push(B))}function nt(B,Q,he,ae,de,mt){let kt=at.get(B);if(!kt)return;let X=[];if(Q==="clear")X=[...kt.values()];else if(he==="length"&&w.isArray(B)){let ie=Number(ae);kt.forEach((Ne,lt)=>{(lt==="length"||lt>=ie)&&X.push(Ne)})}else switch(he!==void 0&&X.push(kt.get(he)),Q){case"add":w.isArray(B)?w.isIntegerKey(he)&&X.push(kt.get("length")):(X.push(kt.get(bn)),w.isMap(B)&&X.push(kt.get(Jn)));break;case"delete":w.isArray(B)||(X.push(kt.get(bn)),w.isMap(B)&&X.push(kt.get(Jn)));break;case"set":w.isMap(B)&&X.push(kt.get(bn));break}let K=void 0;if(X.length===1)X[0]&&Ot(X[0]);else{let ie=[];for(let Ne of X)Ne&&ie.push(...Ne);Ot(zt(ie))}}function Ot(B,Q){let he=w.isArray(B)?B:[...B];for(let ae of he)ae.computed&&Xt(ae,Q);for(let ae of he)ae.computed||Xt(ae,Q)}function Xt(B,Q){(B!==cn||B.allowRecurse)&&(B.scheduler?B.scheduler():B.run())}function On(B,Q){var he;return(he=at.get(B))===null||he===void 0?void 0:he.get(Q)}let on=w.makeMap("__proto__,__v_isRef,__isVue"),or=new Set(Object.getOwnPropertyNames(Symbol).filter(B=>B!=="arguments"&&B!=="caller").map(B=>Symbol[B]).filter(w.isSymbol)),Wn=Ui(),Cn=Ui(!1,!0),hn=Ui(!0),wr=Ui(!0,!0),Kr=Co();function Co(){let B={};return["includes","indexOf","lastIndexOf"].forEach(Q=>{B[Q]=function(...he){let ae=un(this);for(let mt=0,kt=this.length;mt<kt;mt++)Pn(ae,"get",mt+"");let de=ae[Q](...he);return de===-1||de===!1?ae[Q](...he.map(un)):de}}),["push","pop","shift","unshift","splice"].forEach(Q=>{B[Q]=function(...he){Dr();let ae=un(this)[Q].apply(this,he);return vi(),ae}}),B}function ua(B){let Q=un(this);return Pn(Q,"has",B),Q.hasOwnProperty(B)}function Ui(B=!1,Q=!1){return function(ae,de,mt){if(de==="__v_isReactive")return!B;if(de==="__v_isReadonly")return B;if(de==="__v_isShallow")return Q;if(de==="__v_raw"&&mt===(B?Q?Lt:Ur:Q?Xr:gn).get(ae))return ae;let kt=w.isArray(ae);if(!B){if(kt&&w.hasOwn(Kr,de))return Reflect.get(Kr,de,mt);if(de==="hasOwnProperty")return ua}let X=Reflect.get(ae,de,mt);return(w.isSymbol(de)?or.has(de):on(de))||(B||Pn(ae,"get",de),Q)?X:sr(X)?kt&&w.isIntegerKey(de)?X:X.value:w.isObject(X)?B?Or(X):bi(X):X}}let Jo=$i(),Ko=$i(!0);function $i(B=!1){return function(he,ae,de,mt){let kt=he[ae];if(ai(kt)&&sr(kt)&&!sr(de))return!1;if(!B&&(!Pr(de)&&!ai(de)&&(kt=un(kt),de=un(de)),!w.isArray(he)&&sr(kt)&&!sr(de)))return kt.value=de,!0;let X=w.isArray(he)&&w.isIntegerKey(ae)?Number(ae)<he.length:w.hasOwn(he,ae),K=Reflect.set(he,ae,de,mt);return he===un(mt)&&(X?w.hasChanged(de,kt)&&nt(he,"set",ae,de,kt):nt(he,"add",ae,de)),K}}function ri(B,Q){let he=w.hasOwn(B,Q),ae=B[Q],de=Reflect.deleteProperty(B,Q);return de&&he&&nt(B,"delete",Q,void 0,ae),de}function Ao(B,Q){let he=Reflect.has(B,Q);return(!w.isSymbol(Q)||!or.has(Q))&&Pn(B,"has",Q),he}function Oo(B){return Pn(B,"iterate",w.isArray(B)?"length":bn),Reflect.ownKeys(B)}let To={get:Wn,set:Jo,deleteProperty:ri,has:Ao,ownKeys:Oo},Xi={get:hn,set(B,Q){return!0},deleteProperty(B,Q){return!0}},mi=w.extend({},To,{get:Cn,set:Ko}),Po=w.extend({},Xi,{get:wr}),uo=B=>B,kn=B=>Reflect.getPrototypeOf(B);function Cr(B,Q,he=!1,ae=!1){B=B.__v_raw;let de=un(B),mt=un(Q);he||(Q!==mt&&Pn(de,"get",Q),Pn(de,"get",mt));let{has:kt}=kn(de),X=ae?uo:he?to:$r;if(kt.call(de,Q))return X(B.get(Q));if(kt.call(de,mt))return X(B.get(mt));B!==de&&B.get(Q)}function Qi(B,Q=!1){let he=this.__v_raw,ae=un(he),de=un(B);return Q||(B!==de&&Pn(ae,"has",B),Pn(ae,"has",de)),B===de?he.has(B):he.has(B)||he.has(de)}function Kn(B,Q=!1){return B=B.__v_raw,!Q&&Pn(un(B),"iterate",bn),Reflect.get(B,"size",B)}function eo(B){B=un(B);let Q=un(this);return kn(Q).has.call(Q,B)||(Q.add(B),nt(Q,"add",B,B)),this}function Io(B,Q){Q=un(Q);let he=un(this),{has:ae,get:de}=kn(he),mt=ae.call(he,B);mt||(B=un(B),mt=ae.call(he,B));let kt=de.call(he,B);return he.set(B,Q),mt?w.hasChanged(Q,kt)&&nt(he,"set",B,Q,kt):nt(he,"add",B,Q),this}function fo(B){let Q=un(this),{has:he,get:ae}=kn(Q),de=he.call(Q,B);de||(B=un(B),de=he.call(Q,B));let mt=ae?ae.call(Q,B):void 0,kt=Q.delete(B);return de&&nt(Q,"delete",B,void 0,mt),kt}function ii(){let B=un(this),Q=B.size!==0,he=void 0,ae=B.clear();return Q&&nt(B,"clear",void 0,void 0,he),ae}function ar(B,Q){return function(ae,de){let mt=this,kt=mt.__v_raw,X=un(kt),K=Q?uo:B?to:$r;return!B&&Pn(X,"iterate",bn),kt.forEach((ie,Ne)=>ae.call(de,K(ie),K(Ne),mt))}}function kr(B,Q,he){return function(...ae){let de=this.__v_raw,mt=un(de),kt=w.isMap(mt),X=B==="entries"||B===Symbol.iterator&&kt,K=B==="keys"&&kt,ie=de[B](...ae),Ne=he?uo:Q?to:$r;return!Q&&Pn(mt,"iterate",K?Jn:bn),{next(){let{value:lt,done:Zt}=ie.next();return Zt?{value:lt,done:Zt}:{value:X?[Ne(lt[0]),Ne(lt[1])]:Ne(lt),done:Zt}},[Symbol.iterator](){return this}}}}function Nn(B){return function(...Q){return B==="delete"?!1:this}}function Zn(){let B={get(mt){return Cr(this,mt)},get size(){return Kn(this)},has:Qi,add:eo,set:Io,delete:fo,clear:ii,forEach:ar(!1,!1)},Q={get(mt){return Cr(this,mt,!1,!0)},get size(){return Kn(this)},has:Qi,add:eo,set:Io,delete:fo,clear:ii,forEach:ar(!1,!0)},he={get(mt){return Cr(this,mt,!0)},get size(){return Kn(this,!0)},has(mt){return Qi.call(this,mt,!0)},add:Nn("add"),set:Nn("set"),delete:Nn("delete"),clear:Nn("clear"),forEach:ar(!0,!1)},ae={get(mt){return Cr(this,mt,!0,!0)},get size(){return Kn(this,!0)},has(mt){return Qi.call(this,mt,!0)},add:Nn("add"),set:Nn("set"),delete:Nn("delete"),clear:Nn("clear"),forEach:ar(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(mt=>{B[mt]=kr(mt,!1,!1),he[mt]=kr(mt,!0,!1),Q[mt]=kr(mt,!1,!0),ae[mt]=kr(mt,!0,!0)}),[B,he,Q,ae]}let[Ni,Hi,oi,Fr]=Zn();function vr(B,Q){let he=Q?B?Fr:oi:B?Hi:Ni;return(ae,de,mt)=>de==="__v_isReactive"?!B:de==="__v_isReadonly"?B:de==="__v_raw"?ae:Reflect.get(w.hasOwn(he,de)&&de in ae?he:ae,de,mt)}let ki={get:vr(!1,!1)},No={get:vr(!1,!0)},Vr={get:vr(!0,!1)},Zr={get:vr(!0,!0)};function Ar(B,Q,he){let ae=un(he);if(ae!==he&&Q.call(B,ae)){let de=w.toRawType(B);console.warn(`Reactive ${de} contains both the raw and reactive versions of the same object${de==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let gn=new WeakMap,Xr=new WeakMap,Ur=new WeakMap,Lt=new WeakMap;function Oe(B){switch(B){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function _i(B){return B.__v_skip||!Object.isExtensible(B)?0:Oe(w.toRawType(B))}function bi(B){return ai(B)?B:Tr(B,!1,To,ki,gn)}function Ei(B){return Tr(B,!1,mi,No,Xr)}function Or(B){return Tr(B,!0,Xi,Vr,Ur)}function Ri(B){return Tr(B,!0,Po,Zr,Lt)}function Tr(B,Q,he,ae,de){if(!w.isObject(B)||B.__v_raw&&!(Q&&B.__v_isReactive))return B;let mt=de.get(B);if(mt)return mt;let kt=_i(B);if(kt===0)return B;let X=new Proxy(B,kt===2?ae:he);return de.set(B,X),X}function Rr(B){return ai(B)?Rr(B.__v_raw):!!(B&&B.__v_isReactive)}function ai(B){return!!(B&&B.__v_isReadonly)}function Pr(B){return!!(B&&B.__v_isShallow)}function yi(B){return Rr(B)||ai(B)}function un(B){let Q=B&&B.__v_raw;return Q?un(Q):B}function ji(B){return w.def(B,"__v_skip",!0),B}let $r=B=>w.isObject(B)?bi(B):B,to=B=>w.isObject(B)?Or(B):B;function En(B){Sn&&cn&&(B=un(B),We(B.dep||(B.dep=zt())))}function Hr(B,Q){B=un(B);let he=B.dep;he&&Ot(he)}function sr(B){return!!(B&&B.__v_isRef===!0)}function Si(B){return mr(B,!1)}function xi(B){return mr(B,!0)}function mr(B,Q){return sr(B)?B:new Qr(B,Q)}class Qr{constructor(Q,he){this.__v_isShallow=he,this.dep=void 0,this.__v_isRef=!0,this._rawValue=he?Q:un(Q),this._value=he?Q:$r(Q)}get value(){return En(this),this._value}set value(Q){let he=this.__v_isShallow||Pr(Q)||ai(Q);Q=he?Q:un(Q),w.hasChanged(Q,this._rawValue)&&(this._rawValue=Q,this._value=he?Q:$r(Q),Hr(this,Q))}}function er(B){Hr(B,void 0)}function tr(B){return sr(B)?B.value:B}let Gn={get:(B,Q,he)=>tr(Reflect.get(B,Q,he)),set:(B,Q,he,ae)=>{let de=B[Q];return sr(de)&&!sr(he)?(de.value=he,!0):Reflect.set(B,Q,he,ae)}};function nr(B){return Rr(B)?B:new Proxy(B,Gn)}class cr{constructor(Q){this.dep=void 0,this.__v_isRef=!0;let{get:he,set:ae}=Q(()=>En(this),()=>Hr(this));this._get=he,this._set=ae}get value(){return this._get()}set value(Q){this._set(Q)}}function ho(B){return new cr(B)}function go(B){let Q=w.isArray(B)?new Array(B.length):{};for(let he in B)Q[he]=no(B,he);return Q}class ko{constructor(Q,he,ae){this._object=Q,this._key=he,this._defaultValue=ae,this.__v_isRef=!0}get value(){let Q=this._object[this._key];return Q===void 0?this._defaultValue:Q}set value(Q){this._object[this._key]=Q}get dep(){return On(un(this._object),this._key)}}function no(B,Q,he){let ae=B[Q];return sr(ae)?ae:new ko(B,Q,he)}var Ro;class jr{constructor(Q,he,ae,de){this._setter=he,this.dep=void 0,this.__v_isRef=!0,this[Ro]=!1,this._dirty=!0,this.effect=new gi(Q,()=>{this._dirty||(this._dirty=!0,Hr(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!de,this.__v_isReadonly=ae}get value(){let Q=un(this);return En(Q),(Q._dirty||!Q._cacheable)&&(Q._dirty=!1,Q._value=Q.effect.run()),Q._value}set value(Q){this._setter(Q)}}Ro="__v_isReadonly";function xr(B,Q,he=!1){let ae,de,mt=w.isFunction(B);return mt?(ae=B,de=w.NOOP):(ae=B.get,de=B.set),new jr(ae,de,mt||!de,he)}var po;let xo=Promise.resolve(),ro=[],Bi=!1,vo=B=>{ro.push(B),Bi||(Bi=!0,xo.then(Mi))},Mi=()=>{for(let B=0;B<ro.length;B++)ro[B]();ro.length=0,Bi=!1};class zi{constructor(Q){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[po]=!0;let he,ae=!1,de=!1;this.effect=new gi(Q,mt=>{if(this.dep){if(mt)he=this._value,ae=!0;else if(!de){let kt=ae?he:this._value;de=!0,ae=!1,vo(()=>{this.effect.active&&this._get()!==kt&&Hr(this),de=!1})}for(let kt of this.dep)kt.computed instanceof zi&&kt.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return En(this),un(this)._get()}}po="__v_isReadonly";function Zo(B){return new zi(B)}return p.EffectScope=h,p.ITERATE_KEY=bn,p.ReactiveEffect=gi,p.computed=xr,p.customRef=ho,p.deferredComputed=Zo,p.effect=qr,p.effectScope=E,p.enableTracking=Jr,p.getCurrentScope=Ve,p.isProxy=yi,p.isReactive=Rr,p.isReadonly=ai,p.isRef=sr,p.isShallow=Pr,p.markRaw=ji,p.onScopeDispose=Nt,p.pauseTracking=Dr,p.proxyRefs=nr,p.reactive=bi,p.readonly=Or,p.ref=Si,p.resetTracking=vi,p.shallowReactive=Ei,p.shallowReadonly=Ri,p.shallowRef=xi,p.stop=gr,p.toRaw=un,p.toRef=no,p.toRefs=go,p.track=Pn,p.trigger=nt,p.triggerRef=er,p.unref=tr,Object.defineProperty(p,"__esModule",{value:!0}),p}({},f);return s}function zp(f){var s=function(p){"use strict";let w=`
`,N=44,S=50,h=50,E=["%","%"],x="#007aff",Ve=/^([a-z-]+:)?\/\//i,Nt=/^data:.*,.*/,zt="WEB_INVOKE_APPSERVICE",Tt="wxs://",I="json://",St="wxsModules",In="renderjsModules",at="onShow",z="onHide",J="onLaunch",dn="onError",cn="onThemeChange",bn="offThemeChange",Jn="onKeyboardHeightChange",gi="onPageNotFound",pi="onUnhandledRejection",qr="onExit",gr="onLoad",Sn="onReady",pr="onUnload",Dr="onInit",Jr="onSaveExitState",vi="onResize",Pn="onBackPress",We="onPageScroll",nt="onTabItemTap",Ot="onReachBottom",Xt="onPullDownRefresh",On="onShareTimeline",on="onAddToFavorites",or="onShareAppMessage",Wn="onNavigationBarButtonTap",Cn="onNavigationBarSearchInputClicked",hn="onNavigationBarSearchInputChanged",wr="onNavigationBarSearchInputConfirmed",Kr="onNavigationBarSearchInputFocusChanged",Co="onAppEnterForeground",ua="onAppEnterBackground",Ui="onWxsInvokeCallMethod";function Jo(X){return!!X.appContext}function Ko(X){return X&&(Jo(X)?X.proxy:X)}function $i(X){return X.nodeType===1}function ri(X,K=!1){let{vnode:ie}=X;if($i(ie.el))return K?ie.el?[ie.el]:[]:ie.el;let{subTree:Ne}=X;if(Ne.shapeFlag&16){let lt=Ne.children.filter(Zt=>Zt.el&&$i(Zt.el));if(lt.length>0)return K?lt.map(Zt=>Zt.el):lt[0].el}return K?ie.el?[ie.el]:[]:ie.el}let Ao=0;function Oo(X,...K){let ie=Date.now(),Ne=Ao?ie-Ao:0;return Ao=ie,`[${ie}][${Ne}ms][${X}]\uFF1A${K.map(lt=>JSON.stringify(lt)).join(" ")}`}function To(X){let K=Object.create(null);return ie=>K[ie]||(K[ie]=X(ie))}function Xi(X){return To(X)}function mi(X=""){return(""+X).replace(/[^\x00-\xff]/g,"**").length}function Po(X){return X.indexOf("/")===0}function uo(X){return Po(X)?X:"/"+X}function kn(X){return Po(X)?X.slice(1):X}let Cr=(X,K)=>{let ie;for(let Ne=0;Ne<X.length;Ne++)ie=X[Ne](K);return ie};function Qi(X,K=null){let ie;return(...Ne)=>(X&&(ie=X.apply(K,Ne),X=null),ie)}function Kn(X,K){X=X||{},p.isString(K)&&(K={errMsg:K}),/:ok$/.test(K.errMsg)?p.isFunction(X.success)&&X.success(K):p.isFunction(X.fail)&&X.fail(K),p.isFunction(X.complete)&&X.complete(K)}function eo(X){let K={};return p.isPlainObject(X)&&Object.keys(X).sort().forEach(ie=>{let Ne=ie;K[Ne]=X[Ne]}),Object.keys(K)?K:X}let Io=encodeURIComponent;function fo(X,K=Io){let ie=X?Object.keys(X).map(Ne=>{let lt=X[Ne];return typeof lt===void 0||lt===null?lt="":p.isPlainObject(lt)&&(lt=JSON.stringify(lt)),K(Ne)+"="+K(lt)}).filter(Ne=>Ne.length>0).join("&"):null;return ie?`?${ie}`:""}function ii(X){try{return decodeURIComponent(""+X)}catch(K){}return""+X}let ar=/\+/g;function kr(X){let K={};if(X===""||X==="?")return K;let Ne=(X[0]==="?"?X.slice(1):X).split("&");for(let lt=0;lt<Ne.length;++lt){let Zt=Ne[lt].replace(ar," "),xn=Zt.indexOf("="),Ln=ii(xn<0?Zt:Zt.slice(0,xn)),_r=xn<0?null:ii(Zt.slice(xn+1));if(Ln in K){let Br=K[Ln];p.isArray(Br)||(Br=K[Ln]=[Br]),Br.push(_r)}else K[Ln]=_r}return K}function Nn(X){let[K,ie]=X.split("?",2);return{path:K,query:kr(ie||"")}}function Zn(X){let K={};return X&&Object.keys(X).forEach(ie=>{ie.indexOf("data-")===0&&(K[ie.replace("data-","")]=X[ie])}),K}class Ni extends Error{constructor(K){super(K);this.name="DOMException"}}function Hi(X,K){return K&&(K.capture&&(X+="Capture"),K.once&&(X+="Once"),K.passive&&(X+="Passive")),`on${p.capitalize(p.camelize(X))}`}class oi{constructor(K,ie){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=K,this.bubbles=!!ie.bubbles,this.cancelable=!!ie.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function Fr(X){if(X instanceof oi)return X;let[K]=No(X.type),ie=new oi(K,{bubbles:!1,cancelable:!1});return p.extend(ie,X),ie}class vr{constructor(){this.listeners=Object.create(null)}dispatchEvent(K){let ie=this.listeners[K.type];if(!ie)return!1;let Ne=Fr(K),lt=ie.length;for(let Zt=0;Zt<lt&&(ie[Zt].call(this,Ne),!Ne._end);Zt++);return Ne.cancelable&&Ne.defaultPrevented}addEventListener(K,ie,Ne){K=Hi(K,Ne),(this.listeners[K]||(this.listeners[K]=[])).push(ie)}removeEventListener(K,ie,Ne){K=Hi(K,Ne);let lt=this.listeners[K];if(!lt)return;let Zt=lt.indexOf(ie);Zt>-1&&lt.splice(Zt,1)}}let ki=/(?:Once|Passive|Capture)$/;function No(X){let K;if(ki.test(X)){K={};let ie;for(;ie=X.match(ki);)X=X.slice(0,X.length-ie[0].length),K[ie[0].toLowerCase()]=!0}return[p.hyphenate(X.slice(2)),K]}let Vr=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function Zr(X){let K=0;return X.includes("stop")&&(K|=Vr.stop),X.includes("prevent")&&(K|=Vr.prevent),X.includes("self")&&(K|=Vr.self),K}let Ar=0,gn=1,Xr=3,Ur=8;function Lt(X,K){let{parentNode:ie}=X;if(!ie)return null;let{childNodes:Ne}=ie;return Ne[Ne.indexOf(X)+(K==="n"?1:-1)]||null}function Oe(X){let{parentNode:K}=X;if(K){let{childNodes:ie}=K,Ne=ie.indexOf(X);Ne>-1&&(X.parentNode=null,ie.splice(Ne,1))}}function _i(X){!X.nodeId&&X.pageNode&&(X.nodeId=X.pageNode.genId())}class bi extends vr{constructor(K,ie,Ne){super();if(this.pageNode=null,this.parentNode=null,this._text=null,Ne){let{pageNode:lt}=Ne;lt&&(this.pageNode=lt,this.nodeId=lt.genId(),!lt.isUnmounted&&lt.onCreate(this,ie))}this.nodeType=K,this.nodeName=ie,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:K}=this,ie=K.length;return ie?K[ie-1]:null}get nextSibling(){return Lt(this,"n")}get nodeValue(){return null}set nodeValue(K){}get textContent(){return this._text||""}set textContent(K){this._text=K,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,K)}get parentElement(){let{parentNode:K}=this;return K&&K.nodeType===gn?K:null}get previousSibling(){return Lt(this,"p")}appendChild(K){return this.insertBefore(K,null)}cloneNode(K){let ie=p.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:Ne}=ie;return Ne&&(ie.attributes=p.extend({},Ne)),K&&(ie.childNodes=ie.childNodes.map(lt=>lt.cloneNode(!0))),ie}insertBefore(K,ie){Oe(K),K.pageNode=this.pageNode,K.parentNode=this,_i(K);let{childNodes:Ne}=this;if(ie){let lt=Ne.indexOf(ie);if(lt===-1)throw new Ni("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");Ne.splice(lt,0,K)}else Ne.push(K);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,K,ie):K}removeChild(K){let{childNodes:ie}=this,Ne=ie.indexOf(K);if(Ne===-1)throw new Ni("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return K.parentNode=null,ie.splice(Ne,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(K):K}}let Ei="class",Or="style",Ri=".vOwnerId",Tr=".vRenderjs";class Rr extends bi{constructor(K,ie,Ne){super(K,ie,Ne);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[Ei]||""}set className(K){this.setAttribute(Ei,K)}get innerHTML(){return""}set innerHTML(K){this._html=K}addEventListener(K,ie,Ne){super.addEventListener(K,ie,Ne),this.pageNode&&!this.pageNode.isUnmounted&&(ie.wxsEvent?this.pageNode.onAddWxsEvent(this,Hi(K,Ne),ie.wxsEvent,Zr(ie.modifiers||[])):this.pageNode.onAddEvent(this,Hi(K,Ne),Zr(ie.modifiers||[])))}removeEventListener(K,ie,Ne){super.removeEventListener(K,ie,Ne),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,Hi(K,Ne))}getAttribute(K){return K===Or?this.style:this.attributes[K]}removeAttribute(K){K==Or?this.style=null:delete this.attributes[K],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,K)}setAttribute(K,ie){K===Or?this.style=ie:this.attributes[K]=ie,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,K,ie)}toJSON({attr:K,normalize:ie}={}){let{attributes:Ne,style:lt,listeners:Zt,_text:xn}=this,Ln={};Object.keys(Ne).length&&(Ln.a=ie?ie(Ne):Ne);let _r=Object.keys(Zt);if(_r.length){let Br,mo={};_r.forEach(Bo=>{let Mo=Zt[Bo];if(Mo.length){let{wxsEvent:Dn,modifiers:Yn}=Mo[0],Fn=Zr(Yn||[]);Dn?(Br||(Br={}),Br[Bo]=[ie?ie(Dn):Dn,Fn]):mo[Bo]=Fn}}),Ln.e=ie?ie(mo,!1):mo,Br&&(Ln.w=ie?ie(Br,!1):Br)}return lt!==null&&(Ln.s=ie?ie(lt):lt),K||(Ln.i=this.nodeId,Ln.n=this.nodeName),xn!==null&&(Ln.t=ie?ie(xn):xn),Ln}}class ai extends bi{constructor(K,ie){super(Ur,"#comment",ie);this._text=""}toJSON(K={}){return K.attr?{}:{i:this.nodeId}}}class Pr extends Rr{constructor(K,ie){super(gn,K.toUpperCase(),ie);this.tagName=this.nodeName}}class yi extends Pr{get value(){return this.getAttribute("value")}set value(K){this.setAttribute("value",K)}}class un extends yi{}class ji extends Rr{constructor(K,ie){super(Xr,"#text",ie);this._text=K}get nodeValue(){return this._text||""}set nodeValue(K){this._text=K,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,K)}}let $r={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},to=["animation"],En=(X,K)=>{if(to.indexOf(K)>-1)return!0;let ie=$r[X.nodeName];return!!(ie&&ie.indexOf(K)>-1)},Hr=1,sr=2,Si=3,xi=4,mr=5,Qr=6,er=7,tr=8,Gn=9,nr=10,cr=12,ho=15,go=20;function ko(X,K,{clearTimeout:ie,setTimeout:Ne}){let lt,Zt=function(){ie(lt),lt=Ne(()=>X.apply(this,arguments),K)};return Zt.cancel=function(){ie(lt)},Zt}class no{constructor(K,ie){this.id=K,this.listener={},this.emitCache=[],ie&&Object.keys(ie).forEach(Ne=>{this.on(Ne,ie[Ne])})}emit(K,...ie){let Ne=this.listener[K];if(!Ne)return this.emitCache.push({eventName:K,args:ie});Ne.forEach(lt=>{lt.fn.apply(lt.fn,ie)}),this.listener[K]=Ne.filter(lt=>lt.type!=="once")}on(K,ie){this._addListener(K,"on",ie),this._clearCache(K)}once(K,ie){this._addListener(K,"once",ie),this._clearCache(K)}off(K,ie){let Ne=this.listener[K];if(!!Ne)if(ie)for(let lt=0;lt<Ne.length;)Ne[lt].fn===ie&&(Ne.splice(lt,1),lt--),lt++;else delete this.listener[K]}_clearCache(K){for(let ie=0;ie<this.emitCache.length;ie++){let Ne=this.emitCache[ie],lt=K?Ne.eventName===K?K:null:Ne.eventName;if(!lt)continue;if(typeof this.emit.apply(this,[lt,...Ne.args])=="number"){this.emitCache.pop();continue}this.emitCache.splice(ie,1),ie--}}_addListener(K,ie,Ne){(this.listener[K]||(this.listener[K]=[])).push({fn:Ne,type:ie})}}let Ro=[Dr,gr,at,z,pr,Pn,We,nt,Ot,Xt,On,or,on,Jr,Wn,Cn,hn,wr,Kr],jr=[gr,at];function xr(X){return jr.indexOf(X)>-1}function po(X){return Ro.indexOf(X)>-1}let xo=[at,z,J,dn,cn,gi,pi,qr,Dr,gr,Sn,pr,vi,Pn,We,nt,Ot,Xt,On,on,or,Jr,Wn,Cn,hn,wr,Kr];function ro(X,K,ie=!0){return ie&&!p.isFunction(K)?!1:xo.indexOf(X)>-1?!0:X.indexOf("on")===0}let Bi,vo=[];function Mi(X){if(Bi)return X(Bi);vo.push(X)}function zi(X){Bi=X,vo.forEach(K=>K(X))}let Zo=Qi((X,K)=>{if(p.isFunction(X._component.onError))return K(X)}),B=function(){};B.prototype={on:function(X,K,ie){var Ne=this.e||(this.e={});return(Ne[X]||(Ne[X]=[])).push({fn:K,ctx:ie}),this},once:function(X,K,ie){var Ne=this;function lt(){Ne.off(X,lt),K.apply(ie,arguments)}return lt._=K,this.on(X,lt,ie)},emit:function(X){var K=[].slice.call(arguments,1),ie=((this.e||(this.e={}))[X]||[]).slice(),Ne=0,lt=ie.length;for(Ne;Ne<lt;Ne++)ie[Ne].fn.apply(ie[Ne].ctx,K);return this},off:function(X,K){var ie=this.e||(this.e={}),Ne=ie[X],lt=[];if(Ne&&K)for(var Zt=0,xn=Ne.length;Zt<xn;Zt++)Ne[Zt].fn!==K&&Ne[Zt].fn._!==K&&lt.push(Ne[Zt]);return lt.length?ie[X]=lt:delete ie[X],this}};var Q=B;let he={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"};function ae(X){return X&&X in he?he[X]:X}function de(X){return X==="black"?"#000000":"#ffffff"}function mt(X,K={},ie="light"){let Ne=K[ie],lt={};return Ne?(Object.keys(X).forEach(Zt=>{let xn=X[Zt];lt[Zt]=(()=>{if(p.isPlainObject(xn))return mt(xn,K,ie);if(p.isArray(xn))return xn.map(Ln=>p.isPlainObject(Ln)?mt(Ln,K,ie):Ln);if(p.isString(xn)&&xn.startsWith("@")){let Ln=xn.replace("@",""),_r=Ne[Ln]||xn;switch(Zt){case"titleColor":_r=de(_r);break;case"borderStyle":_r=ae(_r);break}return _r}return xn})()}),lt):X}var kt={invokeArrayFns:Cr,isUniLifecycleHook:ro,ON_LOAD:gr,ON_SHOW:at,LINEFEED:w,RENDERJS_MODULES:In,formatLog:Oo,WXS_PROTOCOL:Tt,WXS_MODULES:St,UniLifecycleHooks:xo,ON_ERROR:dn,invokeCreateErrorHandler:Zo,invokeCreateVueAppHook:zi,parseNVueDataset:Zn,once:Qi,I18N_JSON_DELIMITERS:E,Emitter:Q,normalizeStyles:mt,addLeadingSlash:uo,resolveComponentInstance:Ko,removeLeadingSlash:kn,ON_RESIZE:vi,ON_APP_ENTER_FOREGROUND:Co,ON_APP_ENTER_BACKGROUND:ua,ON_HIDE:z,ON_PAGE_SCROLL:We,ON_REACH_BOTTOM:Ot,SCHEME_RE:Ve,DATA_RE:Nt,cacheStringFunction:Xi,parseQuery:kr,callOptions:Kn,ON_UNHANDLE_REJECTION:pi,ON_PAGE_NOT_FOUND:gi,PRIMARY_COLOR:x,getLen:mi,ON_THEME_CHANGE:cn,TABBAR_HEIGHT:S,NAVBAR_HEIGHT:N,sortObject:eo,OFF_THEME_CHANGE:bn,ON_KEYBOARD_HEIGHT_CHANGE:Jn,normalizeTabBarStyles:ae,ON_NAVIGATION_BAR_BUTTON_TAP:Wn,stringifyQuery:fo,debounce:ko,ON_PULL_DOWN_REFRESH:Xt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:hn,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:wr,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:Cn,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:Kr,ON_BACK_PRESS:Pn,UniNode:bi,NODE_TYPE_PAGE:Ar,ACTION_TYPE_PAGE_CREATE:Hr,ACTION_TYPE_PAGE_CREATED:sr,ACTION_TYPE_PAGE_SCROLL:ho,ACTION_TYPE_INSERT:xi,ACTION_TYPE_CREATE:Si,ACTION_TYPE_REMOVE:mr,ACTION_TYPE_ADD_EVENT:tr,ACTION_TYPE_ADD_WXS_EVENT:cr,ACTION_TYPE_REMOVE_EVENT:Gn,ACTION_TYPE_SET_ATTRIBUTE:Qr,ACTION_TYPE_REMOVE_ATTRIBUTE:er,ACTION_TYPE_SET_TEXT:nr,ON_READY:Sn,ON_UNLOAD:pr,EventChannel:no,ON_REACH_BOTTOM_DISTANCE:h,parseUrl:Nn,onCreateVueApp:Mi,ON_TAB_ITEM_TAP:nt,ON_LAUNCH:J,ACTION_TYPE_EVENT:go,createUniEvent:Fr,ON_WXS_INVOKE_CALL_METHOD:Ui,WEB_INVOKE_APPSERVICE:zt,isRootHook:po,isRootImmediateHook:xr,UniInputElement:yi,UniTextAreaElement:un,UniElement:Pr,UniTextNode:ji,UniCommentNode:ai,forcePatchProp:En,JSON_PROTOCOL:I,resolveOwnerEl:ri,ATTR_V_OWNER_ID:Ri,ATTR_V_RENDERJS:Tr};return kt}(f);return s}var mN=1;function Wp(){return(mN++).toString()}var df=f=>f&&JSON.parse(JSON.stringify(f))||f;function gc(f){let s=Fa(f);return s.substring(8,s.length-1)}function hf(f){if(!zn(btoa))return"";let s=Array.prototype.map.call(new Uint8Array(f),p=>String.fromCharCode(p)).join("");return btoa(s)}function pc(f){if(!f||typeof f!="object")return!0;for(let s in f)if(il(f,s))return!1;return!0}var iu=["off","error","warn","info","log","debug"],ou={};function Gp(){iu.forEach(f=>{let s=iu.indexOf(f);ou[f]={},iu.forEach(p=>{iu.indexOf(p)<=s&&(ou[f][p]=!0)})})}function Qn(f){let s=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return ou[s]&&ou[s][f]}function Vi(f){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+f,"__DEBUG")}function Yp(f,s,p){return`${s}@${p}#${f}`}var au=class{constructor(s){this.instanceId=String(s),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(s){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=s,this.lastCallbackId}remove(s){let p=this.callbacks[s];return delete this.callbacks[s],p}registerHook(s,p,w,N){let S=Yp(s,p,w);this.hooks[S]&&console.warn(`[JS Framework] Override an existing component hook "${S}".`),this.hooks[S]=N}triggerHook(s,p,w,N){let S=Yp(s,p,w),h=this.hooks[S];if(!zn(h))return console.error(`[JS Framework] Invalid hook function type (${typeof h}) on "${S}".`),null;let E=null;try{E=h.apply(null,N||[])}catch(x){throw console.error(`[JS Framework] Failed to execute the hook function on "${S}".`),x}return E}consume(s,p,w){let N=this.callbacks[s];if((typeof w=="undefined"||w===!1)&&delete this.callbacks[s],zn(N))try{return N.call(null,p,w)}catch(S){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${S.toString()}`),S}return new Error(`invalid callback id "${s}"`)}close(){this.callbacks={},this.hooks={}}};var su={};function qp(f,s){f&&(su[f]=s)}function rs(f){return su[f]}function Jp(f){delete su[f]}function Lr(f){if(f){let s=su[f];if(s&&s.taskCenter)return s.taskCenter}return null}function _N(f){f.calcClassList&&f.calcClassList()}function gf(f,s,p){let{documentElement:w}=f;if(w.pureChildren.length>0||s.parentNode)return;let N=w.children,S=p?N.indexOf(p):-1;S<0?N.push(s):N.splice(S,0,s),s.nodeType===1?(s.role==="body"?(s.docId=f.id,s.ownerDocument=f,s.parentNode=w,ol(s,w)):(s.children.forEach(h=>{h.parentNode=s}),pf(f,s),ol(s,w),delete f.nodeMap[s.nodeId]),w.pureChildren.push(s),bN(f,s)):(s.parentNode=w,f.nodeMap[s.ref]=s)}function bN(f,s){let p=s.toJSON();f&&f.taskCenter&&zn(f.taskCenter.send)&&f.taskCenter.send("dom",{action:"createBody"},[p])}function pf(f,s){s.role="body",s.depth=1,delete f.nodeMap[s.nodeId],s.ref="_root",f.nodeMap._root=s,f.body=s}function ol(f,s){f.parentNode=s,_N(f),s.docId&&(f.docId=s.docId,f.ownerDocument=s.ownerDocument,f.ownerDocument.nodeMap[f.nodeId]=f,f.depth=s.depth+1),f.children.forEach(p=>{ol(p,f)})}function vf(f){for(;f;){if(f.nodeType===1)return f;f=f.nextSibling}}function mf(f){for(;f;){if(f.nodeType===1)return f;f=f.previousSibling}}function al(f,s,p,w=!1){p<0&&(p=0);let N=s[p-1],S=s[p];return s.splice(p,0,f),w&&(N&&(N.nextSibling=f),f.previousSibling=N,f.nextSibling=S,S&&(S.previousSibling=f)),p}function sl(f,s,p,w=!1){let N=s.indexOf(f);if(N<0)return-1;if(w){let x=s[N-1],Ve=s[N+1];x&&(x.nextSibling=Ve),Ve&&(Ve.previousSibling=x)}s.splice(N,1);let S=p;N<=p&&(S=p-1);let h=s[S-1],E=s[S];return s.splice(S,0,f),w&&(h&&(h.nextSibling=f),f.previousSibling=h,f.nextSibling=E,E&&(E.previousSibling=f)),N===S?-1:p}function _f(f,s,p=!1){let w=s.indexOf(f);if(!(w<0)){if(p){let N=s[w-1],S=s[w+1];N&&(N.nextSibling=S),S&&(S.previousSibling=N)}s.splice(w,1)}}var ll=class{constructor(){this.depth=0;this.nodeId=Wp(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let s=rs(this.docId);s&&(delete this.docId,delete s.nodeMap[this.nodeId]),this.children.forEach(p=>{p.destroy()})}};var Kp={};function bf(f,s){if(!Ii(s)||!s.length)return;class p extends Zi{}s.forEach(w=>{p.prototype[w]=function(...N){let S=Lr(this.docId);if(S)return S.send("component",{ref:this.ref,component:f,method:w},N)}}),Kp[f]=p}function Zp(f){return Kp[f]}function Nr(f,s,p,w,N){let S={type:"decl",prop:f,value:s.toString(),raws:w,source:N};return p&&(S.important=!0),S}var EN="backgroundColor",yN="backgroundImage",SN=f=>{let{value:s,important:p,raws:w,source:N}=f;return/^#?\S+$/.test(s)||/^rgba?(.+)$/.test(s)?[Nr(EN,s,p,w,N)]:/^linear-gradient(.+)$/.test(s)?[Nr(yN,s,p,w,N)]:[f]},wN="Width",CN="Style",AN="Color";function ON(f){return s=>{let{prop:p,value:w,important:N,raws:S,source:h}=s,E=w.replace(/\s*,\s*/g,",").split(/\s+/),x=[/^[\d\.]+\S*|^(thin|medium|thick)$/,/^(solid|dashed|dotted|none)$/,/\S+/].map(Ve=>{let Nt=E.findIndex(zt=>Ve.test(zt));return Nt<0?null:E.splice(Nt,1)[0]});return E.length?[s]:[Nr(p+wN,(x[0]||(f.type==="uvue"?"thin":"0")).trim(),N,S,h),Nr(p+CN,(x[1]||(f.type==="uvue"?"none":"solid")).trim(),N,S,h),Nr(p+AN,(x[2]||"#000000").trim(),N,S,h)]}}var TN="borderTop",PN="borderRight",IN="borderBottom",NN="borderLeft",Ef=f=>{let{prop:s,value:p,important:w,raws:N,source:S}=f,h=ff(s).split("-")[1];h=ru(h);let E=p.replace(/\s*,\s*/g,",").split(/\s+/);switch(E.length){case 1:return[f];case 2:E.push(E[0],E[1]);break;case 3:E.push(E[1]);break}return[Nr(TN+h,E[0],w,N,S),Nr(PN+h,E[1],w,N,S),Nr(IN+h,E[2],w,N,S),Nr(NN+h,E[3],w,N,S)]},kN="borderTopLeftRadius",RN="borderTopRightRadius",xN="borderBottomRightRadius",BN="borderBottomLeftRadius",MN=f=>{let{value:s,important:p,raws:w,source:N}=f,S=s.split(/\s+/);if(s.includes("/"))return[f];switch(S.length){case 1:return[f];case 2:S.push(S[0],S[1]);break;case 3:S.push(S[1]);break}return[Nr(kN,S[0],p,w,N),Nr(RN,S[1],p,w,N),Nr(xN,S[2],p,w,N),Nr(BN,S[3],p,w,N)]},LN=Ef,DN=Ef,FN="flexDirection",VN="flexWrap",UN=f=>{let{value:s,important:p,raws:w,source:N}=f,S=s.split(/\s+/),h=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(E=>{let x=S.findIndex(Ve=>E.test(Ve));return x<0?null:S.splice(x,1)[0]});return S.length?[f]:[Nr(FN,h[0]||"column",p,w,N),Nr(VN,h[1]||"nowrap",p,w,N)]},$N="Top",HN="Right",jN="Bottom",zN="Left",Xp=f=>s=>{let{value:p,important:w,raws:N,source:S}=s,h=p.split(/\s+/);switch(h.length){case 1:h.push(h[0],h[0],h[0]);break;case 2:h.push(h[0],h[1]);break;case 3:h.push(h[1]);break}return[Nr(f+$N,h[0],w,N,S),Nr(f+HN,h[1],w,N,S),Nr(f+jN,h[2],w,N,S),Nr(f+zN,h[3],w,N,S)]},WN=Xp("margin"),GN=Xp("padding"),YN="transitionProperty",qN="transitionDuration",JN="transitionTimingFunction",KN="transitionDelay",ZN=f=>{let s=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:p,important:w,raws:N,source:S}=f,h=[],E=p.match(s);return E&&(E[1]&&h.push(Nr(YN,E[1],w,N,S)),E[2]&&h.push(Nr(qN,E[2],w,N,S)),E[3]&&h.push(Nr(JN,E[3],w,N,S)),E[4]&&h.push(Nr(KN,E[4],w,N,S))),h};function XN(f){let s=ON(f),p=Np({transition:ZN,border:s,background:SN,borderTop:s,borderRight:s,borderBottom:s,borderLeft:s,borderStyle:LN,borderWidth:DN,borderColor:Ef,borderRadius:MN},f.type!=="uvue"?{margin:WN,padding:GN,flexFlow:UN}:{}),w={};return w=p,w}var yf,Qp=Symbol("expanded");function ev(f){return{postcssPlugin:"nvue:expand",Declaration(p){if(p[Qp])return;yf||(yf=XN(f));let w=yf[p.prop];if(w){let N=w(p);N.length===1&&N[0]===p||p.replaceWith(N)}p[Qp]=!0}}}var QN=ev({type:"nvue"}).Declaration;function Sf(f,s){let p=Fi({replaceWith(N){w=N}},ek(f,s)),w=[p];return QN(p),w}function ek(f,s){let p=s+"";return p.includes("!important")?{prop:f,value:p.replace(/\s*!important/,""),important:!0}:{prop:f,value:p,important:!1}}var tk="view",nk=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function wf(f,s){let p=rs(f);p.nodeMap[s.nodeId]=s}var Cf;function tv(f){Cf||(Cf=f)}var Zi=class extends ll{constructor(s=tk,p={},w){super();let N=Zp(s);if(N&&!w)return new N(s,p,!0);this.nodeType=1,this.type=s,this.attr=p.attr||{},this.style=p.style||{},this.classStyle=p.classStyle||{},this.classList=p.classList||[],this.styleSheet=p.styleSheet||{},this.event={}}appendChild(s){if(!(s.parentNode&&s.parentNode!==this)){if(s.parentNode){if(Qn("debug")&&Vi(`[appendChild](${this.docId},${s.type},${s.ref}) Move <${s.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),sl(s,this.children,this.children.length,!0),s.nodeType===1){let p=sl(s,this.pureChildren,this.pureChildren.length),w=Lr(this.docId);if(w&&p>=0)return w.send("dom",{action:"moveElement"},[s.ref,this.ref,p])}}else if(Qn("debug")&&Vi(`[appendChild](${this.docId},${s.type},${s.ref}) Append <${s.type}> to <${this.type}> (${this.ref}).`),ol(s,this),al(s,this.children,this.children.length,!0),this.docId&&wf(this.docId,s),s.nodeType===1){al(s,this.pureChildren,this.pureChildren.length);let p=Lr(this.docId);if(p)return p.send("dom",{action:"addElement"},[this.ref,s.toJSON(),-1])}}}insertBefore(s,p){if(!(s.parentNode&&s.parentNode!==this)&&!(s===p||s.nextSibling&&s.nextSibling===p)){if(s.parentNode){if(sl(s,this.children,this.children.indexOf(p),!0),s.nodeType===1){let w=vf(p),N=sl(s,this.pureChildren,w?this.pureChildren.indexOf(w):this.pureChildren.length),S=Lr(this.docId);if(S&&N>=0)return S.send("dom",{action:"moveElement"},[s.ref,this.ref,N])}}else if(Qn("debug")&&Vi(`[insertBefore](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), before (${p.ref}).`),ol(s,this),al(s,this.children,this.children.indexOf(p),!0),this.docId&&wf(this.docId,s),s.nodeType===1){let w=vf(p),N=al(s,this.pureChildren,w?this.pureChildren.indexOf(w):this.pureChildren.length),S=Lr(this.docId);if(S)return S.send("dom",{action:"addElement"},[this.ref,s.toJSON(),N])}}}insertAfter(s,p){if(!(s.parentNode&&s.parentNode!==this)&&!(s===p||s.previousSibling&&s.previousSibling===p)){if(s.parentNode){if(sl(s,this.children,this.children.indexOf(p)+1,!0),s.nodeType===1){let w=sl(s,this.pureChildren,this.pureChildren.indexOf(mf(p))+1),N=Lr(this.docId);if(N&&w>=0)return N.send("dom",{action:"moveElement"},[s.ref,this.ref,w])}}else if(Qn("debug")&&Vi(`[insertAfter](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), after (${p.ref}).`),ol(s,this),al(s,this.children,this.children.indexOf(p)+1,!0),this.docId&&wf(this.docId,s),s.nodeType===1){let w=al(s,this.pureChildren,this.pureChildren.indexOf(mf(p))+1),N=Lr(this.docId);if(N)return N.send("dom",{action:"addElement"},[this.ref,s.toJSON(),w])}}}removeChild(s,p){if(s.parentNode&&(_f(s,this.children,!0),s.nodeType===1)){Qn("debug")&&Vi(`[removeChild](${this.docId},${s.type},${s.ref}) Remove <${s.type}> from <${this.type}> (${this.ref}).`),_f(s,this.pureChildren);let w=Lr(this.docId);w&&w.send("dom",{action:"removeElement"},[s.ref])}p||s.destroy()}clear(){let s=Lr(this.docId);s&&this.pureChildren.forEach(p=>{s.send("dom",{action:"removeElement"},[p.ref])}),this.children.forEach(p=>{p.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(s,p,w){if(this.attr[s]===p&&w!==!1)return;this.attr[s]=p;let N=Lr(this.docId);!w&&N&&N.send("dom",{action:"updateAttrs"},[this.ref,{[s]:p}])}setAttrs(s,p){if(pc(s))return;let w={};for(let N in s)this.attr[N]!==s[N]&&(this.attr[N]=s[N],w[N]=s[N]);if(!pc(w)){let N=Lr(this.docId);!p&&N&&N.send("dom",{action:"updateAttrs"},[this.ref,w])}}setStyle(s,p,w){Sf(s,p).forEach(({prop:N,value:S})=>{if(this.style[N]===S&&w!==!1)return;this.style[N]=S;let h=Lr(this.docId);!w&&h&&h.send("dom",{action:"updateStyle"},[this.ref,{[N]:S===""&&N in this.classStyle?this.classStyle[N]:S}])})}setStyles(s,p){if(pc(s))return;let w={};for(let N in s)Sf(N,s[N]).forEach(({prop:S,value:h})=>{this.style[S]!==h&&(this.style[S]=h,w[S]=h===""&&S in this.classStyle?this.classStyle[S]:h)});if(!pc(w)){let N=Lr(this.docId);!p&&N&&N.send("dom",{action:"updateStyle"},[this.ref,w])}}setClassStyle(s){for(let w in this.classStyle)this.classStyle[w]="";Fi(this.classStyle,s);let p=Lr(this.docId);p&&p.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(s){s.length===this.classList.length&&s.filter(p=>!this.classList.includes(p)).length===0||(this.classList=s,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(Cf(this))}setStyleSheet(s){this.styleSheet=s}addEvent(s,p,w){if(this.event||(this.event={}),!this.event[s]){Qn("debug")&&Vi(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${s}" event on <${this.type}> (${this.ref}).`),this.event[s]={handler:p,params:w};let N=Lr(this.docId);N&&N.send("dom",{action:"addEvent"},[this.ref,s])}}removeEvent(s){if(this.event&&this.event[s]){Qn("debug")&&Vi(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${s}" event on <${this.type}> (${this.ref}).`),delete this.event[s];let p=Lr(this.docId);p&&p.send("dom",{action:"removeEvent"},[this.ref,s])}}fireEvent(s,p,w,N){let S=null,h=!1,E=this.event[s];if(E&&p){Qn("debug")&&Vi(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${s}" event on <${this.type}> (${this.ref}).`);let x=E.handler;p.stopPropagation=()=>{h=!0},p.preventDefault=()=>{};try{N&&N.params?S=x.call(this,...N.params,p):S=x.call(this,p)}catch(Ve){throw console.error(`[JS Framework] Failed to invoke the event handler of "${s}" on ${this.type} (${this.ref}):
 ${Ve.toString()}`),Ve}}return!h&&w&&nk.indexOf(s)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(p.currentTarget=this.parentNode,this.parentNode.fireEvent(s,p,w)),S}toStyle(){let s=Object.assign({},this.classStyle),p=this.style;for(let w in p){let N=p[w];s[w]=N===""&&w in this.classStyle?this.classStyle[w]:N}return s}toJSON(s=!1){let p={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},w=[];for(let N in this.event){let{params:S}=this.event[N];S?w.push({type:N,params:S}):w.push(N)}return w.length&&(p.event=w),!s&&this.pureChildren.length&&(p.children=this.pureChildren.map(N=>N.toJSON())),p}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(s=>s.toString()).join("")+"</"+this.type+">"}};function nv(f){let s=f&&f.__v_raw;return s?nv(s):f}function rv(f){let s=gc(f);switch(s){case"Undefined":case"Null":return"";case"RegExp":return f.toString();case"Date":return f.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return nv(f);case"ArrayBuffer":return{"@type":"binary",dataType:s,base64:hf(f)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:s,base64:hf(f.buffer)};default:return JSON.stringify(f)}}var lu=function(){},Fl=class{constructor(s,p){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(s)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new au(s)}),lu=p||function(){}}callback(s,p,w){return this.callbackManager.consume(s,p,w)}registerHook(s,p,w,N){return this.callbackManager.registerHook(s,p,w,N)}triggerHook(s,p,w,N){return this.callbackManager.triggerHook(s,p,w,N)}updateData(s,p,w){this.send("module",{module:"dom",method:"updateComponentData"},[s,p,w])}destroyCallback(){return this.callbackManager.close()}normalize(s,p=!1){let w=gc(s);if(s&&s instanceof Zi)return s.ref;if(s&&s.$el instanceof Zi)return s.$el.ref;if(w==="Function")return this.callbackManager.add(s).toString();if(p){if(w==="Object"){let N={};for(let S in s)N[S]=this.normalize(s[S],!0);return N}if(w==="Array")return s.map(N=>this.normalize(N,!0))}return s&&s.ref&&s["[[VirtualElement]]"]?s.ref:rv(s)}send(s,p,w,N){let{action:S,component:h,ref:E,module:x,method:Ve}=p;switch(w=w.map(Nt=>this.normalize(Nt,s!=="module")),gc(N)==="Object"&&(N=this.normalize(N,!0)),s){case"dom":return Qn("debug")&&Vi(`[task](${this.instanceId},${s},${S}) ${JSON.stringify(w)}`),this[S](this.instanceId,w);case"component":return this.componentHandler(this.instanceId,E,Ve,w,Fi({component:h},N));default:return Qn("debug")&&Vi(`[task](${this.instanceId},${x},${Ve}) ${JSON.stringify(w)}`),this.moduleHandler(this.instanceId,x,Ve,w,N)}}callDOM(s,p){return this[s](this.instanceId,p)}callComponent(s,p,w,N){return this.componentHandler(this.instanceId,s,p,w,N)}callModule(s,p,w,N){return this.moduleHandler(this.instanceId,s,p,w,N)}};function iv(){let f={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},s=Fl.prototype;for(let p in f){let w=f[p];s[p]=w?(N,S)=>w(N,...S):(N,S)=>lu(N,[{module:"dom",method:p,args:S}],"-1")}s.componentHandler=global.callNativeComponent||((p,w,N,S,h)=>lu(p,[{component:h.component,ref:w,method:N,args:S}])),s.moduleHandler=global.callNativeModule||((p,w,N,S)=>lu(p,[{module:w,method:N,args:S}]))}function rk(f,s,p,w,N,S){let h=f.getRef(s);if(h)return f.fireEvent(h,p,w,N,S);if(w)return w._nodeId=s,f.fireEvent(f.getRef("_documentElement"),p,w,N,S)}function ik(f,s,p,w){return f.taskCenter.callback(s,p,w)}function ok(f,s,p,w,N){if(!f||!f.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let S=null;try{S=f.taskCenter.triggerHook(s,p,w,N)}catch(h){throw console.error(`[JS Framework] Failed to trigger the "${p}@${w}" hook on ${s}.`),h}return S}function Af(f,s){let p=rs(f);if(!p)return new Error(`[JS Framework] Failed to receiveTasks, instance (${f}) is not available.`);if(Ii(s))return s.map(w=>{switch(w.method){case"callback":return ik(p,...w.args);case"fireEventSync":case"fireEvent":return rk(p,...w.args);case"componentHook":return ok(p,...w.args)}})}var ks={};function ov(f={}){for(let s in f)il(ks,s)||(ks[s]={}),!!Ii(f[s])&&f[s].forEach(p=>{hi(p)?ks[s][p]=!0:Dl(p)&&hi(p.name)&&(ks[s][p.name]=p.args||[])})}function cu(f,s){return hi(s)?!!(ks[f]&&ks[f][s]):!!ks[f]}function av(f){return ks[f]}var Of={};function sv(f){!Ii(f)||f.forEach(s=>{!s||(hi(s)?Of[s]=!0:Dl(s)&&hi(s.type)&&(Of[s.type]=s,bf(s.type,s.methods)))})}function Tf(f){return!!Of[f]}var Rs=[];function uu(f,s){Pf(f)?console.warn(`Service "${f}" has been registered already!`):(s=Fi({},s),Rs.push({name:f,options:s}))}function fu(f){Rs.some((s,p)=>{if(s.name===f)return Rs.splice(p,1),!0})}function Pf(f){return ak(f)>=0}function ak(f){return Rs.map(s=>s.name).indexOf(f)}function sk(f){return s=>{let p=eu(f,s),{createApp:w}=p;p.createVueApp=p.createApp=(N,S)=>w(N,S).use(lk,s),s.Vue=p}}var lk={install(f,s){ck(f,s),dc(s).initApp(f)}};function ck(f,s){let{mount:p}=f;f.mount=w=>{let N=p(w);return w==="#app"&&s.__registerApp(N),N}}function uk(f){let{UniShared:s,VueShared:p,VueReactivity:w}=f;var N=function(S,h,E,x){"use strict";function Ve(i){}function Nt(i,l){}function zt(i,l,d,_){var A;try{A=_?i(..._):i()}catch(C){I(C,l,d)}return A}function Tt(i,l,d,_){if(h.isFunction(i)){var A=zt(i,l,d,_);return A&&h.isPromise(A)&&A.catch(L=>{I(L,l,d)}),A}for(var C=[],k=0;k<i.length;k++)C.push(Tt(i[k],l,d,_));return C}function I(i,l,d){if(l&&l.vnode,l){for(var _=l.parent,A=l.proxy,C=d;_;){var k=_.ec;if(k){for(var L=0;L<k.length;L++)if(k[L](i,A,C)===!1)return}_=_.parent}var H=l.appContext.config.errorHandler;if(H){zt(H,null,10,[i,A,C]);return}}St(i)}function St(i,l,d){console.error(i)}var In=!1,at=!1,z=[],J=0,dn=[],cn=null,bn=0,Jn={then(i){setTimeout(()=>i(),0)}},gi=S.platform==="iOS",pi=gi?Jn:Promise.resolve(),qr=null;function gr(i){var l=qr||pi;return i?l.then(this?i.bind(this):i):l}function Sn(i){for(var l=J+1,d=z.length;l<d;){var _=l+d>>>1,A=nt(z[_]);A<i?l=_+1:d=_}return l}function pr(i){(!z.length||!z.includes(i,In&&i.allowRecurse?J+1:J))&&(i.id==null?z.push(i):z.splice(Sn(i.id),0,i),Dr())}function Dr(){!In&&!at&&(at=!0,qr=pi.then(Xt))}function Jr(i){var l=z.indexOf(i);l>J&&z.splice(l,1)}function vi(i){h.isArray(i)?dn.push(...i):(!cn||!cn.includes(i,i.allowRecurse?bn+1:bn))&&dn.push(i),Dr()}function Pn(i){for(var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:In?J+1:0;l<z.length;l++){var d=z[l];d&&d.pre&&(z.splice(l,1),l--,d())}}function We(i){if(dn.length){var l=[...new Set(dn)];if(dn.length=0,cn){cn.push(...l);return}for(cn=l,cn.sort((d,_)=>nt(d)-nt(_)),bn=0;bn<cn.length;bn++)cn[bn]();cn=null,bn=0}}var nt=i=>i.id==null?1/0:i.id,Ot=(i,l)=>{var d=nt(i)-nt(l);if(d===0){if(i.pre&&!l.pre)return-1;if(l.pre&&!i.pre)return 1}return d};function Xt(i){at=!1,In=!0,z.sort(Ot);var l=h.NOOP;try{for(J=0;J<z.length;J++){var d=z[J];d&&d.active!==!1&&zt(d,null,14)}}finally{J=0,z.length=0,We(),In=!1,qr=null,(z.length||dn.length)&&Xt()}}S.devtools=void 0;var On=[];function on(i,l){var d,_;if(S.devtools=i,S.devtools)S.devtools.enabled=!0,On.forEach(C=>{var{event:k,args:L}=C;return S.devtools.emit(k,...L)}),On=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((_=(d=window.navigator)===null||d===void 0?void 0:d.userAgent)===null||_===void 0?void 0:_.includes("jsdom"))){var A=l.__VUE_DEVTOOLS_HOOK_REPLAY__=l.__VUE_DEVTOOLS_HOOK_REPLAY__||[];A.push(C=>{on(C,l)}),setTimeout(()=>{S.devtools||(l.__VUE_DEVTOOLS_HOOK_REPLAY__=null,On=[])},3e3)}else On=[]}function or(i,l){if(!i.isUnmounted){for(var d=i.vnode.props||h.EMPTY_OBJ,_=arguments.length,A=new Array(_>2?_-2:0),C=2;C<_;C++)A[C-2]=arguments[C];var k=A,L=l.startsWith("update:"),H=L&&l.slice(7);if(H&&H in d){var ne="".concat(H==="modelValue"?"model":H,"Modifiers"),{number:ve,trim:Me}=d[ne]||h.EMPTY_OBJ;Me&&(k=A.map(ft=>h.isString(ft)?ft.trim():ft)),ve&&(k=A.map(h.looseToNumber))}var ue,Re=d[ue=h.toHandlerKey(l)]||d[ue=h.toHandlerKey(h.camelize(l))];!Re&&L&&(Re=d[ue=h.toHandlerKey(h.hyphenate(l))]),Re&&Tt(Re,i,6,k);var Ye=d[ue+"Once"];if(Ye){if(!i.emitted)i.emitted={};else if(i.emitted[ue])return;i.emitted[ue]=!0,Tt(Ye,i,6,k)}}}function Wn(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=l.emitsCache,A=_.get(i);if(A!==void 0)return A;var C=i.emits,k={},L=!1;if(!h.isFunction(i)){var H=ne=>{var ve=Wn(ne,l,!0);ve&&(L=!0,h.extend(k,ve))};!d&&l.mixins.length&&l.mixins.forEach(H),i.extends&&H(i.extends),i.mixins&&i.mixins.forEach(H)}return!C&&!L?(h.isObject(i)&&_.set(i,null),null):(h.isArray(C)?C.forEach(ne=>k[ne]=null):h.extend(k,C),h.isObject(i)&&_.set(i,k),k)}function Cn(i,l){return!i||!h.isOn(l)?!1:(l=l.slice(2).replace(/Once$/,""),h.hasOwn(i,l[0].toLowerCase()+l.slice(1))||h.hasOwn(i,h.hyphenate(l))||h.hasOwn(i,l))}var hn=null,wr=null;function Kr(i){var l=hn;return hn=i,wr=i&&i.type.__scopeId||null,l}function Co(i){wr=i}function ua(){wr=null}var Ui=i=>Jo;function Jo(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:hn;if(!l||i._n)return i;var d=function(){d._d&&Et(-1);var _=Kr(l),A;try{A=i(...arguments)}finally{Kr(_),d._d&&Et(1)}return A};return d._n=!0,d._c=!0,d._d=!0,d}function Ko(){}function $i(i){var{type:l,vnode:d,proxy:_,withProxy:A,props:C,propsOptions:[k],slots:L,attrs:H,emit:ne,render:ve,renderCache:Me,data:ue,setupState:Re,ctx:Ye,inheritAttrs:ft}=i,Qe,xe,me=Kr(i);try{if(d.shapeFlag&4){var ye=A||_;Qe=$n(ve.call(ye,ye,Me,C,Re,ue,Ye)),xe=H}else{var Fe=l;Qe=$n(Fe.length>1?Fe(C,{attrs:H,slots:L,emit:ne}):Fe(C,null)),xe=l.props?H:Ao(H)}}catch(Je){fe.length=0,I(Je,i,1),Qe=qt(pe)}var Ae=Qe;if(xe&&ft!==!1){var bt=Object.keys(xe),{shapeFlag:At}=Ae;bt.length&&At&(1|6)&&(k&&bt.some(h.isModelListener)&&(xe=Oo(xe,k)),Ae=ei(Ae,xe))}return d.dirs&&(Ae=ei(Ae),Ae.dirs=Ae.dirs?Ae.dirs.concat(d.dirs):d.dirs),d.transition&&(Ae.transition=d.transition),Qe=Ae,Kr(me),Qe}function ri(i){for(var l,d=0;d<i.length;d++){var _=i[d];if(Gt(_)){if(_.type!==pe||_.children==="v-if"){if(l)return;l=_}}else return}return l}var Ao=i=>{var l;for(var d in i)(d==="class"||d==="style"||h.isOn(d))&&((l||(l={}))[d]=i[d]);return l},Oo=(i,l)=>{var d={};for(var _ in i)(!h.isModelListener(_)||!(_.slice(9)in l))&&(d[_]=i[_]);return d};function To(i,l,d){var{props:_,children:A,component:C}=i,{props:k,children:L,patchFlag:H}=l,ne=C.emitsOptions;if(l.dirs||l.transition)return!0;if(d&&H>=0){if(H&1024)return!0;if(H&16)return _?Xi(_,k,ne):!!k;if(H&8)for(var ve=l.dynamicProps,Me=0;Me<ve.length;Me++){var ue=ve[Me];if(k[ue]!==_[ue]&&!Cn(ne,ue))return!0}}else return(A||L)&&(!L||!L.$stable)?!0:_===k?!1:_?k?Xi(_,k,ne):!0:!!k;return!1}function Xi(i,l,d){var _=Object.keys(l);if(_.length!==Object.keys(i).length)return!0;for(var A=0;A<_.length;A++){var C=_[A];if(l[C]!==i[C]&&!Cn(d,C))return!0}return!1}function mi(i,l){for(var{vnode:d,parent:_}=i;_&&_.subTree===d;)(d=_.vnode).el=l,_=_.parent}var Po=i=>i.__isSuspense,uo={name:"Suspense",__isSuspense:!0,process(i,l,d,_,A,C,k,L,H,ne){i==null?Qi(l,d,_,A,C,k,L,H,ne):Kn(i,l,d,_,A,k,L,H,ne)},hydrate:Io,create:eo,normalize:fo},kn=uo;function Cr(i,l){var d=i.props&&i.props[l];h.isFunction(d)&&d()}function Qi(i,l,d,_,A,C,k,L,H){var{p:ne,o:{createElement:ve}}=H,Me=ve("div",l),ue=i.suspense=eo(i,A,_,l,Me,d,C,k,L,H);ne(null,ue.pendingBranch=i.ssContent,Me,null,_,ue,C,k),ue.deps>0?(Cr(i,"onPending"),Cr(i,"onFallback"),ne(null,i.ssFallback,l,d,_,null,C,k),kr(ue,i.ssFallback)):ue.resolve()}function Kn(i,l,d,_,A,C,k,L,H){var{p:ne,um:ve,o:{createElement:Me}}=H,ue=l.suspense=i.suspense;ue.vnode=l,l.el=i.el;var Re=l.ssContent,Ye=l.ssFallback,{activeBranch:ft,pendingBranch:Qe,isInFallback:xe,isHydrating:me}=ue;if(Qe)ue.pendingBranch=Re,ht(Re,Qe)?(ne(Qe,Re,ue.hiddenContainer,null,A,ue,C,k,L),ue.deps<=0?ue.resolve():xe&&(ne(ft,Ye,d,_,A,null,C,k,L),kr(ue,Ye))):(ue.pendingId++,me?(ue.isHydrating=!1,ue.activeBranch=Qe):ve(Qe,A,ue),ue.deps=0,ue.effects.length=0,ue.hiddenContainer=Me("div",d),xe?(ne(null,Re,ue.hiddenContainer,null,A,ue,C,k,L),ue.deps<=0?ue.resolve():(ne(ft,Ye,d,_,A,null,C,k,L),kr(ue,Ye))):ft&&ht(Re,ft)?(ne(ft,Re,d,_,A,ue,C,k,L),ue.resolve(!0)):(ne(null,Re,ue.hiddenContainer,null,A,ue,C,k,L),ue.deps<=0&&ue.resolve()));else if(ft&&ht(Re,ft))ne(ft,Re,d,_,A,ue,C,k,L),kr(ue,Re);else if(Cr(l,"onPending"),ue.pendingBranch=Re,ue.pendingId++,ne(null,Re,ue.hiddenContainer,null,A,ue,C,k,L),ue.deps<=0)ue.resolve();else{var{timeout:ye,pendingId:Fe}=ue;ye>0?setTimeout(()=>{ue.pendingId===Fe&&ue.fallback(Ye)},ye):ye===0&&ue.fallback(Ye)}}function eo(i,l,d,_,A,C,k,L,H,ne){var ve=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:Me,m:ue,um:Re,n:Ye,o:{parentNode:ft,remove:Qe}}=ne,xe=i.props?h.toNumber(i.props.timeout):void 0,me={vnode:i,parent:l,parentComponent:d,isSVG:k,container:_,hiddenContainer:A,anchor:C,deps:0,pendingId:0,timeout:typeof xe=="number"?xe:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:ve,isUnmounted:!1,effects:[],resolve(){var ye=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:Fe,activeBranch:Ae,pendingBranch:bt,pendingId:At,effects:Je,parentComponent:Rt,container:M}=me;if(me.isHydrating)me.isHydrating=!1;else if(!ye){var j=Ae&&bt.transition&&bt.transition.mode==="out-in";j&&(Ae.transition.afterLeave=()=>{At===me.pendingId&&ue(bt,M,se,0)});var{anchor:se}=me;Ae&&(se=Ye(Ae),Re(Ae,Rt,me,!0)),j||ue(bt,M,se,0)}kr(me,bt),me.pendingBranch=null,me.isInFallback=!1;for(var re=me.parent,oe=!1;re;){if(re.pendingBranch){re.effects.push(...Je),oe=!0;break}re=re.parent}oe||vi(Je),me.effects=[],Cr(Fe,"onResolve")},fallback(ye){if(!!me.pendingBranch){var{vnode:Fe,activeBranch:Ae,parentComponent:bt,container:At,isSVG:Je}=me;Cr(Fe,"onFallback");var Rt=Ye(Ae),M=()=>{!me.isInFallback||(Me(null,ye,At,Rt,bt,null,Je,L,H),kr(me,ye))},j=ye.transition&&ye.transition.mode==="out-in";j&&(Ae.transition.afterLeave=M),me.isInFallback=!0,Re(Ae,bt,null,!0),j||M()}},move(ye,Fe,Ae){me.activeBranch&&ue(me.activeBranch,ye,Fe,Ae),me.container=ye},next(){return me.activeBranch&&Ye(me.activeBranch)},registerDep(ye,Fe){var Ae=!!me.pendingBranch;Ae&&me.deps++;var bt=ye.vnode.el;ye.asyncDep.catch(At=>{I(At,ye,0)}).then(At=>{if(!(ye.isUnmounted||me.isUnmounted||me.pendingId!==ye.suspenseId)){ye.asyncResolved=!0;var{vnode:Je}=ye;ta(ye,At,!1),bt&&(Je.el=bt);var Rt=!bt&&ye.subTree.el;Fe(ye,Je,ft(bt||ye.subTree.el),bt?null:Ye(ye.subTree),me,k,H),Rt&&Qe(Rt),mi(ye,Je.el),Ae&&--me.deps===0&&me.resolve()}})},unmount(ye,Fe){me.isUnmounted=!0,me.activeBranch&&Re(me.activeBranch,d,ye,Fe),me.pendingBranch&&Re(me.pendingBranch,d,ye,Fe)}};return me}function Io(i,l,d,_,A,C,k,L,H){var ne=l.suspense=eo(l,_,d,i.parentNode,document.createElement("div"),null,A,C,k,L,!0),ve=H(i,ne.pendingBranch=l.ssContent,d,ne,C,k);return ne.deps===0&&ne.resolve(),ve}function fo(i){var{shapeFlag:l,children:d}=i,_=l&32;i.ssContent=ii(_?d.default:d),i.ssFallback=_?ii(d.fallback):qt(pe)}function ii(i){var l;if(h.isFunction(i)){var d=$t&&i._c;d&&(i._d=!1,ut()),i=i(),d&&(i._d=!0,l=we,pt())}if(h.isArray(i)){var _=ri(i);i=_}return i=$n(i),l&&!i.dynamicChildren&&(i.dynamicChildren=l.filter(A=>A!==i)),i}function ar(i,l){l&&l.pendingBranch?h.isArray(i)?l.effects.push(...i):l.effects.push(i):vi(i)}function kr(i,l){i.activeBranch=l;var{vnode:d,parentComponent:_}=i,A=d.el=l.el;_&&_.subTree===d&&(_.vnode.el=A,mi(_,A))}function Nn(i,l){if(mn){var d=mn.provides,_=mn.parent&&mn.parent.provides;_===d&&(d=mn.provides=Object.create(_)),d[i]=l,mn.type.mpType==="app"&&mn.appContext.app.provide(i,l)}}function Zn(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=mn||hn;if(_){var A=_.parent==null?_.vnode.appContext&&_.vnode.appContext.provides:_.parent.provides;if(A&&i in A)return A[i];if(arguments.length>1)return d&&h.isFunction(l)?l.call(_.proxy):l}}function Ni(i,l){return ki(i,null,l)}function Hi(i,l){return ki(i,null,{flush:"post"})}function oi(i,l){return ki(i,null,{flush:"sync"})}var Fr={};function vr(i,l,d){return ki(i,l,d)}function ki(i,l){var{immediate:d,deep:_,flush:A,onTrack:C,onTrigger:k}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:h.EMPTY_OBJ,L=E.getCurrentScope()===(mn==null?void 0:mn.scope)?mn:null,H,ne=!1,ve=!1;if(E.isRef(i)?(H=()=>i.value,ne=E.isShallow(i)):E.isReactive(i)?(H=()=>i,_=!0):h.isArray(i)?(ve=!0,ne=i.some(Ae=>E.isReactive(Ae)||E.isShallow(Ae)),H=()=>i.map(Ae=>{if(E.isRef(Ae))return Ae.value;if(E.isReactive(Ae))return Zr(Ae);if(h.isFunction(Ae))return zt(Ae,L,2)})):h.isFunction(i)?l?H=()=>zt(i,L,2):H=()=>{if(!(L&&L.isUnmounted))return ue&&ue(),Tt(i,L,3,[Re])}:H=h.NOOP,l&&_){var Me=H;H=()=>Zr(Me())}var ue,Re=Ae=>{ue=ye.onStop=()=>{zt(Ae,L,4)}},Ye;if(S.isInSSRComponentSetup)if(Re=h.NOOP,l?d&&Tt(l,L,3,[H(),ve?[]:void 0,Re]):H(),A==="sync"){var ft=ka();Ye=ft.__watcherHandles||(ft.__watcherHandles=[])}else return h.NOOP;var Qe=ve?new Array(i.length).fill(Fr):Fr,xe=()=>{if(!!ye.active)if(l){var Ae=ye.run();(_||ne||(ve?Ae.some((bt,At)=>h.hasChanged(bt,Qe[At])):h.hasChanged(Ae,Qe)))&&(ue&&ue(),Tt(l,L,3,[Ae,Qe===Fr?void 0:ve&&Qe[0]===Fr?[]:Qe,Re]),Qe=Ae)}else ye.run()};xe.allowRecurse=!!l;var me;A==="sync"?me=xe:A==="post"?me=()=>lr(xe,L&&L.suspense):(xe.pre=!0,L&&(xe.id=L.uid),me=()=>pr(xe));var ye=new E.ReactiveEffect(H,me);l?d?xe():Qe=ye.run():A==="post"?lr(ye.run.bind(ye),L&&L.suspense):ye.run();var Fe=()=>{ye.stop(),L&&L.scope&&h.remove(L.scope.effects,ye)};return Ye&&Ye.push(Fe),Fe}function No(i,l,d){var _=this.proxy,A=h.isString(i)?i.includes(".")?Vr(_,i):()=>_[i]:i.bind(_,_),C;h.isFunction(l)?C=l:(C=l.handler,d=l);var k=mn;qn(this);var L=ki(A,C.bind(_),d);return k?qn(k):Ai(),L}function Vr(i,l){var d=l.split(".");return()=>{for(var _=i,A=0;A<d.length&&_;A++)_=_[d[A]];return _}}function Zr(i,l){if(!h.isObject(i)||i.__v_skip||(l=l||new Set,l.has(i)))return i;if(l.add(i),E.isRef(i))Zr(i.value,l);else if(h.isArray(i))for(var d=0;d<i.length;d++)Zr(i[d],l);else if(h.isSet(i)||h.isMap(i))i.forEach(A=>{Zr(A,l)});else if(h.isPlainObject(i))for(var _ in i)Zr(i[_],l);return i}function Ar(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return tr(()=>{i.isMounted=!0}),cr(()=>{i.isUnmounting=!0}),i}var gn=[Function,Array],Xr={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:gn,onEnter:gn,onAfterEnter:gn,onEnterCancelled:gn,onBeforeLeave:gn,onLeave:gn,onAfterLeave:gn,onLeaveCancelled:gn,onBeforeAppear:gn,onAppear:gn,onAfterAppear:gn,onAppearCancelled:gn},Ur={name:"BaseTransition",props:Xr,setup(i,l){var{slots:d}=l,_=jn(),A=Ar(),C;return()=>{var k=d.default&&Ri(d.default(),!0);if(!(!k||!k.length)){var L=k[0];if(k.length>1){for(var H of k)if(H.type!==pe){L=H;break}}var ne=E.toRaw(i),{mode:ve}=ne;if(A.isLeaving)return bi(L);var Me=Ei(L);if(!Me)return bi(L);var ue=_i(Me,ne,A,_);Or(Me,ue);var Re=_.subTree,Ye=Re&&Ei(Re),ft=!1,{getTransitionKey:Qe}=Me.type;if(Qe){var xe=Qe();C===void 0?C=xe:xe!==C&&(C=xe,ft=!0)}if(Ye&&Ye.type!==pe&&(!ht(Me,Ye)||ft)){var me=_i(Ye,ne,A,_);if(Or(Ye,me),ve==="out-in")return A.isLeaving=!0,me.afterLeave=()=>{A.isLeaving=!1,_.update.active!==!1&&_.update()},bi(L);ve==="in-out"&&Me.type!==pe&&(me.delayLeave=(ye,Fe,Ae)=>{var bt=Oe(A,Ye);bt[String(Ye.key)]=Ye,ye._leaveCb=()=>{Fe(),ye._leaveCb=void 0,delete ue.delayedLeave},ue.delayedLeave=Ae})}return L}}}},Lt=Ur;function Oe(i,l){var{leavingVNodes:d}=i,_=d.get(l.type);return _||(_=Object.create(null),d.set(l.type,_)),_}function _i(i,l,d,_){var{appear:A,mode:C,persisted:k=!1,onBeforeEnter:L,onEnter:H,onAfterEnter:ne,onEnterCancelled:ve,onBeforeLeave:Me,onLeave:ue,onAfterLeave:Re,onLeaveCancelled:Ye,onBeforeAppear:ft,onAppear:Qe,onAfterAppear:xe,onAppearCancelled:me}=l,ye=String(i.key),Fe=Oe(d,i),Ae=(Je,Rt)=>{Je&&Tt(Je,_,9,Rt)},bt=(Je,Rt)=>{var M=Rt[1];Ae(Je,Rt),h.isArray(Je)?Je.every(j=>j.length<=1)&&M():Je.length<=1&&M()},At={mode:C,persisted:k,beforeEnter(Je){var Rt=L;if(!d.isMounted)if(A)Rt=ft||L;else return;Je._leaveCb&&Je._leaveCb(!0);var M=Fe[ye];M&&ht(i,M)&&M.el._leaveCb&&M.el._leaveCb(),Ae(Rt,[Je])},enter(Je){var Rt=H,M=ne,j=ve;if(!d.isMounted)if(A)Rt=Qe||H,M=xe||ne,j=me||ve;else return;var se=!1,re=Je._enterCb=oe=>{se||(se=!0,oe?Ae(j,[Je]):Ae(M,[Je]),At.delayedLeave&&At.delayedLeave(),Je._enterCb=void 0)};Rt?bt(Rt,[Je,re]):re()},leave(Je,Rt){var M=String(i.key);if(Je._enterCb&&Je._enterCb(!0),d.isUnmounting)return Rt();Ae(Me,[Je]);var j=!1,se=Je._leaveCb=re=>{j||(j=!0,Rt(),re?Ae(Ye,[Je]):Ae(Re,[Je]),Je._leaveCb=void 0,Fe[M]===i&&delete Fe[M])};Fe[M]=i,ue?bt(ue,[Je,se]):se()},clone(Je){return _i(Je,l,d,_)}};return At}function bi(i){if(yi(i))return i=ei(i),i.children=null,i}function Ei(i){return yi(i)?i.children?i.children[0]:void 0:i}function Or(i,l){i.shapeFlag&6&&i.component?Or(i.component.subTree,l):i.shapeFlag&128?(i.ssContent.transition=l.clone(i.ssContent),i.ssFallback.transition=l.clone(i.ssFallback)):i.transition=l}function Ri(i){for(var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,d=arguments.length>2?arguments[2]:void 0,_=[],A=0,C=0;C<i.length;C++){var k=i[C],L=d==null?k.key:String(d)+String(k.key!=null?k.key:C);k.type===te?(k.patchFlag&128&&A++,_=_.concat(Ri(k.children,l,L))):(l||k.type!==pe)&&_.push(L!=null?ei(k,{key:L}):k)}if(A>1)for(var H=0;H<_.length;H++)_[H].patchFlag=-2;return _}function Tr(i){return h.isFunction(i)?{setup:i,name:i.name}:i}var Rr=i=>!!i.type.__asyncLoader;function ai(i){h.isFunction(i)&&(i={loader:i});var{loader:l,loadingComponent:d,errorComponent:_,delay:A=200,timeout:C,suspensible:k=!0,onError:L}=i,H=null,ne,ve=0,Me=()=>(ve++,H=null,ue()),ue=()=>{var Re;return H||(Re=H=l().catch(Ye=>{if(Ye=Ye instanceof Error?Ye:new Error(String(Ye)),L)return new Promise((ft,Qe)=>{var xe=()=>ft(Me()),me=()=>Qe(Ye);L(Ye,xe,me,ve+1)});throw Ye}).then(Ye=>Re!==H&&H?H:(Ye&&(Ye.__esModule||Ye[Symbol.toStringTag]==="Module")&&(Ye=Ye.default),ne=Ye,Ye)))};return Tr({name:"AsyncComponentWrapper",__asyncLoader:ue,get __asyncResolved(){return ne},setup(){var Re=mn;if(ne)return()=>Pr(ne,Re);var Ye=me=>{H=null,I(me,Re,13)};if(k&&Re.suspense||S.isInSSRComponentSetup)return ue().then(me=>()=>Pr(me,Re)).catch(me=>(Ye(me),()=>_?qt(_,{error:me}):null));var ft=E.ref(!1),Qe=E.ref(),xe=E.ref(!!A);return A&&setTimeout(()=>{xe.value=!1},A),C!=null&&setTimeout(()=>{if(!ft.value&&!Qe.value){var me=new Error("Async component timed out after ".concat(C,"ms."));Ye(me),Qe.value=me}},C),ue().then(()=>{ft.value=!0,Re.parent&&yi(Re.parent.vnode)&&pr(Re.parent.update)}).catch(me=>{Ye(me),Qe.value=me}),()=>{if(ft.value&&ne)return Pr(ne,Re);if(Qe.value&&_)return qt(_,{error:Qe.value});if(d&&!xe.value)return qt(d)}}})}function Pr(i,l){var{ref:d,props:_,children:A,ce:C}=l.vnode,k=qt(i,_,A);return k.ref=d,k.ce=C,delete l.vnode.ce,k}var yi=i=>i.type.__isKeepAlive,un={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,l){var{slots:d}=l,_=jn(),A=_.ctx;if(!A.renderer)return()=>{var ye=d.default&&d.default();return ye&&ye.length===1?ye[0]:ye};var C=new Map,k=new Set,L=null,H=_.suspense,{renderer:{p:ne,m:ve,um:Me,o:{createElement:ue}}}=A,Re=ue("div",null);A.activate=(ye,Fe,Ae,bt,At)=>{var Je=ye.component;ve(ye,Fe,Ae,0,H),ne(Je.vnode,ye,Fe,Ae,Je,H,bt,ye.slotScopeIds,At),lr(()=>{Je.isDeactivated=!1,Je.a&&h.invokeArrayFns(Je.a);var Rt=ye.props&&ye.props.onVnodeMounted;Rt&&zr(Rt,Je.parent,ye)},H)},A.deactivate=ye=>{var Fe=ye.component;ve(ye,Re,null,1,H),lr(()=>{Fe.da&&h.invokeArrayFns(Fe.da);var Ae=ye.props&&ye.props.onVnodeUnmounted;Ae&&zr(Ae,Fe.parent,ye),Fe.isDeactivated=!0},H)};function Ye(ye){Si(ye),Me(ye,_,H,!0)}function ft(ye){C.forEach((Fe,Ae)=>{var bt=_o(Fe.type);bt&&(!ye||!ye(bt))&&Qe(Ae)})}function Qe(ye){var Fe=C.get(ye);!L||!ht(Fe,L)?Ye(Fe):L&&Si(L),C.delete(ye),k.delete(ye)}vr(()=>[i.include,i.exclude],ye=>{var[Fe,Ae]=ye;Fe&&ft(bt=>$r(Fe,bt)),Ae&&ft(bt=>!$r(Ae,bt))},{flush:"post",deep:!0});var xe=null,me=()=>{xe!=null&&C.set(xe,xi(_.subTree))};return tr(me),nr(me),cr(()=>{C.forEach(ye=>{var{subTree:Fe,suspense:Ae}=_,bt=xi(Fe);if(ye.type===bt.type&&ye.key===bt.key){Si(bt);var At=bt.component.da;At&&lr(At,Ae);return}Ye(ye)})}),()=>{if(xe=null,!d.default)return null;var ye=d.default(),Fe=ye[0];if(ye.length>1)return L=null,ye;if(!Gt(Fe)||!(Fe.shapeFlag&4)&&!(Fe.shapeFlag&128))return L=null,Fe;var Ae=xi(Fe),bt=Ae.type,At=_o(Rr(Ae)?Ae.type.__asyncResolved||{}:bt),{include:Je,exclude:Rt,max:M}=i;if(Je&&(!At||!$r(Je,At))||Rt&&At&&$r(Rt,At))return L=Ae,Fe;var j=Ae.key==null?bt:Ae.key,se=C.get(j);return Ae.el&&(Ae=ei(Ae),Fe.shapeFlag&128&&(Fe.ssContent=Ae)),xe=j,se?(Ae.el=se.el,Ae.component=se.component,Ae.transition&&Or(Ae,Ae.transition),Ae.shapeFlag|=512,k.delete(j),k.add(j)):(k.add(j),M&&k.size>parseInt(M,10)&&Qe(k.values().next().value)),Ae.shapeFlag|=256,L=Ae,Po(Fe.type)?Fe:Ae}}},ji=un;function $r(i,l){return h.isArray(i)?i.some(d=>$r(d,l)):h.isString(i)?i.split(",").includes(l):h.isRegExp(i)?i.test(l):!1}function to(i,l){Hr(i,"a",l)}function En(i,l){Hr(i,"da",l)}function Hr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:mn,_=i.__wdc||(i.__wdc=()=>{for(var C=d;C;){if(C.isDeactivated)return;C=C.parent}return i()});if(mr(l,_,d),d)for(var A=d.parent;A&&A.parent;)yi(A.parent.vnode)&&sr(_,l,d,A),A=A.parent}function sr(i,l,d,_){var A=mr(l,i,_,!0);ho(()=>{h.remove(_[l],A)},d)}function Si(i){i.shapeFlag&=~256,i.shapeFlag&=~512}function xi(i){return i.shapeFlag&128?i.ssContent:i}function mr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:mn,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(d){if(x.isRootHook(i)&&d!==d.root&&(d=d.root,x.isRootImmediateHook(i))){var A=d.proxy;Tt(l.bind(A),d,i,x.ON_LOAD===i?[A.$page.options]:[])}var{__page_container__:C}=d.root.vnode;C&&C.onInjectHook(i);var k=d[i]||(d[i]=[]),L=l.__weh||(l.__weh=function(){if(!d.isUnmounted){E.pauseTracking(),qn(d);for(var H=arguments.length,ne=new Array(H),ve=0;ve<H;ve++)ne[ve]=arguments[ve];var Me=Tt(l,d,i,ne);return Ai(),E.resetTracking(),Me}});return _?k.unshift(L):k.push(L),L}}var Qr=i=>function(l){var d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:mn;return(!S.isInSSRComponentSetup||i==="sp")&&mr(i,function(){return l(...arguments)},d)},er=Qr("bm"),tr=Qr("m"),Gn=Qr("bu"),nr=Qr("u"),cr=Qr("bum"),ho=Qr("um"),go=Qr("sp"),ko=Qr("rtg"),no=Qr("rtc");function Ro(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:mn;mr("ec",i,l)}function jr(i,l){var d=hn;if(d===null)return i;for(var _=Li(d)||d.proxy,A=i.dirs||(i.dirs=[]),C=0;C<l.length;C++){var[k,L,H,ne=h.EMPTY_OBJ]=l[C];k&&(h.isFunction(k)&&(k={mounted:k,updated:k}),k.deep&&Zr(L),A.push({dir:k,instance:_,value:L,oldValue:void 0,arg:H,modifiers:ne}))}return i}function xr(i,l,d,_){for(var A=i.dirs,C=l&&l.dirs,k=0;k<A.length;k++){var L=A[k];C&&(L.oldValue=C[k].value);var H=L.dir[_];H&&(E.pauseTracking(),Tt(H,d,8,[i.el,L,i,l]),E.resetTracking())}}var po="components",xo="directives";function ro(i,l){return zi(po,i,!0,l)||i}var Bi=Symbol();function vo(i){return h.isString(i)?zi(po,i,!1)||i:i||Bi}function Mi(i){return zi(xo,i)}function zi(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,_=hn||mn;if(_){var A=_.type;if(i===po){var C=_o(A,!1);if(C&&(C===l||C===h.camelize(l)||C===h.capitalize(h.camelize(l))))return A}var k=Zo(_[i]||A[i],l)||Zo(_.appContext[i],l);return!k&&d?A:k}}function Zo(i,l){return i&&(i[l]||i[h.camelize(l)]||i[h.capitalize(h.camelize(l))])}function B(i,l,d,_){var A,C=d&&d[_];if(h.isArray(i)||h.isString(i)){A=new Array(i.length);for(var k=0,L=i.length;k<L;k++)A[k]=l(i[k],k,void 0,C&&C[k])}else if(typeof i=="number"){A=new Array(i);for(var H=0;H<i;H++)A[H]=l(H+1,H,void 0,C&&C[H])}else if(h.isObject(i))if(i[Symbol.iterator])A=Array.from(i,(Re,Ye)=>l(Re,Ye,void 0,C&&C[Ye]));else{var ne=Object.keys(i);A=new Array(ne.length);for(var ve=0,Me=ne.length;ve<Me;ve++){var ue=ne[ve];A[ve]=l(i[ue],ue,ve,C&&C[ve])}}else A=[];return d&&(d[_]=A),A}function Q(i,l){for(var d=function(A){var C=l[A];if(h.isArray(C))for(var k=0;k<C.length;k++)i[C[k].name]=C[k].fn;else C&&(i[C.name]=C.key?function(){var L=C.fn(...arguments);return L&&(L.key=C.key),L}:C.fn)},_=0;_<l.length;_++)d(_);return i}function he(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},_=arguments.length>3?arguments[3]:void 0,A=arguments.length>4?arguments[4]:void 0;if(hn.isCE||hn.parent&&Rr(hn.parent)&&hn.parent.isCE)return l!=="default"&&(d.name=l),qt("slot",d,_&&_());var C=i[l];C&&C._c&&(C._d=!1),ut();var k=C&&ae(C(d)),L=fn(te,{key:d.key||k&&k.key||"_".concat(l)},k||(_?_():[]),k&&i._===1?64:-2);return!A&&L.scopeId&&(L.slotScopeIds=[L.scopeId+"-s"]),C&&C._c&&(C._d=!0),L}function ae(i){return i.some(l=>Gt(l)?!(l.type===pe||l.type===te&&!ae(l.children)):!0)?i:null}function de(i,l){var d={};for(var _ in i)d[l&&/[A-Z]/.test(_)?"on:".concat(_):h.toHandlerKey(_)]=i[_];return d}var mt=i=>i?us(i)?Li(i)||i.proxy:mt(i.parent):null,kt=h.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>mt(i.parent),$root:i=>mt(i.root),$emit:i=>i.emit,$options:i=>_r(i),$forceUpdate:i=>i.f||(i.f=()=>pr(i.update)),$nextTick:i=>i.n||(i.n=gr.bind(i.proxy)),$watch:i=>No.bind(i)}),X=(i,l)=>i!==h.EMPTY_OBJ&&!i.__isScriptSetup&&h.hasOwn(i,l),K={get(i,l){var{_:d}=i,{ctx:_,setupState:A,data:C,props:k,accessCache:L,type:H,appContext:ne}=d,ve;if(l[0]!=="$"){var Me=L[l];if(Me!==void 0)switch(Me){case 1:return A[l];case 2:return C[l];case 4:return _[l];case 3:return k[l]}else{if(X(A,l))return L[l]=1,A[l];if(C!==h.EMPTY_OBJ&&h.hasOwn(C,l))return L[l]=2,C[l];if((ve=d.propsOptions[0])&&h.hasOwn(ve,l))return L[l]=3,k[l];if(_!==h.EMPTY_OBJ&&h.hasOwn(_,l))return L[l]=4,_[l];Ne&&(L[l]=0)}}var ue=kt[l],Re,Ye;if(ue)return l==="$attrs"&&E.track(d,"get",l),ue(d);if((Re=H.__cssModules)&&(Re=Re[l]))return Re;if(_!==h.EMPTY_OBJ&&h.hasOwn(_,l))return L[l]=4,_[l];if(Ye=ne.config.globalProperties,h.hasOwn(Ye,l))return Ye[l]},set(i,l,d){var{_}=i,{data:A,setupState:C,ctx:k}=_;return X(C,l)?(C[l]=d,!0):A!==h.EMPTY_OBJ&&h.hasOwn(A,l)?(A[l]=d,!0):h.hasOwn(_.props,l)||l[0]==="$"&&l.slice(1)in _?!1:(k[l]=d,!0)},has(i,l){var{_:{data:d,setupState:_,accessCache:A,ctx:C,appContext:k,propsOptions:L}}=i,H;return!!A[l]||d!==h.EMPTY_OBJ&&h.hasOwn(d,l)||X(_,l)||(H=L[0])&&h.hasOwn(H,l)||h.hasOwn(C,l)||h.hasOwn(kt,l)||h.hasOwn(k.config.globalProperties,l)},defineProperty(i,l,d){return d.get!=null?i._.accessCache[l]=0:h.hasOwn(d,"value")&&this.set(i,l,d.value,null),Reflect.defineProperty(i,l,d)}},ie=h.extend({},K,{get(i,l){if(l!==Symbol.unscopables)return K.get(i,l,i)},has(i,l){var d=l[0]!=="_"&&!h.isGloballyWhitelisted(l);return d}}),Ne=!0;function lt(i){var l=_r(i),d=i.proxy,_=i.ctx;Ne=!1,l.beforeCreate&&xn(l.beforeCreate,i,"bc");var{data:A,computed:C,methods:k,watch:L,provide:H,inject:ne,created:ve,beforeMount:Me,mounted:ue,beforeUpdate:Re,updated:Ye,activated:ft,deactivated:Qe,beforeDestroy:xe,beforeUnmount:me,destroyed:ye,unmounted:Fe,render:Ae,renderTracked:bt,renderTriggered:At,errorCaptured:Je,serverPrefetch:Rt,expose:M,inheritAttrs:j,components:se,directives:re,filters:oe}=l,Ue=null;if(ne&&Zt(ne,_,Ue,i.appContext.config.unwrapInjectedRef),k)for(var rt in k){var qe=k[rt];h.isFunction(qe)&&(_[rt]=qe.bind(d))}if(A){var Ke=A.call(d,d);h.isObject(Ke)&&(i.data=E.reactive(Ke))}if(Ne=!0,C){var $e=function(pn){var _n=C[pn],fr=h.isFunction(_n)?_n.bind(d,d):h.isFunction(_n.get)?_n.get.bind(d,d):h.NOOP,ni=!h.isFunction(_n)&&h.isFunction(_n.set)?_n.set.bind(d):h.NOOP,Jt=ds({get:fr,set:ni});Object.defineProperty(_,pn,{enumerable:!0,configurable:!0,get:()=>Jt.value,set:nn=>Jt.value=nn})};for(var Ut in C)$e(Ut)}if(L)for(var vt in L)Ln(L[vt],_,d,vt);if(H){var xt=h.isFunction(H)?H.call(d):H;Reflect.ownKeys(xt).forEach(pn=>{Nn(pn,xt[pn])})}ve&&xn(ve,i,"c");function Bt(pn,_n){h.isArray(_n)?_n.forEach(fr=>pn(fr.bind(d))):_n&&pn(_n.bind(d))}if(Bt(er,Me),Bt(tr,ue),Bt(Gn,Re),Bt(nr,Ye),Bt(to,ft),Bt(En,Qe),Bt(Ro,Je),Bt(no,bt),Bt(ko,At),Bt(cr,me),Bt(ho,Fe),Bt(go,Rt),h.isArray(M))if(M.length){var Mn=i.exposed||(i.exposed={});M.forEach(pn=>{Object.defineProperty(Mn,pn,{get:()=>d[pn],set:_n=>d[pn]=_n})})}else i.exposed||(i.exposed={});Ae&&i.render===h.NOOP&&(i.render=Ae),j!=null&&(i.inheritAttrs=j),se&&(i.components=se),re&&(i.directives=re);var Rn=i.appContext.config.globalProperties.$applyOptions;Rn&&Rn(l,i,d)}function Zt(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;h.isArray(i)&&(i=Dn(i));var _=function(C){var k=i[C],L=void 0;h.isObject(k)?"default"in k?L=Zn(k.from||C,k.default,!0):L=Zn(k.from||C):L=Zn(k),E.isRef(L)&&d?Object.defineProperty(l,C,{enumerable:!0,configurable:!0,get:()=>L.value,set:H=>L.value=H}):l[C]=L};for(var A in i)_(A)}function xn(i,l,d){Tt(h.isArray(i)?i.map(_=>_.bind(l.proxy)):i.bind(l.proxy),l,d)}function Ln(i,l,d,_){var A=_.includes(".")?Vr(d,_):()=>d[_];if(h.isString(i)){var C=l[i];h.isFunction(C)&&vr(A,C)}else if(h.isFunction(i))vr(A,i.bind(d));else if(h.isObject(i))if(h.isArray(i))i.forEach(L=>Ln(L,l,d,_));else{var k=h.isFunction(i.handler)?i.handler.bind(d):l[i.handler];h.isFunction(k)&&vr(A,k,i)}}function _r(i){var l=i.type,{mixins:d,extends:_}=l,{mixins:A,optionsCache:C,config:{optionMergeStrategies:k}}=i.appContext,L=C.get(l),H;return L?H=L:!A.length&&!d&&!_?H=l:(H={},A.length&&A.forEach(ne=>Br(H,ne,k,!0)),Br(H,l,k)),h.isObject(l)&&C.set(l,H),H}function Br(i,l,d){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:A,extends:C}=l;C&&Br(i,C,d,!0),A&&A.forEach(H=>Br(i,H,d,!0));for(var k in l)if(!(_&&k==="expose")){var L=mo[k]||d&&d[k];i[k]=L?L(i[k],l[k]):l[k]}return i}var mo={data:Bo,props:Fn,emits:Fn,methods:Fn,computed:Fn,beforeCreate:Yn,created:Yn,beforeMount:Yn,mounted:Yn,beforeUpdate:Yn,updated:Yn,beforeDestroy:Yn,beforeUnmount:Yn,destroyed:Yn,unmounted:Yn,activated:Yn,deactivated:Yn,errorCaptured:Yn,serverPrefetch:Yn,components:Fn,directives:Fn,watch:wi,provide:Bo,inject:Mo};function Bo(i,l){return l?i?function(){return h.extend(h.isFunction(i)?i.call(this,this):i,h.isFunction(l)?l.call(this,this):l)}:l:i}function Mo(i,l){return Fn(Dn(i),Dn(l))}function Dn(i){if(h.isArray(i)){for(var l={},d=0;d<i.length;d++)l[i[d]]=i[d];return l}return i}function Yn(i,l){return i?[...new Set([].concat(i,l))]:l}function Fn(i,l){return i?h.extend(h.extend(Object.create(null),i),l):l}function wi(i,l){if(!i)return l;if(!l)return i;var d=h.extend(Object.create(null),i);for(var _ in l)d[_]=Yn(i[_],l[_]);return d}function is(i,l,d){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,A={},C={};h.def(C,Bn,1),i.propsDefaults=Object.create(null),br(i,l,A,C);for(var k in i.propsOptions[0])k in A||(A[k]=void 0);d?i.props=_?A:E.shallowReactive(A):i.type.props?i.props=A:i.props=C,i.attrs=C}function fa(i,l,d,_){var{props:A,attrs:C,vnode:{patchFlag:k}}=i,L=E.toRaw(A),[H]=i.propsOptions,ne=!1;if((_||k>0)&&!(k&16)){if(k&8)for(var ve=i.vnode.dynamicProps,Me=0;Me<ve.length;Me++){var ue=ve[Me];if(!Cn(i.emitsOptions,ue)){var Re=l[ue];if(H)if(h.hasOwn(C,ue))Re!==C[ue]&&(C[ue]=Re,ne=!0);else{var Ye=h.camelize(ue);A[Ye]=Pa(H,L,Ye,Re,i,!1)}else Re!==C[ue]&&(C[ue]=Re,ne=!0)}}}else{br(i,l,A,C)&&(ne=!0);var ft;for(var Qe in L)(!l||!h.hasOwn(l,Qe)&&((ft=h.hyphenate(Qe))===Qe||!h.hasOwn(l,ft)))&&(H?d&&(d[Qe]!==void 0||d[ft]!==void 0)&&(A[Qe]=Pa(H,L,Qe,void 0,i,!0)):delete A[Qe]);if(C!==L)for(var xe in C)(!l||!h.hasOwn(l,xe)&&!0)&&(delete C[xe],ne=!0)}ne&&E.trigger(i,"set","$attrs")}function br(i,l,d,_){var[A,C]=i.propsOptions,k=!1,L;if(l){for(var H in l)if(!h.isReservedProp(H)){var ne=l[H],ve=void 0;A&&h.hasOwn(A,ve=h.camelize(H))?!C||!C.includes(ve)?d[ve]=ne:(L||(L={}))[ve]=ne:Cn(i.emitsOptions,H)||(!(H in _)||ne!==_[H])&&(_[H]=ne,k=!0)}}if(C)for(var Me=E.toRaw(d),ue=L||h.EMPTY_OBJ,Re=0;Re<C.length;Re++){var Ye=C[Re];d[Ye]=Pa(A,Me,Ye,ue[Ye],i,!h.hasOwn(ue,Ye))}return k}function Pa(i,l,d,_,A,C){var k=i[d];if(k!=null){var L=h.hasOwn(k,"default");if(L&&_===void 0){var H=k.default;if(k.type!==Function&&h.isFunction(H)){var{propsDefaults:ne}=A;d in ne?_=ne[d]:(qn(A),_=ne[d]=H.call(null,l),Ai())}else _=H}k[0]&&(C&&!L?_=!1:k[1]&&(_===""||_===h.hyphenate(d))&&(_=!0))}return _}function Ua(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=l.propsCache,A=_.get(i);if(A)return A;var C=i.props,k={},L=[],H=!1;if(!h.isFunction(i)){var ne=ye=>{H=!0;var[Fe,Ae]=Ua(ye,l,!0);h.extend(k,Fe),Ae&&L.push(...Ae)};!d&&l.mixins.length&&l.mixins.forEach(ne),i.extends&&ne(i.extends),i.mixins&&i.mixins.forEach(ne)}if(!C&&!H)return h.isObject(i)&&_.set(i,h.EMPTY_ARR),h.EMPTY_ARR;if(h.isArray(C))for(var ve=0;ve<C.length;ve++){var Me=h.camelize(C[ve]);$a(Me)&&(k[Me]=h.EMPTY_OBJ)}else if(C)for(var ue in C){var Re=h.camelize(ue);if($a(Re)){var Ye=C[ue],ft=k[Re]=h.isArray(Ye)||h.isFunction(Ye)?{type:Ye}:Object.assign({},Ye);if(ft){var Qe=da(Boolean,ft.type),xe=da(String,ft.type);ft[0]=Qe>-1,ft[1]=xe<0||Qe<xe,(Qe>-1||h.hasOwn(ft,"default"))&&L.push(Re)}}}var me=[k,L];return h.isObject(i)&&_.set(i,me),me}function $a(i){return i[0]!=="$"}function Ha(i){var l=i&&i.toString().match(/^\s*(function|class) (\w+)/);return l?l[2]:i===null?"null":""}function ja(i,l){return Ha(i)===Ha(l)}function da(i,l){return h.isArray(l)?l.findIndex(d=>ja(d,i)):h.isFunction(l)&&ja(l,i)?0:-1}var Ia=i=>i[0]==="_"||i==="$stable",Vn=i=>h.isArray(i)?i.map($n):[$n(i)],Lo=(i,l,d)=>{if(l._n)return l;var _=Jo(function(){return Vn(l(...arguments))},d);return _._c=!1,_},Xo=(i,l,d)=>{var _=i._ctx;for(var A in i)if(!Ia(A)){var C=i[A];h.isFunction(C)?l[A]=Lo(A,C,_):C!=null&&function(){var k=Vn(C);l[A]=()=>k}()}},Wi=(i,l)=>{var d=Vn(l);i.slots.default=()=>d},os=(i,l)=>{if(i.vnode.shapeFlag&32){var d=l._;d?(i.slots=E.toRaw(l),h.def(l,"_",d)):Xo(l,i.slots={})}else i.slots={},l&&Wi(i,l);h.def(i.slots,Bn,1)},as=(i,l,d)=>{var{vnode:_,slots:A}=i,C=!0,k=h.EMPTY_OBJ;if(_.shapeFlag&32){var L=l._;L?d&&L===1?C=!1:(h.extend(A,l),!d&&L===1&&delete A._):(C=!l.$stable,Xo(l,A)),k=l}else l&&(Wi(i,l),k={default:1});if(C)for(var H in A)!Ia(H)&&!(H in k)&&delete A[H]};function Do(){return{app:null,config:{isNativeTag:h.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var ss=0;function io(i,l){return function(_){var A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;h.isFunction(_)||(_=Object.assign({},_)),A!=null&&!h.isObject(A)&&(A=null);var C=Do(),k=new Set,L=!1,H=C.app={_uid:ss++,_component:_,_props:A,_container:null,_context:C,_instance:null,version:dl,get config(){return C.config},set config(ne){},use(ne){for(var ve=arguments.length,Me=new Array(ve>1?ve-1:0),ue=1;ue<ve;ue++)Me[ue-1]=arguments[ue];return k.has(ne)||(ne&&h.isFunction(ne.install)?(k.add(ne),ne.install(H,...Me)):h.isFunction(ne)&&(k.add(ne),ne(H,...Me))),H},mixin(ne){return C.mixins.includes(ne)||C.mixins.push(ne),H},component(ne,ve){return ve?(C.components[ne]=ve,H):C.components[ne]},directive(ne,ve){return ve?(C.directives[ne]=ve,H):C.directives[ne]},mount(ne,ve,Me){if(!L){var ue=qt(_,A);return ue.appContext=C,ve&&l?l(ue,ne):i(ue,ne,Me),L=!0,H._container=ne,ne.__vue_app__=H,H._instance=ue.component,Li(ue.component)||ue.component.proxy}},unmount(){L&&(i(null,H._container),delete H._container.__vue_app__)},provide(ne,ve){return C.provides[ne]=ve,H}};return H}}function si(i,l,d,_){var A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(h.isArray(i)){i.forEach((ft,Qe)=>si(ft,l&&(h.isArray(l)?l[Qe]:l),d,_,A));return}if(!(Rr(_)&&!A)){var C=_.shapeFlag&4?Li(_.component)||_.component.proxy:_.el,k=A?null:C,{i:L,r:H}=i,ne=l&&l.r,ve=L.refs===h.EMPTY_OBJ?L.refs={}:L.refs,Me=L.setupState;if(ne!=null&&ne!==H&&(h.isString(ne)?(ve[ne]=null,h.hasOwn(Me,ne)&&(Me[ne]=null)):E.isRef(ne)&&(ne.value=null)),h.isFunction(H))zt(H,L,12,[k,ve]);else{var ue=h.isString(H),Re=E.isRef(H);if(ue||Re){var Ye=()=>{if(i.f){var ft=ue?h.hasOwn(Me,H)?Me[H]:ve[H]:H.value;A?h.isArray(ft)&&h.remove(ft,C):h.isArray(ft)?ft.includes(C)||ft.push(C):ue?(ve[H]=[C],h.hasOwn(Me,H)&&(Me[H]=ve[H])):(H.value=[C],i.k&&(ve[i.k]=H.value))}else ue?(ve[H]=k,h.hasOwn(Me,H)&&(Me[H]=k)):Re&&(H.value=k,i.k&&(ve[i.k]=k))};k?(Ye.id=-1,lr(Ye,d)):Ye()}}}}var Ci=!1,Gi=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",li=i=>i.nodeType===8;function ur(i){var{mt:l,p:d,o:{patchProp:_,createText:A,nextSibling:C,parentNode:k,remove:L,insert:H,createComment:ne}}=i,ve=(xe,me)=>{if(!me.hasChildNodes()){d(null,xe,me),We(),me._vnode=xe;return}Ci=!1,Me(me.firstChild,xe,null,null,null),We(),me._vnode=xe,Ci&&console.error("Hydration completed but contains mismatches.")},Me=function(xe,me,ye,Fe,Ae){var bt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,At=li(xe)&&xe.data==="[",Je=()=>ft(xe,me,ye,Fe,Ae,At),{type:Rt,ref:M,shapeFlag:j,patchFlag:se}=me,re=xe.nodeType;me.el=xe,se===-2&&(bt=!1,me.dynamicChildren=null);var oe=null;switch(Rt){case ce:re!==3?me.children===""?(H(me.el=A("",xe.parentNode),k(xe),xe),oe=xe):oe=Je():(xe.data!==me.children&&(Ci=!0,xe.data=me.children),oe=C(xe));break;case pe:re!==8||At?oe=Je():oe=C(xe);break;case Ie:if(At&&(xe=C(xe),re=xe.nodeType),re===1||re===3){oe=xe;for(var Ue=!me.children.length,rt=0;rt<me.staticCount;rt++)Ue&&(me.children+=oe.nodeType===1?oe.outerHTML:oe.data),rt===me.staticCount-1&&(me.anchor=oe),oe=C(oe);return At?C(oe):oe}else Je();break;case te:At?oe=Ye(xe,me,ye,Fe,Ae,bt):oe=Je();break;default:if(j&1)re!==1||me.type.toLowerCase()!==xe.tagName.toLowerCase()?oe=Je():oe=ue(xe,me,ye,Fe,Ae,bt);else if(j&6){me.slotScopeIds=Ae;var qe=k(xe);if(l(me,qe,null,ye,Fe,Gi(qe),bt),oe=At?Qe(xe):C(xe),oe&&li(oe)&&oe.data==="teleport end"&&(oe=C(oe)),Rr(me)){var Ke;At?(Ke=qt(te),Ke.anchor=oe?oe.previousSibling:qe.lastChild):Ke=xe.nodeType===3?qi(""):qt("div"),Ke.el=xe,me.component.subTree=Ke}}else j&64?re!==8?oe=Je():oe=me.type.hydrate(xe,me,ye,Fe,Ae,bt,i,Re):j&128&&(oe=me.type.hydrate(xe,me,ye,Fe,Gi(k(xe)),Ae,bt,i,Me))}return M!=null&&si(M,null,Fe,me),oe},ue=(xe,me,ye,Fe,Ae,bt)=>{bt=bt||!!me.dynamicChildren;var{type:At,props:Je,patchFlag:Rt,shapeFlag:M,dirs:j}=me,se=At==="input"&&j||At==="option";if(se||Rt!==-1){if(j&&xr(me,null,ye,"created"),Je)if(se||!bt||Rt&(16|32))for(var re in Je)(se&&re.endsWith("value")||h.isOn(re)&&!h.isReservedProp(re))&&_(xe,re,null,Je[re],!1,void 0,ye);else Je.onClick&&_(xe,"onClick",null,Je.onClick,!1,void 0,ye);var oe;if((oe=Je&&Je.onVnodeBeforeMount)&&zr(oe,ye,me),j&&xr(me,null,ye,"beforeMount"),((oe=Je&&Je.onVnodeMounted)||j)&&ar(()=>{oe&&zr(oe,ye,me),j&&xr(me,null,ye,"mounted")},Fe),M&16&&!(Je&&(Je.innerHTML||Je.textContent)))for(var Ue=Re(xe.firstChild,me,xe,ye,Fe,Ae,bt);Ue;){Ci=!0;var rt=Ue;Ue=Ue.nextSibling,L(rt)}else M&8&&xe.textContent!==me.children&&(Ci=!0,xe.textContent=me.children)}return xe.nextSibling},Re=(xe,me,ye,Fe,Ae,bt,At)=>{At=At||!!me.dynamicChildren;for(var Je=me.children,Rt=Je.length,M=0;M<Rt;M++){var j=At?Je[M]:Je[M]=$n(Je[M]);if(xe)xe=Me(xe,j,Fe,Ae,bt,At);else{if(j.type===ce&&!j.children)continue;Ci=!0,d(null,j,ye,null,Fe,Ae,Gi(ye),bt)}}return xe},Ye=(xe,me,ye,Fe,Ae,bt)=>{var{slotScopeIds:At}=me;At&&(Ae=Ae?Ae.concat(At):At);var Je=k(xe),Rt=Re(C(xe),me,Je,ye,Fe,Ae,bt);return Rt&&li(Rt)&&Rt.data==="]"?C(me.anchor=Rt):(Ci=!0,H(me.anchor=ne("]",Je),Je,Rt),Rt)},ft=(xe,me,ye,Fe,Ae,bt)=>{if(Ci=!0,me.el=null,bt)for(var At=Qe(xe);;){var Je=C(xe);if(Je&&Je!==At)L(Je);else break}var Rt=C(xe),M=k(xe);return L(xe),d(null,me,M,Rt,ye,Fe,Gi(M),Ae),Rt},Qe=xe=>{for(var me=0;xe;)if(xe=C(xe),xe&&li(xe)&&(xe.data==="["&&me++,xe.data==="]")){if(me===0)return C(xe);me--}return xe};return[ve,Me]}var lr=ar;function za(i){return Yi(i)}function Wa(i){return Yi(i,ur)}function Yi(i,l){var d=h.getGlobalThis();d.__VUE__=!0;var{insert:_,remove:A,patchProp:C,forcePatchProp:k,createElement:L,createText:H,createComment:ne,setText:ve,setElementText:Me,parentNode:ue,nextSibling:Re,setScopeId:Ye=h.NOOP,insertStaticContent:ft}=i,Qe=function(Y,ee,be){var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,_t=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,et=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!ee.dynamicChildren;if(Y!==ee){Y&&!ht(Y,ee)&&(Le=fr(Y),Bt(Y,De,Ze,!0),Y=null),ee.patchFlag===-2&&(tt=!1,ee.dynamicChildren=null);var{type:He,ref:jt,shapeFlag:Dt}=ee;switch(He){case ce:xe(Y,ee,be,Le);break;case pe:me(Y,ee,be,Le);break;case Ie:Y==null&&ye(ee,be,Le,_t);break;case te:re(Y,ee,be,Le,De,Ze,_t,et,tt);break;default:Dt&1?bt(Y,ee,be,Le,De,Ze,_t,et,tt):Dt&6?oe(Y,ee,be,Le,De,Ze,_t,et,tt):(Dt&64||Dt&128)&&He.process(Y,ee,be,Le,De,Ze,_t,et,tt,Jt)}jt!=null&&De&&si(jt,Y&&Y.ref,Ze,ee||Y,!ee)}},xe=(Y,ee,be,Le)=>{if(Y==null)_(ee.el=H(ee.children,be),be,Le);else{var De=ee.el=Y.el;ee.children!==Y.children&&ve(De,ee.children)}},me=(Y,ee,be,Le)=>{Y==null?_(ee.el=ne(ee.children||"",be),be,Le):ee.el=Y.el},ye=(Y,ee,be,Le)=>{[Y.el,Y.anchor]=ft(Y.children,ee,be,Le,Y.el,Y.anchor)},Fe=(Y,ee,be)=>{for(var{el:Le,anchor:De}=Y,Ze;Le&&Le!==De;)Ze=Re(Le),_(Le,ee,be),Le=Ze;_(De,ee,be)},Ae=Y=>{for(var{el:ee,anchor:be}=Y,Le;ee&&ee!==be;)Le=Re(ee),A(ee),ee=Le;A(be)},bt=(Y,ee,be,Le,De,Ze,_t,et,tt)=>{_t=_t||ee.type==="svg",Y==null?At(ee,be,Le,De,Ze,_t,et,tt):M(Y,ee,De,Ze,_t,et,tt)},At=(Y,ee,be,Le,De,Ze,_t,et)=>{var tt,He,{type:jt,props:Dt,shapeFlag:Wt,transition:An,dirs:Gr}=Y;if(tt=Y.el=L(Y.type,ee),Wt&8?Me(tt,Y.children):Wt&16&&Rt(Y.children,tt,null,Le,De,Ze&&jt!=="foreignObject",_t,et),Gr&&xr(Y,null,Le,"created"),Je(tt,Y,Y.scopeId,_t,Le),Dt){for(var Xn in Dt)Xn!=="value"&&!h.isReservedProp(Xn)&&C(tt,Xn,null,Dt[Xn],Ze,Y.children,Le,De,_n);"value"in Dt&&C(tt,"value",null,Dt.value),(He=Dt.onVnodeBeforeMount)&&zr(He,Le,Y)}Object.defineProperty(tt,"__vueParentComponent",{value:Le,enumerable:!1}),Gr&&xr(Y,null,Le,"beforeMount");var ui=(!De||De&&!De.pendingBranch)&&An&&!An.persisted;ui&&An.beforeEnter(tt),_(tt,ee,be),((He=Dt&&Dt.onVnodeMounted)||ui||Gr)&&lr(()=>{He&&zr(He,Le,Y),ui&&An.enter(tt),Gr&&xr(Y,null,Le,"mounted")},De)},Je=(Y,ee,be,Le,De)=>{if(be&&Ye(Y,be),Le)for(var Ze=0;Ze<Le.length;Ze++)Ye(Y,Le[Ze]);if(De){var _t=De.subTree;if(ee===_t){var et=De.vnode;Je(Y,et,et.scopeId,et.slotScopeIds,De.parent)}}},Rt=function(Y,ee,be,Le,De,Ze,_t,et){for(var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,He=tt;He<Y.length;He++){var jt=Y[He]=et?Ir(Y[He]):$n(Y[He]);Qe(null,jt,ee,be,Le,De,Ze,_t,et)}},M=(Y,ee,be,Le,De,Ze,_t)=>{var et=ee.el=Y.el,{patchFlag:tt,dynamicChildren:He,dirs:jt}=ee;tt|=Y.patchFlag&16;var Dt=Y.props||h.EMPTY_OBJ,Wt=ee.props||h.EMPTY_OBJ,An;be&&oo(be,!1),(An=Wt.onVnodeBeforeUpdate)&&zr(An,be,ee,Y),jt&&xr(ee,Y,be,"beforeUpdate"),be&&oo(be,!0);var Gr=De&&ee.type!=="foreignObject";if(He?j(Y.dynamicChildren,He,et,be,Le,Gr,Ze):_t||$e(Y,ee,et,null,be,Le,Gr,Ze,!1),tt>0){if(tt&16)se(et,ee,Dt,Wt,be,Le,De);else if(tt&2&&Dt.class!==Wt.class&&C(et,"class",null,Wt.class,De),tt&4&&C(et,"style",Dt.style,Wt.style,De),tt&8)for(var Xn=ee.dynamicProps,ui=0;ui<Xn.length;ui++){var jo=Xn[ui],es=Dt[jo],Cs=Wt[jo];(Cs!==es||jo==="value"||k&&k(et,jo))&&C(et,jo,es,Cs,De,Y.children,be,Le,_n)}tt&1&&Y.children!==ee.children&&Me(et,ee.children)}else!_t&&He==null&&se(et,ee,Dt,Wt,be,Le,De);((An=Wt.onVnodeUpdated)||jt)&&lr(()=>{An&&zr(An,be,ee,Y),jt&&xr(ee,Y,be,"updated")},Le)},j=(Y,ee,be,Le,De,Ze,_t)=>{for(var et=0;et<ee.length;et++){var tt=Y[et],He=ee[et],jt=tt.el&&(tt.type===te||!ht(tt,He)||tt.shapeFlag&(6|64))?ue(tt.el):be;Qe(tt,He,jt,null,Le,De,Ze,_t,!0)}},se=(Y,ee,be,Le,De,Ze,_t)=>{if(be!==Le){if(be!==h.EMPTY_OBJ)for(var et in be)!h.isReservedProp(et)&&!(et in Le)&&C(Y,et,be[et],null,_t,ee.children,De,Ze,_n);for(var tt in Le)if(!h.isReservedProp(tt)){var He=Le[tt],jt=be[tt];(He!==jt&&tt!=="value"||k&&k(Y,tt))&&C(Y,tt,jt,He,_t,ee.children,De,Ze,_n)}"value"in Le&&C(Y,"value",be.value,Le.value)}},re=(Y,ee,be,Le,De,Ze,_t,et,tt)=>{var He=ee.el=Y?Y.el:H("",be),jt=ee.anchor=Y?Y.anchor:H("",be),{patchFlag:Dt,dynamicChildren:Wt,slotScopeIds:An}=ee;An&&(et=et?et.concat(An):An),Y==null?(_(He,be,Le),_(jt,be,Le),Rt(ee.children,be,jt,De,Ze,_t,et,tt)):Dt>0&&Dt&64&&Wt&&Y.dynamicChildren?(j(Y.dynamicChildren,Wt,be,De,Ze,_t,et),(ee.key!=null||De&&ee===De.subTree)&&ao(Y,ee,!0)):$e(Y,ee,be,jt,De,Ze,_t,et,tt)},oe=(Y,ee,be,Le,De,Ze,_t,et,tt)=>{ee.slotScopeIds=et,Y==null?ee.shapeFlag&512?De.ctx.activate(ee,be,Le,_t,tt):Ue(ee,be,Le,De,Ze,_t,tt):rt(Y,ee,tt)},Ue=(Y,ee,be,Le,De,Ze,_t)=>{var et=Y.component=tn(Y,Le,De);if(yi(Y)&&(et.ctx.renderer=Jt),Ya(et),et.asyncDep){if(De&&De.registerDep(et,qe),!Y.el){var tt=et.subTree=qt(pe);me(null,tt,ee,be)}return}if(qe(et,Y,ee,be,De,Ze,_t),et.$wxsModules){var He=x.resolveOwnerEl(et,!0);He.length&&He.forEach(jt=>{jt.setAttribute(x.ATTR_V_OWNER_ID,et.uid);var{$renderjsModules:Dt}=et.type;Dt&&jt.setAttribute(x.ATTR_V_RENDERJS,Dt)})}},rt=(Y,ee,be)=>{var Le=ee.component=Y.component;if(To(Y,ee,be))if(Le.asyncDep&&!Le.asyncResolved){Ke(Le,ee,be);return}else Le.next=ee,Jr(Le.update),Le.update();else ee.el=Y.el,Le.vnode=ee},qe=(Y,ee,be,Le,De,Ze,_t)=>{var et=()=>{if(Y.isMounted){var{next:rr,bu:Ma,u:As,parent:Ki,vnode:zo}=Y,co=rr,ba;oo(Y,!1),rr?(rr.el=zo.el,Ke(Y,rr,_t)):rr=zo,Ma&&h.invokeArrayFns(Ma),(ba=rr.props&&rr.props.onVnodeBeforeUpdate)&&zr(ba,Ki,rr,zo),oo(Y,!0);var ts=$i(Y),sa=Y.subTree;Y.subTree=ts,Qe(sa,ts,ue(sa.el),fr(sa),Y,De,Ze),rr.el=ts.el,co===null&&mi(Y,ts.el),As&&lr(As,De),(ba=rr.props&&rr.props.onVnodeUpdated)&&lr(()=>zr(ba,Ki,rr,zo),De)}else{var jt,{el:Dt,props:Wt}=ee,{bm:An,m:Gr,parent:Xn}=Y,ui=Rr(ee);if(oo(Y,!1),An&&h.invokeArrayFns(An),!ui&&(jt=Wt&&Wt.onVnodeBeforeMount)&&zr(jt,Xn,ee),oo(Y,!0),Dt&&lo){var jo=()=>{Y.subTree=$i(Y),lo(Dt,Y.subTree,Y,De,null)};ui?ee.type.__asyncLoader().then(()=>!Y.isUnmounted&&jo()):jo()}else{var es=Y.subTree=$i(Y);Qe(null,es,be,Le,Y,De,Ze),ee.el=es.el}if(Gr&&lr(Gr,De),!ui&&(jt=Wt&&Wt.onVnodeMounted)){var Cs=ee;lr(()=>zr(jt,Xn,Cs),De)}(ee.shapeFlag&256||Xn&&Rr(Xn.vnode)&&Xn.vnode.shapeFlag&256)&&Y.a&&lr(Y.a,De),Y.isMounted=!0,ee=be=Le=null}},tt=Y.effect=new E.ReactiveEffect(et,()=>pr(He),Y.scope),He=Y.update=()=>tt.run();He.id=Y.uid,oo(Y,!0),He()},Ke=(Y,ee,be)=>{ee.component=Y;var Le=Y.vnode.props;Y.vnode=ee,Y.next=null,fa(Y,ee.props,Le,be),as(Y,ee.children,be),E.pauseTracking(),Pn(),E.resetTracking()},$e=function(Y,ee,be,Le,De,Ze,_t,et){var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,He=Y&&Y.children,jt=Y?Y.shapeFlag:0,Dt=ee.children,{patchFlag:Wt,shapeFlag:An}=ee;if(Wt>0){if(Wt&128){vt(He,Dt,be,Le,De,Ze,_t,et,tt);return}else if(Wt&256){Ut(He,Dt,be,Le,De,Ze,_t,et,tt);return}}An&8?(jt&16&&_n(He,De,Ze),Dt!==He&&Me(be,Dt)):jt&16?An&16?vt(He,Dt,be,Le,De,Ze,_t,et,tt):_n(He,De,Ze,!0):(jt&8&&Me(be,""),An&16&&Rt(Dt,be,Le,De,Ze,_t,et,tt))},Ut=(Y,ee,be,Le,De,Ze,_t,et,tt)=>{Y=Y||h.EMPTY_ARR,ee=ee||h.EMPTY_ARR;var He=Y.length,jt=ee.length,Dt=Math.min(He,jt),Wt;for(Wt=0;Wt<Dt;Wt++){var An=ee[Wt]=tt?Ir(ee[Wt]):$n(ee[Wt]);Qe(Y[Wt],An,be,null,De,Ze,_t,et,tt)}He>jt?_n(Y,De,Ze,!0,!1,Dt):Rt(ee,be,Le,De,Ze,_t,et,tt,Dt)},vt=(Y,ee,be,Le,De,Ze,_t,et,tt)=>{for(var He=0,jt=ee.length,Dt=Y.length-1,Wt=jt-1;He<=Dt&&He<=Wt;){var An=Y[He],Gr=ee[He]=tt?Ir(ee[He]):$n(ee[He]);if(ht(An,Gr))Qe(An,Gr,be,null,De,Ze,_t,et,tt);else break;He++}for(;He<=Dt&&He<=Wt;){var Xn=Y[Dt],ui=ee[Wt]=tt?Ir(ee[Wt]):$n(ee[Wt]);if(ht(Xn,ui))Qe(Xn,ui,be,null,De,Ze,_t,et,tt);else break;Dt--,Wt--}if(He>Dt){if(He<=Wt)for(var jo=Wt+1,es=jo<jt?ee[jo].el:Le;He<=Wt;)Qe(null,ee[He]=tt?Ir(ee[He]):$n(ee[He]),be,es,De,Ze,_t,et,tt),He++}else if(He>Wt)for(;He<=Dt;)Bt(Y[He],De,Ze,!0),He++;else{var Cs=He,rr=He,Ma=new Map;for(He=rr;He<=Wt;He++){var As=ee[He]=tt?Ir(ee[He]):$n(ee[He]);As.key!=null&&Ma.set(As.key,He)}var Ki,zo=0,co=Wt-rr+1,ba=!1,ts=0,sa=new Array(co);for(He=0;He<co;He++)sa[He]=0;for(He=Cs;He<=Dt;He++){var la=Y[He];if(zo>=co){Bt(la,De,Ze,!0);continue}var Wo=void 0;if(la.key!=null)Wo=Ma.get(la.key);else for(Ki=rr;Ki<=Wt;Ki++)if(sa[Ki-rr]===0&&ht(la,ee[Ki])){Wo=Ki;break}Wo===void 0?Bt(la,De,Ze,!0):(sa[Wo-rr]=He+1,Wo>=ts?ts=Wo:ba=!0,Qe(la,ee[Wo],be,null,De,Ze,_t,et,tt),zo++)}var bl=ba?ls(sa):h.EMPTY_ARR;for(Ki=bl.length-1,He=co-1;He>=0;He--){var Ys=rr+He,bc=ee[Ys],Wl=Ys+1<jt?ee[Ys+1].el:Le;sa[He]===0?Qe(null,bc,be,Wl,De,Ze,_t,et,tt):ba&&(Ki<0||He!==bl[Ki]?xt(bc,be,Wl,2):Ki--)}}},xt=function(Y,ee,be,Le){var De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Ze,type:_t,transition:et,children:tt,shapeFlag:He}=Y;if(He&6){xt(Y.component.subTree,ee,be,Le);return}if(He&128){Y.suspense.move(ee,be,Le);return}if(He&64){_t.move(Y,ee,be,Jt);return}if(_t===te){_(Ze,ee,be);for(var jt=0;jt<tt.length;jt++)xt(tt[jt],ee,be,Le);_(Y.anchor,ee,be);return}if(_t===Ie){Fe(Y,ee,be);return}var Dt=Le!==2&&He&1&&et;if(Dt)if(Le===0)et.beforeEnter(Ze),_(Ze,ee,be),lr(()=>et.enter(Ze),De);else{var{leave:Wt,delayLeave:An,afterLeave:Gr}=et,Xn=()=>_(Ze,ee,be),ui=()=>{Wt(Ze,()=>{Xn(),Gr&&Gr()})};An?An(Ze,Xn,ui):ui()}else _(Ze,ee,be)},Bt=function(Y,ee,be){var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Ze,props:_t,ref:et,children:tt,dynamicChildren:He,shapeFlag:jt,patchFlag:Dt,dirs:Wt}=Y;if(et!=null&&si(et,null,be,Y,!0),jt&256){ee.ctx.deactivate(Y);return}var An=jt&1&&Wt,Gr=!Rr(Y),Xn;if(Gr&&(Xn=_t&&_t.onVnodeBeforeUnmount)&&zr(Xn,ee,Y),jt&6)pn(Y.component,be,Le);else{if(jt&128){Y.suspense.unmount(be,Le);return}An&&xr(Y,null,ee,"beforeUnmount"),jt&64?Y.type.remove(Y,ee,be,De,Jt,Le):He&&(Ze!==te||Dt>0&&Dt&64)?_n(He,ee,be,!1,!0):(Ze===te&&Dt&(128|256)||!De&&jt&16)&&_n(tt,ee,be),Le&&Mn(Y)}(Gr&&(Xn=_t&&_t.onVnodeUnmounted)||An)&&lr(()=>{Xn&&zr(Xn,ee,Y),An&&xr(Y,null,ee,"unmounted")},be)},Mn=Y=>{var{type:ee,el:be,anchor:Le,transition:De}=Y;if(ee===te){Rn(be,Le);return}if(ee===Ie){Ae(Y);return}var Ze=()=>{A(be),De&&!De.persisted&&De.afterLeave&&De.afterLeave()};if(Y.shapeFlag&1&&De&&!De.persisted){var{leave:_t,delayLeave:et}=De,tt=()=>_t(be,Ze);et?et(Y.el,Ze,tt):tt()}else Ze()},Rn=(Y,ee)=>{for(var be;Y!==ee;)be=Re(Y),A(Y),Y=be;A(ee)},pn=(Y,ee,be)=>{var{bum:Le,scope:De,update:Ze,subTree:_t,um:et}=Y;Le&&h.invokeArrayFns(Le),De.stop(),Ze&&(Ze.active=!1,Bt(_t,Y,ee,be)),et&&lr(et,ee),lr(()=>{Y.isUnmounted=!0},ee),ee&&ee.pendingBranch&&!ee.isUnmounted&&Y.asyncDep&&!Y.asyncResolved&&Y.suspenseId===ee.pendingId&&(ee.deps--,ee.deps===0&&ee.resolve())},_n=function(Y,ee,be){for(var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Ze=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,_t=Ze;_t<Y.length;_t++)Bt(Y[_t],ee,be,Le,De)},fr=Y=>Y.shapeFlag&6?fr(Y.component.subTree):Y.shapeFlag&128?Y.suspense.next():Re(Y.anchor||Y.el),ni=(Y,ee,be)=>{Y==null?ee._vnode&&Bt(ee._vnode,null,null,!0):Qe(ee._vnode||null,Y,ee,null,null,null,be),Pn(),We(),ee._vnode=Y},Jt={p:Qe,um:Bt,m:xt,r:Mn,mt:Ue,mc:Rt,pc:$e,pbc:j,n:fr,o:i},nn,lo;return l&&([nn,lo]=l(Jt)),{render:ni,hydrate:nn,createApp:io(ni,nn)}}function oo(i,l){var{effect:d,update:_}=i;d.allowRecurse=_.allowRecurse=l}function ao(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=i.children,A=l.children;if(h.isArray(_)&&h.isArray(A))for(var C=0;C<_.length;C++){var k=_[C],L=A[C];L.shapeFlag&1&&!L.dynamicChildren&&((L.patchFlag<=0||L.patchFlag===32)&&(L=A[C]=Ir(A[C]),L.el=k.el),d||ao(k,L)),L.type===ce&&(L.el=k.el)}}function ls(i){var l=i.slice(),d=[0],_,A,C,k,L,H=i.length;for(_=0;_<H;_++){var ne=i[_];if(ne!==0){if(A=d[d.length-1],i[A]<ne){l[_]=A,d.push(_);continue}for(C=0,k=d.length-1;C<k;)L=C+k>>1,i[d[L]]<ne?C=L+1:k=L;ne<i[d[C]]&&(C>0&&(l[_]=d[C-1]),d[C]=_)}}for(C=d.length,k=d[C-1];C-- >0;)d[C]=k,k=l[k];return d}var ha=i=>i.__isTeleport,Fo=i=>i&&(i.disabled||i.disabled===""),ga=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,m=(i,l)=>{var d=i&&i.to;if(h.isString(d))if(l){var _=l(d);return _}else return null;else return d},R={__isTeleport:!0,process(i,l,d,_,A,C,k,L,H,ne){var{mc:ve,pc:Me,pbc:ue,o:{insert:Re,querySelector:Ye,createText:ft,createComment:Qe}}=ne,xe=Fo(l.props),{shapeFlag:me,children:ye,dynamicChildren:Fe}=l;if(i==null){var Ae=l.el=ft("",d),bt=l.anchor=ft("",d);Re(Ae,d,_),Re(bt,d,_);var At=l.target=m(l.props,Ye),Je=l.targetAnchor=ft("",d);At&&(Re(Je,At),k=k||ga(At));var Rt=(qe,Ke)=>{me&16&&ve(ye,qe,Ke,A,C,k,L,H)};xe?Rt(d,bt):At&&Rt(At,Je)}else{l.el=i.el;var M=l.anchor=i.anchor,j=l.target=i.target,se=l.targetAnchor=i.targetAnchor,re=Fo(i.props),oe=re?d:j,Ue=re?M:se;if(k=k||ga(j),Fe?(ue(i.dynamicChildren,Fe,oe,A,C,k,L),ao(i,l,!0)):H||Me(i,l,oe,Ue,A,C,k,L,!1),xe)re||$(l,d,M,ne,1);else if((l.props&&l.props.to)!==(i.props&&i.props.to)){var rt=l.target=m(l.props,Ye);rt&&$(l,rt,null,ne,0)}else re&&$(l,j,se,ne,1)}q(l)},remove(i,l,d,_,A,C){var{um:k,o:{remove:L}}=A,{shapeFlag:H,children:ne,anchor:ve,targetAnchor:Me,target:ue,props:Re}=i;if(ue&&L(Me),(C||!Fo(Re))&&(L(ve),H&16))for(var Ye=0;Ye<ne.length;Ye++){var ft=ne[Ye];k(ft,l,d,!0,!!ft.dynamicChildren)}},move:$,hydrate:U};function $(i,l,d,_){var{o:{insert:A},m:C}=_,k=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;k===0&&A(i.targetAnchor,l,d);var{el:L,anchor:H,shapeFlag:ne,children:ve,props:Me}=i,ue=k===2;if(ue&&A(L,l,d),(!ue||Fo(Me))&&ne&16)for(var Re=0;Re<ve.length;Re++)C(ve[Re],l,d,2);ue&&A(H,l,d)}function U(i,l,d,_,A,C,k,L){var{o:{nextSibling:H,parentNode:ne,querySelector:ve}}=k,Me=l.target=m(l.props,ve);if(Me){var ue=Me._lpa||Me.firstChild;if(l.shapeFlag&16)if(Fo(l.props))l.anchor=L(H(i),l,ne(i),d,_,A,C),l.targetAnchor=ue;else{l.anchor=H(i);for(var Re=ue;Re;)if(Re=H(Re),Re&&Re.nodeType===8&&Re.data==="teleport anchor"){l.targetAnchor=Re,Me._lpa=l.targetAnchor&&H(l.targetAnchor);break}L(ue,l,Me,d,_,A,C)}q(l)}return l.anchor&&H(l.anchor)}var Z=R;function q(i){var l=i.ctx;if(l&&l.ut){for(var d=i.children[0].el;d!==i.targetAnchor;)d.nodeType===1&&d.setAttribute("data-v-owner",l.uid),d=d.nextSibling;l.ut()}}var te=Symbol(void 0),ce=Symbol(void 0),pe=Symbol(void 0),Ie=Symbol(void 0),fe=[],we=null;function ut(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;fe.push(we=i?null:[])}function pt(){fe.pop(),we=fe[fe.length-1]||null}var $t=1;function Et(i){$t+=i}function je(i){return i.dynamicChildren=$t>0?we||h.EMPTY_ARR:null,pt(),$t>0&&we&&we.push(i),i}function Mt(i,l,d,_,A,C){return je(Vt(i,l,d,_,A,C,!0))}function fn(i,l,d,_,A){return je(qt(i,l,d,_,A,!0))}function Gt(i){return i?i.__v_isVNode===!0:!1}function ht(i,l){return i.type===l.type&&i.key===l.key}function Qt(i){}var Bn="__vInternal",Yt=i=>{var{key:l}=i;return l!=null?l:null},Ht=i=>{var{ref:l,ref_key:d,ref_for:_}=i;return l!=null?h.isString(l)||E.isRef(l)||h.isFunction(l)?{i:hn,r:l,k:d,f:!!_}:l:null};function Vt(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===te?0:1,k=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,L=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,H={__v_isVNode:!0,__v_skip:!0,type:i,props:l,key:l&&Yt(l),ref:l&&Ht(l),scopeId:wr,slotScopeIds:null,children:d,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:C,patchFlag:_,dynamicProps:A,dynamicChildren:null,appContext:null,ctx:hn};return L?(Hn(H,d),C&128&&i.normalize(H)):d&&(H.shapeFlag|=h.isString(d)?8:16),$t>0&&!k&&we&&(H.patchFlag>0||C&6)&&H.patchFlag!==32&&we.push(H),H}var qt=Qo;function Qo(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===Bi)&&(i=pe),Gt(i)){var k=ei(i,l,!0);return d&&Hn(k,d),$t>0&&!C&&we&&(k.shapeFlag&6?we[we.indexOf(i)]=k:we.push(k)),k.patchFlag|=-2,k}if(bo(i)&&(i=i.__vccOpts),l){l=ci(l);var{class:L,style:H}=l;L&&!h.isString(L)&&(l.class=h.normalizeClass(L)),h.isObject(H)&&(E.isProxy(H)&&!h.isArray(H)&&(H=h.extend({},H)),l.style=h.normalizeStyle(H))}var ne=h.isString(i)?1:Po(i)?128:ha(i)?64:h.isObject(i)?4:h.isFunction(i)?2:0;return Vt(i,l,d,_,A,ne,C,!0)}function ci(i){return i?E.isProxy(i)||Bn in i?h.extend({},i):i:null}function ei(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:_,ref:A,patchFlag:C,children:k}=i,L=l?Er(_||{},l):_,H={__v_isVNode:!0,__v_skip:!0,type:i.type,props:L,key:L&&Yt(L),ref:l&&l.ref?d&&A?h.isArray(A)?A.concat(Ht(l)):[A,Ht(l)]:Ht(l):A,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:k,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:l&&i.type!==te?C===-1?16:C|16:C,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&ei(i.ssContent),ssFallback:i.ssFallback&&ei(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return H}function qi(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return qt(ce,null,i,l)}function Ga(i,l){var d=qt(Ie,null,i);return d.staticCount=l,d}function Un(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return l?(ut(),fn(pe,null,i)):qt(pe,null,i)}function $n(i){return i==null||typeof i=="boolean"?qt(pe):h.isArray(i)?qt(te,null,i.slice()):typeof i=="object"?Ir(i):qt(ce,null,String(i))}function Ir(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:ei(i)}function Hn(i,l){var d=0,{shapeFlag:_}=i;if(l==null)l=null;else if(h.isArray(l))d=16;else if(typeof l=="object")if(_&(1|64)){var A=l.default;A&&(A._c&&(A._d=!1),Hn(i,A()),A._c&&(A._d=!0));return}else{d=32;var C=l._;!C&&!(Bn in l)?l._ctx=hn:C===3&&hn&&(hn.slots._===1?l._=1:(l._=2,i.patchFlag|=1024))}else h.isFunction(l)?(l={default:l,_ctx:hn},d=32):(l=String(l),_&64?(d=16,l=[qi(l)]):d=8);i.children=l,i.shapeFlag|=d}function Er(){for(var i={},l=0;l<arguments.length;l++){var d=l<0||arguments.length<=l?void 0:arguments[l];for(var _ in d)if(_==="class")i.class!==d.class&&(i.class=h.normalizeClass([i.class,d.class]));else if(_==="style")i.style=h.normalizeStyle([i.style,d.style]);else if(h.isOn(_)){var A=i[_],C=d[_];C&&A!==C&&!(h.isArray(A)&&A.includes(C))&&(i[_]=A?[].concat(A,C):C)}else _!==""&&(i[_]=d[_])}return i}function zr(i,l,d){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;Tt(i,l,7,[d,_])}var ea=Do(),cs=0;function tn(i,l,d){var _=i.type,A=(l?l.appContext:i.appContext)||ea,C={uid:cs++,vnode:i,type:_,parent:l,appContext:A,root:null,next:null,subTree:null,effect:null,update:null,scope:new E.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:l?l.provides:Object.create(A.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ua(_,A),emitsOptions:Wn(_,A),emit:null,emitted:null,propsDefaults:h.EMPTY_OBJ,inheritAttrs:_.inheritAttrs,ctx:h.EMPTY_OBJ,data:h.EMPTY_OBJ,props:h.EMPTY_OBJ,attrs:h.EMPTY_OBJ,slots:h.EMPTY_OBJ,refs:h.EMPTY_OBJ,setupState:h.EMPTY_OBJ,setupContext:null,suspense:d,suspenseId:d?d.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return C.ctx={_:C},C.root=l?l.root:C,C.emit=or.bind(null,C),i.ce&&i.ce(C),C}var mn=null,jn=()=>mn||hn,qn=i=>{mn=i,i.scope.on()},Ai=()=>{mn&&mn.scope.off(),mn=null};function us(i){return i.vnode.shapeFlag&4}S.isInSSRComponentSetup=!1;function Ya(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;S.isInSSRComponentSetup=l;var{props:d,children:_}=i.vnode,A=us(i);is(i,d,A,l),os(i,_);var C=A?Na(i,l):void 0;return S.isInSSRComponentSetup=!1,C}function Na(i,l){var d=i.type;i.accessCache=Object.create(null),i.proxy=E.markRaw(new Proxy(i.ctx,K));var{setup:_}=d;if(_){var A=i.setupContext=_.length>1?Vo(i):null;qn(i),E.pauseTracking();var C=zt(_,i,0,[i.props,A]);if(E.resetTracking(),Ai(),h.isPromise(C)){if(C.then(Ai,Ai),l)return C.then(k=>{ta(i,k,l)}).catch(k=>{I(k,i,0)});i.asyncDep=C}else ta(i,C,l)}else Ja(i,l)}function ta(i,l,d){h.isFunction(l)?i.type.__ssrInlineRender?i.ssrRender=l:i.render=l:h.isObject(l)&&(i.setupState=E.proxyRefs(l)),Ja(i,d)}var so,qa;function fs(i){so=i,qa=l=>{l.render._rc&&(l.withProxy=new Proxy(l.ctx,ie))}}var Wr=()=>!so;function Ja(i,l,d){var _=i.type;if(!i.render){if(!l&&so&&!_.render){var A=_.template||_r(i).template;if(A){var{isCustomElement:C,compilerOptions:k}=i.appContext.config,{delimiters:L,compilerOptions:H}=_,ne=h.extend(h.extend({isCustomElement:C,delimiters:L},k),H);_.render=so(A,ne)}}i.render=_.render||h.NOOP,qa&&qa(i)}qn(i),E.pauseTracking(),lt(i),E.resetTracking(),Ai()}function Ka(i){return new Proxy(i.attrs,{get(l,d){return E.track(i,"get","$attrs"),l[d]}})}function Vo(i){var l=_=>{i.exposed=_||{}},d;return{get attrs(){return d||(d=Ka(i))},slots:i.slots,emit:i.emit,expose:l}}function Li(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(E.proxyRefs(E.markRaw(i.exposed)),{get(l,d){if(d in l)return l[d];if(d in kt)return kt[d](i)},has(l,d){return d in l||d in kt}}))}function _o(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return h.isFunction(i)?i.displayName||i.name:i.name||l&&i.__name}function bo(i){return h.isFunction(i)&&"__vccOpts"in i}var ds=(i,l)=>E.computed(i,l,S.isInSSRComponentSetup);function Uo(){return null}function Bs(){return null}function hs(i){}function Ms(i,l){return null}function Be(){return Pt().slots}function It(){return Pt().attrs}function Pt(){var i=jn();return i.setupContext||(i.setupContext=Vo(i))}function wn(i,l){var d=h.isArray(i)?i.reduce((C,k)=>(C[k]={},C),{}):i;for(var _ in l){var A=d[_];A?h.isArray(A)||h.isFunction(A)?d[_]={type:A,default:l[_]}:A.default=l[_]:A===null&&(d[_]={default:l[_]})}return d}function yr(i,l){var d={},_=function(C){l.includes(C)||Object.defineProperty(d,C,{enumerable:!0,get:()=>i[C]})};for(var A in i)_(A);return d}function Oi(i){var l=jn(),d=i();return Ai(),h.isPromise(d)&&(d=d.catch(_=>{throw qn(l),_})),[d,()=>qn(l)]}function Ji(i,l,d){var _=arguments.length;return _===2?h.isObject(l)&&!h.isArray(l)?Gt(l)?qt(i,null,[l]):qt(i,l):qt(i,null,l):(_>3?d=Array.prototype.slice.call(arguments,2):_===3&&Gt(d)&&(d=[d]),qt(i,l,d))}var Eo=Symbol(""),ka=()=>{{var i=Zn(Eo);return i}};function na(){}function gs(i,l,d,_){var A=d[_];if(A&&ps(A,i))return A;var C=l();return C.memo=i.slice(),d[_]=C}function ps(i,l){var d=i.memo;if(d.length!=l.length)return!1;for(var _=0;_<d.length;_++)if(h.hasChanged(d[_],l[_]))return!1;return $t>0&&we&&we.push(i),!0}var dl="3.2.47",Ul={createComponentInstance:tn,setupComponent:Ya,renderComponentRoot:$i,setCurrentRenderingInstance:Kr,isVNode:Gt,normalizeVNode:$n},$l=Ul,pa=null,va=null;function ra(i,l){return i==="input"?new x.UniInputElement(i,l):i==="textarea"?new x.UniTextAreaElement(i,l):new x.UniElement(i,l)}function ma(i,l){return new x.UniTextNode(i,l)}function Ra(i,l){return new x.UniCommentNode(i,l)}var vs,ia={insert:(i,l,d)=>{l.insertBefore(i,d||null)},remove:i=>{var l=i.parentNode;l&&l.removeChild(i)},createElement:(i,l)=>ra(i,l),createText:(i,l)=>ma(i,l),createComment:(i,l)=>Ra(i,l),setText:(i,l)=>{i.nodeValue=l},setElementText:(i,l)=>{i.textContent=l},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,l){i.setAttribute(l,"")},cloneNode(i){var l=i.cloneNode(!0);return"_value"in i&&(l._value=i._value),l},insertStaticContent(i,l,d){var _=vs||(vs=ra("div"));_.innerHTML=i;for(var A=_.firstChild,C=A,k=C;C;)k=C,ia.insert(C,l,d),C=_.firstChild;return[A,k]}};function Ls(i,l){l==null&&(l=""),i.setAttribute("class",l)}function Hl(i,l,d){if(!d)i.removeAttribute("style");else if(h.isString(d))l!==d&&i.setAttribute("style",d);else{var _={},A=l&&!h.isString(l);if(A){for(var C in l)d[C]==null&&(_[C]="");for(var k in d){var L=d[k];L!==l[k]&&(_[k]=L)}}else for(var H in d)_[H]=d[H];Object.keys(_).length&&i.setAttribute("style",_)}}function ms(i,l,d){d==null?i.removeAttribute(l):i.setAttribute(l,d)}function Ds(i,l,d,_){i.addEventListener(l,d,_)}function Fs(i,l,d,_){i.removeEventListener(l,d,_)}function Vs(i,l,d,_){var A=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=i._vei||(i._vei={}),k=C[l];if(_&&k)k.value=_;else{var[L,H]=xa(l);if(_){var ne=C[l]=hl(_,A);Ds(i,L,ne,H)}else k&&(Fs(i,L,k,H),C[l]=void 0)}}var _s=/(?:Once|Passive|Capture)$/;function xa(i){var l;if(_s.test(i)){l={};for(var d;d=i.match(_s);)i=i.slice(0,i.length-d[0].length),l[d[0].toLowerCase()]=!0}return[h.hyphenate(i.slice(2)),l]}function hl(i,l){var d=A=>{Tt(d.value,l,5,[A])};d.value=i;var _=new Set;return h.isArray(d.value)?d.value.forEach(A=>{A.modifiers&&A.modifiers.forEach(C=>{_.add(C)})}):(d.value.modifiers&&d.value.modifiers.forEach(A=>{_.add(A)}),Us(d,l)),d.modifiers=[..._],d}function Us(i,l){if(!!l){var{$wxsModules:d}=l;if(!!d){var _=i.value.toString();!d.find(A=>_.indexOf("."+A+".")>-1)||(i.wxsEvent=i.value())}}}var jl=function(i,l,d,_){var A=arguments.length>6?arguments[6]:void 0;switch(l){case"class":Ls(i,_);break;case"style":Hl(i,d,_);break;default:if(h.isOn(l))h.isModelListener(l)||Vs(i,l,d,_,A);else{if(h.isObject(_)){var C=d===_;if(_=x.JSON_PROTOCOL+JSON.stringify(_),C&&i.getAttribute(l)===_)return}else if(d===_)return;ms(i,l,_)}break}};function $o(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var l=jn();if(!l)return h.EMPTY_OBJ;var d=l.type.__cssModules;if(!d)return h.EMPTY_OBJ;var _=d[i];return _||h.EMPTY_OBJ}}function Za(i){var l=jn();if(!!l){var d=()=>_a(l.subTree,i(l.proxy));tr(()=>Ni(d,{flush:"post"})),nr(d)}}function _a(i,l){if(i.shapeFlag&128){var d=i.suspense;i=d.activeBranch,d.pendingBranch&&!d.isHydrating&&d.effects.push(()=>{_a(d.activeBranch,l)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)Ba(i.el,l);else if(i.type===te)i.children.forEach(C=>_a(C,l));else if(i.type===Ie)for(var{el:_,anchor:A}=i;_&&(Ba(_,l),_!==A);)_=_.nextSibling}function Ba(i,l){if(i.nodeType===1)for(var d in l)i.setAttribute("--".concat(d),l[d])}var yo="transition",oa="animation",Xa=(i,l)=>{var{slots:d}=l;return Ji(Lt,Hs(i),d)};Xa.displayName="Transition";var $s={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},gl=Xa.props=h.extend({},Lt.props,$s),Ho=function(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];h.isArray(i)?i.forEach(d=>d(...l)):i&&i(...l)},bs=i=>i?h.isArray(i)?i.some(l=>l.length>1):i.length>1:!1;function Hs(i){var l={};for(var d in i)d in $s||(l[d]=i[d]);if(i.css===!1)return l;var{name:_="v",type:A,duration:C,enterFromClass:k="".concat(_,"-enter-from"),enterActiveClass:L="".concat(_,"-enter-active"),enterToClass:H="".concat(_,"-enter-to"),appearFromClass:ne=k,appearActiveClass:ve=L,appearToClass:Me=H,leaveFromClass:ue="".concat(_,"-leave-from"),leaveActiveClass:Re="".concat(_,"-leave-active"),leaveToClass:Ye="".concat(_,"-leave-to")}=i,ft=Qa(C),Qe=ft&&ft[0],xe=ft&&ft[1],{onBeforeEnter:me,onEnter:ye,onEnterCancelled:Fe,onLeave:Ae,onLeaveCancelled:bt,onBeforeAppear:At=me,onAppear:Je=ye,onAppearCancelled:Rt=Fe}=l,M=(re,oe,Ue)=>{aa(re,oe?Me:H),aa(re,oe?ve:L),Ue&&Ue()},j=(re,oe)=>{aa(re,Ye),aa(re,Re),oe&&oe()},se=re=>(oe,Ue)=>{var rt=re?Je:ye,qe=()=>M(oe,re,Ue);Ho(rt,[oe,qe]),pl(()=>{aa(oe,re?ne:k),Mr(oe,re?Me:H),bs(rt)||js(oe,A,Qe,qe)})};return h.extend(l,{onBeforeEnter(re){Ho(me,[re]),Mr(re,k),Mr(re,L)},onBeforeAppear(re){Ho(At,[re]),Mr(re,ne),Mr(re,ve)},onEnter:se(!1),onAppear:se(!0),onLeave(re,oe){var Ue=()=>j(re,oe);Mr(re,ue),vl(),Mr(re,Re),pl(()=>{aa(re,ue),Mr(re,Ye),bs(Ae)||js(re,A,xe,Ue)}),Ho(Ae,[re,Ue])},onEnterCancelled(re){M(re,!1),Ho(Fe,[re])},onAppearCancelled(re){M(re,!0),Ho(Rt,[re])},onLeaveCancelled(re){j(re),Ho(bt,[re])}})}function Qa(i){if(i==null)return null;if(h.isObject(i))return[ti(i.enter),ti(i.leave)];var l=ti(i);return[l,l]}function ti(i){var l=h.toNumber(i);return l}function Mr(i,l){l.split(/\s+/).forEach(d=>d&&i.classList.add(d)),(i._vtc||(i._vtc=new Set)).add(l)}function aa(i,l){l.split(/\s+/).forEach(_=>_&&i.classList.remove(_));var{_vtc:d}=i;d&&(d.delete(l),d.size||(i._vtc=void 0))}function pl(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var zl=0;function js(i,l,d,_){var A=i._endId=++zl,C=()=>{A===i._endId&&_()};if(d)return setTimeout(C,d);var{type:k,timeout:L,propCount:H}=Es(i,l);if(!k)return _();var ne=k+"end",ve=0,Me=()=>{i.removeEventListener(ne,ue),C()},ue=Re=>{Re.target===i&&++ve>=H&&Me()};setTimeout(()=>{ve<H&&Me()},L+1),i.addEventListener(ne,ue)}function Es(i,l){var d=window.getComputedStyle(i),_=Ye=>(d[Ye]||"").split(", "),A=_(yo+"Delay"),C=_(yo+"Duration"),k=zs(A,C),L=_(oa+"Delay"),H=_(oa+"Duration"),ne=zs(L,H),ve=null,Me=0,ue=0;l===yo?k>0&&(ve=yo,Me=k,ue=C.length):l===oa?ne>0&&(ve=oa,Me=ne,ue=H.length):(Me=Math.max(k,ne),ve=Me>0?k>ne?yo:oa:null,ue=ve?ve===yo?C.length:H.length:0);var Re=ve===yo&&/\b(transform|all)(,|$)/.test(d[yo+"Property"]);return{type:ve,timeout:Me,propCount:ue,hasTransform:Re}}function zs(i,l){for(;i.length<l.length;)i=i.concat(i);return Math.max(...l.map((d,_)=>Ws(d)+Ws(i[_])))}function Ws(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function vl(){return document.body.offsetHeight}var Gs=new WeakMap,ys=new WeakMap,Ss={name:"TransitionGroup",props:h.extend({},gl,{tag:String,moveClass:String}),setup(i,l){var{slots:d}=l,_=jn(),A=Ar(),C,k;return nr(()=>{if(!!C.length){var L=i.moveClass||"".concat(i.name||"v","-move");if(!!v(C[0].el,_.vnode.el,L)){C.forEach(_l),C.forEach(a);var H=C.filter(u);vl(),H.forEach(ne=>{var ve=ne.el,Me=ve.style;Mr(ve,L),Me.transform=Me.webkitTransform=Me.transitionDuration="";var ue=ve._moveCb=Re=>{Re&&Re.target!==ve||(!Re||/transform$/.test(Re.propertyName))&&(ve.removeEventListener("transitionend",ue),ve._moveCb=null,aa(ve,L))};ve.addEventListener("transitionend",ue)})}}}),()=>{var L=E.toRaw(i),H=Hs(L),ne=L.tag||te;C=k,k=d.default?Ri(d.default()):[];for(var ve=0;ve<k.length;ve++){var Me=k[ve];Me.key!=null&&Or(Me,_i(Me,H,A,_))}if(C)for(var ue=0;ue<C.length;ue++){var Re=C[ue];Or(Re,_i(Re,H,A,_)),Gs.set(Re,Re.el.getBoundingClientRect())}return qt(ne,null,k)}}},ws=i=>delete i.mode;Ss.props;var ml=Ss;function _l(i){var l=i.el;l._moveCb&&l._moveCb(),l._enterCb&&l._enterCb()}function a(i){ys.set(i,i.el.getBoundingClientRect())}function u(i){var l=Gs.get(i),d=ys.get(i),_=l.left-d.left,A=l.top-d.top;if(_||A){var C=i.el.style;return C.transform=C.webkitTransform="translate(".concat(_,"px,").concat(A,"px)"),C.transitionDuration="0s",i}}function v(i,l,d){var _=i.cloneNode();i._vtc&&i._vtc.forEach(k=>{k.split(/\s+/).forEach(L=>L&&_.classList.remove(L))}),d.split(/\s+/).forEach(k=>k&&_.classList.add(k)),_.style.display="none";var A=l.nodeType===1?l:l.parentNode;A.appendChild(_);var{hasTransform:C}=Es(_);return A.removeChild(_),C}var y=i=>{var l=i.props["onUpdate:modelValue"];return h.isArray(l)?d=>h.invokeArrayFns(l,d):l},P={created(i,l,d){var{value:_,modifiers:{trim:A,number:C}}=l;i.value=_==null?"":_,i._assign=y(d),Ds(i,"input",k=>{var L=k.detail.value,H=i.pageNode;i.pageNode=null,i.value=L,i.pageNode=H,A?L=L.trim():C&&(L=h.toNumber(L)),i._assign(L)})},beforeUpdate(i,l,d){var{value:_}=l;i._assign=y(d);var A=_==null?"":_;i.value!==A&&(i.value=A)}},O=P,F=["ctrl","shift","alt","meta"],W={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,l)=>F.some(d=>i["".concat(d,"Key")]&&!l.includes(d))},G=(i,l)=>{var d=function(_){for(var A=0;A<l.length;A++){var C=W[l[A]];if(C&&C(_,l))return}for(var k=arguments.length,L=new Array(k>1?k-1:0),H=1;H<k;H++)L[H-1]=arguments[H];return i(_,...L)};return d.modifiers=l,d},le={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},ze=(i,l)=>d=>{if("key"in d){var _=h.hyphenate(d.key);if(l.some(A=>A===_||le[A]===_))return i(d)}},ot={beforeMount(i,l){var{value:d}=l;ge(i,d)},updated(i,l){var{value:d,oldValue:_}=l;!d!=!_&&ge(i,d)},beforeUnmount(i,l){var{value:d}=l;ge(i,d)}};function ge(i,l){i.setAttribute(".vShow",!!l)}var Ge=h.extend({patchProp:jl,forcePatchProp:x.forcePatchProp},ia),Xe;function wt(){return Xe||(Xe=za(Ge))}var it=function(){wt().render(...arguments)},Ce=function(){var i=wt().createApp(...arguments),{mount:l}=i;return i.mount=d=>(h.isString(d)&&(d=Ra(d)),d&&l(d,!1,!1)),i},Ee=Ce;function Te(){}function st(){}function ke(i){return h.isObject(i)?x.JSON_PROTOCOL+JSON.stringify(i):i}var Ct=i=>ke(i);return Object.defineProperty(S,"camelize",{enumerable:!0,get:function(){return h.camelize}}),Object.defineProperty(S,"capitalize",{enumerable:!0,get:function(){return h.capitalize}}),Object.defineProperty(S,"normalizeClass",{enumerable:!0,get:function(){return h.normalizeClass}}),Object.defineProperty(S,"normalizeProps",{enumerable:!0,get:function(){return h.normalizeProps}}),Object.defineProperty(S,"normalizeStyle",{enumerable:!0,get:function(){return h.normalizeStyle}}),Object.defineProperty(S,"toDisplayString",{enumerable:!0,get:function(){return h.toDisplayString}}),Object.defineProperty(S,"toHandlerKey",{enumerable:!0,get:function(){return h.toHandlerKey}}),Object.defineProperty(S,"EffectScope",{enumerable:!0,get:function(){return E.EffectScope}}),Object.defineProperty(S,"ReactiveEffect",{enumerable:!0,get:function(){return E.ReactiveEffect}}),Object.defineProperty(S,"customRef",{enumerable:!0,get:function(){return E.customRef}}),Object.defineProperty(S,"effect",{enumerable:!0,get:function(){return E.effect}}),Object.defineProperty(S,"effectScope",{enumerable:!0,get:function(){return E.effectScope}}),Object.defineProperty(S,"getCurrentScope",{enumerable:!0,get:function(){return E.getCurrentScope}}),Object.defineProperty(S,"isProxy",{enumerable:!0,get:function(){return E.isProxy}}),Object.defineProperty(S,"isReactive",{enumerable:!0,get:function(){return E.isReactive}}),Object.defineProperty(S,"isReadonly",{enumerable:!0,get:function(){return E.isReadonly}}),Object.defineProperty(S,"isRef",{enumerable:!0,get:function(){return E.isRef}}),Object.defineProperty(S,"isShallow",{enumerable:!0,get:function(){return E.isShallow}}),Object.defineProperty(S,"markRaw",{enumerable:!0,get:function(){return E.markRaw}}),Object.defineProperty(S,"onScopeDispose",{enumerable:!0,get:function(){return E.onScopeDispose}}),Object.defineProperty(S,"proxyRefs",{enumerable:!0,get:function(){return E.proxyRefs}}),Object.defineProperty(S,"reactive",{enumerable:!0,get:function(){return E.reactive}}),Object.defineProperty(S,"readonly",{enumerable:!0,get:function(){return E.readonly}}),Object.defineProperty(S,"ref",{enumerable:!0,get:function(){return E.ref}}),Object.defineProperty(S,"shallowReactive",{enumerable:!0,get:function(){return E.shallowReactive}}),Object.defineProperty(S,"shallowReadonly",{enumerable:!0,get:function(){return E.shallowReadonly}}),Object.defineProperty(S,"shallowRef",{enumerable:!0,get:function(){return E.shallowRef}}),Object.defineProperty(S,"stop",{enumerable:!0,get:function(){return E.stop}}),Object.defineProperty(S,"toRaw",{enumerable:!0,get:function(){return E.toRaw}}),Object.defineProperty(S,"toRef",{enumerable:!0,get:function(){return E.toRef}}),Object.defineProperty(S,"toRefs",{enumerable:!0,get:function(){return E.toRefs}}),Object.defineProperty(S,"triggerRef",{enumerable:!0,get:function(){return E.triggerRef}}),Object.defineProperty(S,"unref",{enumerable:!0,get:function(){return E.unref}}),S.BaseTransition=Lt,S.BaseTransitionPropsValidators=Xr,S.Comment=pe,S.Fragment=te,S.KeepAlive=ji,S.Static=Ie,S.Suspense=kn,S.Teleport=Z,S.Text=ce,S.Transition=Xa,S.TransitionGroup=ml,S.assertNumber=Nt,S.callWithAsyncErrorHandling=Tt,S.callWithErrorHandling=zt,S.cloneVNode=ei,S.compatUtils=va,S.computed=ds,S.createApp=Ce,S.createBlock=fn,S.createComment=Ra,S.createCommentVNode=Un,S.createElement=ra,S.createElementBlock=Mt,S.createElementVNode=Vt,S.createHydrationRenderer=Wa,S.createPropsRestProxy=yr,S.createRenderer=za,S.createSSRApp=Ee,S.createSlots=Q,S.createStaticVNode=Ga,S.createTextNode=ma,S.createTextVNode=qi,S.createVNode=qt,S.createVueApp=Ce,S.defineAsyncComponent=ai,S.defineComponent=Tr,S.defineEmits=Bs,S.defineExpose=hs,S.defineProps=Uo,S.getCurrentInstance=jn,S.getTransitionRawChildren=Ri,S.guardReactiveProps=ci,S.h=Ji,S.handleError=I,S.initCustomFormatter=na,S.inject=Zn,S.injectHook=mr,S.isMemoSame=ps,S.isRuntimeOnly=Wr,S.isVNode=Gt,S.mergeDefaults=wn,S.mergeProps=Er,S.nextTick=gr,S.onActivated=to,S.onBeforeActivate=Te,S.onBeforeDeactivate=st,S.onBeforeMount=er,S.onBeforeUnmount=cr,S.onBeforeUpdate=Gn,S.onDeactivated=En,S.onErrorCaptured=Ro,S.onMounted=tr,S.onRenderTracked=no,S.onRenderTriggered=ko,S.onServerPrefetch=go,S.onUnmounted=ho,S.onUpdated=nr,S.openBlock=ut,S.popScopeId=ua,S.provide=Nn,S.pushScopeId=Co,S.queuePostFlushCb=vi,S.registerRuntimeCompiler=fs,S.render=it,S.renderList=B,S.renderSlot=he,S.resolveComponent=ro,S.resolveDirective=Mi,S.resolveDynamicComponent=vo,S.resolveFilter=pa,S.resolveTransitionHooks=_i,S.setBlockTracking=Et,S.setDevtoolsHook=on,S.setTransitionHooks=Or,S.ssrContextKey=Eo,S.ssrUtils=$l,S.toHandlers=de,S.transformVNodeArgs=Qt,S.useAttrs=It,S.useCssModule=$o,S.useCssVars=Za,S.useSSRContext=ka,S.useSlots=Be,S.useTransitionState=Ar,S.vModelDynamic=O,S.vModelText=P,S.vShow=ot,S.version=dl,S.warn=Ve,S.watch=vr,S.watchEffect=Ni,S.watchPostEffect=Hi,S.watchSyncEffect=oi,S.withAsyncContext=Oi,S.withCtx=Jo,S.withDefaults=Ms,S.withDirectives=jr,S.withKeys=ze,S.withMemo=gs,S.withModifiers=G,S.withScopeId=Ui,S.wp=Ct,Object.defineProperty(S,"__esModule",{value:!0}),S}({},p,w,s);return N.__TYPE__="vue",N}function lv(f,s,p){let w=p.Vue,N=p.setTimeout,S=p.clearTimeout,h=p.setInterval,E=p.clearInterval,x=p.__uniConfig,Ve=p.__uniRoutes,Nt=p.VueShared,zt=p.UniShared;var Tt=function(z,J,dn){"use strict";var cn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bn=function(){let e=new Uint8Array(256);for(var t=0;t<cn.length;t++)e[cn.charCodeAt(t)]=t;return e}();function Jn(e){var t=new Uint8Array(e),n,r=t.length,o="";for(n=0;n<r;n+=3)o+=cn[t[n]>>2],o+=cn[(t[n]&3)<<4|t[n+1]>>4],o+=cn[(t[n+1]&15)<<2|t[n+2]>>6],o+=cn[t[n+2]&63];return r%3===2?o=o.substring(0,o.length-1)+"=":r%3===1&&(o=o.substring(0,o.length-2)+"=="),o}function gi(e){var t=e.length*.75,n=e.length,r,o=0,c,g,b,V;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var T=new ArrayBuffer(t),D=new Uint8Array(T);for(r=0;r<n;r+=4)c=bn[e.charCodeAt(r)],g=bn[e.charCodeAt(r+1)],b=bn[e.charCodeAt(r+2)],V=bn[e.charCodeAt(r+3)],D[o++]=c<<2|g>>4,D[o++]=(g&15)<<4|b>>2,D[o++]=(b&3)<<6|V&63;return T}let pi=["original","compressed"],qr=["album","camera"],gr=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function Sn(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function pr(e,t){return!z.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function Dr(e,t){console.warn(`${e}: ${t}`)}function Jr(e,t,n,r){r||(r=Dr);for(let o in n){let c=Pn(o,t[o],n[o],!z.hasOwn(t,o));z.isString(c)&&r(e,c)}}function vi(e,t,n,r){if(!n)return;if(!z.isArray(n))return Jr(e,t[0]||Object.create(null),n,r);let o=n.length,c=t.length;for(let g=0;g<o;g++){let b=n[g],V=Object.create(null);c>g&&(V[b.name]=t[g]),Jr(e,V,{[b.name]:b},r)}}function Pn(e,t,n,r){z.isPlainObject(n)||(n={type:n});let{type:o,required:c,validator:g}=n;if(c&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!c)){if(o!=null){let b=!1,V=z.isArray(o)?o:[o],T=[];for(let D=0;D<V.length&&!b;D++){let{valid:_e,expectedType:Se}=nt(t,V[D]);T.push(Se||""),b=_e}if(!b)return Ot(e,t,T)}if(g)return g(t)}}let We=z.makeMap("String,Number,Boolean,Function,Symbol");function nt(e,t){let n,r=Xt(t);if(We(r)){let o=typeof e;n=o===r.toLowerCase(),!n&&o==="object"&&(n=e instanceof t)}else r==="Object"?n=z.isObject(e):r==="Array"?n=z.isArray(e):n=e instanceof t||z.toRawType(e)===Xt(t);return{valid:n,expectedType:r}}function Ot(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(z.capitalize).join(", ")}`,o=n[0],c=z.toRawType(t),g=On(t,o),b=On(t,c);return n.length===1&&on(o)&&!or(o,c)&&(r+=` with value ${g}`),r+=`, got ${c} `,on(c)&&(r+=`with value ${b}.`),r}function Xt(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function On(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function on(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function or(...e){return e.some(t=>t.toLowerCase()==="boolean")}function Wn(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Cn=1,hn={};function wr(e,t,n,r=!1){return hn[e]={name:t,keepAlive:r,callback:n},e}function Kr(e,t,n){if(typeof e=="number"){let r=hn[e];if(r)return r.keepAlive||delete hn[e],r.callback(t,n)}return t}function Co(e){for(let t in hn)if(hn[t].name===e)return!0;return!1}function ua(e,t){for(let n in hn){let r=hn[n];r.callback===t&&r.name===e&&delete hn[n]}}function Ui(e){at.off("api."+e)}function Jo(e){at.on("api."+e,t=>{for(let n in hn){let r=hn[n];r.name===e&&r.callback(t)}})}function Ko(e,t){return wr(Cn++,e,t,!0)}let $i="success",ri="fail",Ao="complete";function Oo(e){let t={};for(let n in e){let r=e[n];z.isFunction(r)&&(t[n]=Wn(r),delete e[n])}return t}function To(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function Xi(e,t={},{beforeAll:n,beforeSuccess:r}={}){z.isPlainObject(t)||(t={});let{success:o,fail:c,complete:g}=Oo(t),b=z.isFunction(o),V=z.isFunction(c),T=z.isFunction(g),D=Cn++;return wr(D,e,_e=>{_e=_e||{},_e.errMsg=To(_e.errMsg,e),z.isFunction(n)&&n(_e),_e.errMsg===e+":ok"?(z.isFunction(r)&&r(_e,t),b&&o(_e)):V&&c(_e),T&&g(_e)}),D}let mi="success",Po="fail",uo="complete",kn={},Cr={};function Qi(e,t){return function(n){return e(n,t)||n}}function Kn(e,t,n){let r=!1;for(let o=0;o<e.length;o++){let c=e[o];if(r)r=Promise.resolve(Qi(c,n));else{let g=c(t,n);if(z.isPromise(g)&&(r=Promise.resolve(g)),g===!1)return{then(){},catch(){}}}}return r||{then(o){return o(t)},catch(){}}}function eo(e,t={}){return[mi,Po,uo].forEach(n=>{let r=e[n];if(!z.isArray(r))return;let o=t[n];t[n]=function(g){Kn(r,g,t).then(b=>z.isFunction(o)&&o(b)||b)}}),t}function Io(e,t){let n=[];z.isArray(kn.returnValue)&&n.push(...kn.returnValue);let r=Cr[e];return r&&z.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(o=>{t=o(t)||t}),t}function fo(e){let t=Object.create(null);Object.keys(kn).forEach(r=>{r!=="returnValue"&&(t[r]=kn[r].slice())});let n=Cr[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function ii(e,t,n,r){let o=fo(e);return o&&Object.keys(o).length?z.isArray(o.invoke)?Kn(o.invoke,n).then(g=>t(eo(fo(e),g),...r)):t(eo(o,n),...r):t(n,...r)}function ar(e){return!!(z.isPlainObject(e)&&[$i,ri,Ao].find(t=>z.isFunction(e[t])))}function kr(e){return e}function Nn(e,t){return(n={},...r)=>ar(n)?Io(e,ii(e,t,n,r)):Io(e,new Promise((o,c)=>{ii(e,t,z.extend(n,{success:o,fail:c}),r)}))}function Zn(e,t){let n=e[0];if(!t||!z.isPlainObject(t.formatArgs)&&z.isPlainObject(n))return;let r=t.formatArgs,o=Object.keys(r);for(let c=0;c<o.length;c++){let g=o[c],b=r[g];if(z.isFunction(b)){let V=b(e[0][g],n);if(z.isString(V))return V}else z.hasOwn(n,g)||(n[g]=b)}}function Ni(e,t,n){return Kr(e,z.extend(n||{},{errMsg:t+":ok"}))}function Hi(e,t,n,r){return Kr(e,z.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function oi(e,t,n,r){if(r&&r.beforeInvoke){let c=r.beforeInvoke(t);if(z.isString(c))return c}let o=Zn(t,r);if(o)return o}function Fr(e){if(!z.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function vr(e,t,n){return r=>{Fr(r);let o=oi(e,[r],void 0,n);if(o)throw new Error(o);let c=!Co(e);Ko(e,r),c&&(Jo(e),t())}}function ki(e,t,n){return r=>{Fr(r);let o=oi(e,[r],void 0,n);if(o)throw new Error(o);e=e.replace("off","on"),ua(e,r),Co(e)||(Ui(e),t())}}function No(e){return!e||z.isString(e)?e:e.stack?(console.error(e.message+J.LINEFEED+e.stack),e.message):e}function Vr(e,t,n,r){return o=>{let c=Xi(e,o,r),g=oi(e,[o],n,r);return g?Hi(c,e,g):t(o,{resolve:b=>Ni(c,e,b),reject:(b,V)=>Hi(c,e,No(b),V)})}}function Zr(e,t,n,r){return(...o)=>{let c=oi(e,o,n,r);if(c)throw new Error(c);return t.apply(null,o)}}function Ar(e,t,n,r){return Vr(e,t,n,r)}function gn(e,t,n){return vr(e,t,n)}function Xr(e,t,n){return ki(e,t,n)}function Ur(e,t,n,r){return Nn(e,Vr(e,t,void 0,r))}function Lt(e,t,n,r){return Zr(e,t,void 0,r)}function Oe(e,t,n,r){return Nn(e,Ar(e,t,void 0,r))}let _i="base64ToArrayBuffer",bi=[{name:"base64",type:String,required:!0}],Ei="arrayBufferToBase64",Or=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Ri=Lt(_i,e=>gi(e),bi),Tr=Lt(Ei,e=>Jn(e),Or);function Rr(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=s.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(s.os.name||"").toLowerCase(),pixelRatio:s.screen.scale,windowWidth:Math.round(e)}}function ai(e,t,n){e.$page.meta.isNVue?yi(e,t,n):Pr(e,t,n)}function Pr(e,t,n){at.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function yi(e,t,n){let r=un(t),o=new Array(r.length);ji(r,e.$el,o),$r(e.$requireNativePlugin("dom"),o,0,[],c=>{n(c)})}function un(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function ji(e,t,n){let r=t.children;if(!z.isArray(r))return!1;for(let o=0;o<r.length;o++){let c=r[o];if(c.attr){let g=e.indexOf(c.attr.id);if(g>=0&&(n[g]={id:e[g],ref:c.ref,dataset:J.parseNVueDataset(c.attr)},e.length===1))break}c.children&&ji(e,c,n)}}function $r(e,t,n,r,o){let c=t[n];e.getComponentRect(c.ref,g=>{g.size.id=c.id,g.size.dataset=c.dataset,r.push(g.size),n+=1,n<t.length?$r(e,t,n,r,o):o(r)})}function to(e,t){at.invokeViewMethod("setPageMeta",t,e.$page.id)}let En=e=>e!==null&&typeof e=="object",Hr=["{","}"];class sr{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=Hr){if(!n)return[t];let o=this._caches[t];return o||(o=mr(t,r),this._caches[t]=o),Qr(o,n)}}let Si=/^(?:\d)+/,xi=/^(?:\w)+/;function mr(e,[t,n]){let r=[],o=0,c="";for(;o<e.length;){let g=e[o++];if(g===t){c&&r.push({type:"text",value:c}),c="";let b="";for(g=e[o++];g!==void 0&&g!==n;)b+=g,g=e[o++];let V=g===n,T=Si.test(b)?"list":V&&xi.test(b)?"named":"unknown";r.push({value:b,type:T})}else c+=g}return c&&r.push({type:"text",value:c}),r}function Qr(e,t){let n=[],r=0,o=Array.isArray(t)?"list":En(t)?"named":"unknown";if(o==="unknown")return n;for(;r<e.length;){let c=e[r];switch(c.type){case"text":n.push(c.value);break;case"list":n.push(t[parseInt(c.value,10)]);break;case"named":o==="named"&&n.push(t[c.value]);break;case"unknown":break}r++}return n}let er="zh-Hans",tr="zh-Hant",Gn="en",nr="fr",cr="es",ho=Object.prototype.hasOwnProperty,go=(e,t)=>ho.call(e,t),ko=new sr;function no(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function Ro(e,t){return t.find(n=>e.indexOf(n)===0)}function jr(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return er;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?er:e.indexOf("-hant")>-1||no(e,["-tw","-hk","-mo","-cht"])?tr:er;let n=[Gn,nr,cr];t&&Object.keys(t).length>0&&(n=Object.keys(t));let r=Ro(e,n);if(r)return r}class xr{constructor({locale:t,fallbackLocale:n,messages:r,watcher:o,formater:c}){this.locale=Gn,this.fallbackLocale=Gn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=c||ko,this.messages=r||{},this.setLocale(t||Gn),o&&this.watchLocale(o)}setLocale(t){let n=this.locale;this.locale=jr(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let o=this.messages[t];o?r?Object.assign(o,n):Object.keys(n).forEach(c=>{go(o,c)||(o[c]=n[c])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let o=this.message;return typeof n=="string"?(n=jr(n,this.messages),n&&(o=this.messages[n])):r=n,go(o,t)?this.formater.interpolate(o[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function po(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function xo(){return typeof I!="undefined"&&I.getLocale?I.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():Gn}function ro(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=xo()),typeof n!="string"&&(n=typeof x!="undefined"&&x.fallbackLocale||Gn);let o=new xr({locale:e,fallbackLocale:n,messages:t,watcher:r}),c=(g,b)=>{if(typeof St!="function")c=function(V,T){return o.t(V,T)};else{let V=!1;c=function(T,D){let _e=St().$vm;return _e&&(_e.$locale,V||(V=!0,po(_e,o))),o.t(T,D)}}return c(g,b)};return{i18n:o,f(g,b,V){return o.f(g,b,V)},t(g,b){return c(g,b)},add(g,b,V=!0){return o.add(g,b,V)},watch(g){return o.watchLocale(g)},getLocale(){return o.getLocale()},setLocale(g){return o.setLocale(g)}}}function Bi(e,t){return e.indexOf(t[0])>-1}let vo=J.once(()=>typeof x!="undefined"&&x.locales&&!!Object.keys(x.locales).length),Mi;function zi(){let e=I.getLocale(),t=x.locales;return t[e]||t[x.fallbackLocale]||t.en||{}}function Zo(e){return Bi(e,J.I18N_JSON_DELIMITERS)?ae().f(e,zi(),J.I18N_JSON_DELIMITERS):e}function B(e,t){if(t.length===1){if(e){let r=b=>z.isString(b)&&Bi(b,J.I18N_JSON_DELIMITERS),o=t[0],c=[];if(z.isArray(e)&&(c=e.filter(b=>r(b[o]))).length)return c;let g=e[t[0]];if(r(g))return e}return}let n=t.shift();return B(e&&e[n],t)}function Q(e,t){return t.map(n=>he(e,n))}function he(e,t){let n=B(e,t);if(!n)return!1;let r=t[t.length-1];if(z.isArray(n))n.forEach(o=>he(o,[r]));else{let o=n[r];Object.defineProperty(n,r,{get(){return Zo(o)},set(c){o=c}})}return!0}function ae(){if(!Mi){let e;if(typeof St=="function"?e=f.requireModule("plus").getLanguage():e=s.webview.currentWebview().getStyle().locale,Mi=ro(e),vo()){let t=Object.keys(x.locales||{});t.length&&t.forEach(n=>Mi.add(n,x.locales[n])),Mi.setLocale(e)}}return Mi}function de(e,t,n){return t.reduce((r,o,c)=>(r[e+o]=n[c],r),{})}let mt=J.once(()=>{let e="uni.app.",t=["quit"];ae().add(Gn,de(e,t,["Press back button again to exit"]),!1),ae().add(cr,de(e,t,["Pulse otra vez para salir"]),!1),ae().add(nr,de(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),ae().add(er,de(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),ae().add(tr,de(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),kt=J.once(()=>{let e="uni.showActionSheet.",t=["cancel"];ae().add(Gn,de(e,t,["Cancel"]),!1),ae().add(cr,de(e,t,["Cancelar"]),!1),ae().add(nr,de(e,t,["Annuler"]),!1),ae().add(er,de(e,t,["\u53D6\u6D88"]),!1),ae().add(tr,de(e,t,["\u53D6\u6D88"]),!1)}),X=J.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];ae().add(Gn,de(e,t,["Cancel","OK"]),!1),ae().add(cr,de(e,t,["Cancelar","OK"]),!1),ae().add(nr,de(e,t,["Annuler","OK"]),!1),ae().add(er,de(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),ae().add(tr,de(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),K=J.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];ae().add(Gn,de(e,t,["Cancel","Album","Camera"]),!1),ae().add(cr,de(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),ae().add(nr,de(e,t,["Annuler","Album","Cam\xE9ra"]),!1),ae().add(er,de(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),ae().add(tr,de(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),ie=J.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];ae().add(Gn,de(e,t,["Cancel","Album","Camera"]),!1),ae().add(cr,de(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),ae().add(nr,de(e,t,["Annuler","Album","Cam\xE9ra"]),!1),ae().add(er,de(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),ae().add(tr,de(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Ne=J.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];ae().add(Gn,de(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),ae().add(cr,de(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),ae().add(nr,de(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),ae().add(er,de(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),ae().add(tr,de(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),lt=J.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];ae().add(Gn,de(e,t,["Content copied","Copy failed, please copy manually"]),!1),ae().add(cr,de(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),ae().add(nr,de(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),ae().add(er,de(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),ae().add(tr,de(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),Zt=J.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];ae().add(Gn,de(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),ae().add(cr,de(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),ae().add(nr,de(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),ae().add(er,de(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),ae().add(tr,de(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),xn=J.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent","waitingContent"];ae().add(Gn,de(e,t,["Fingerprint recognition","Unrecognizable"]),!1),ae().add(cr,de(e,t,["Reconocimiento de huellas dactilares","Irreconocible"]),!1),ae().add(nr,de(e,t,["Reconnaissance de l'empreinte digitale","M\xE9connaissable"]),!1),ae().add(er,de(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D...","\u65E0\u6CD5\u8BC6\u522B"]),!1),ae().add(tr,de(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D...","\u7121\u6CD5\u8B58\u5225"]),!1)});function Ln(e){if(vo())return Q(e,[["titleText"],["searchInput","placeholder"],["buttons","text"]])}function _r(e){if(vo()){let t="caption";return Q(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function Br(e){let t=new J.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,o=!1){t[o?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,o){t.emit(`${e}.${n}`,r,o)}}}let mo="invokeViewApi",Bo="invokeServiceApi";function Mo(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function Dn(e,t=!1){if(t)return Yn(e);if(z.isString(e)){let n=parseInt(e)||0;return Mo(e)?I.upx2px(n):n}return e}function Yn(e){return Mo(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>I.upx2px(parseFloat(n))+"px"):e}function Fn(e){let t=J.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function wi(){let e=In(),t=e.length;if(t)return e[t-1]}function is(){let e=wi();if(e)return e.$page.meta}function fa(){let e=is();return e?e.id:-1}function br(){let e=wi();if(e)return e.$vm}let Pa=["navigationBar","pullToRefresh"];function Ua(){return JSON.parse(JSON.stringify(x.globalStyle||{}))}function $a(e,t){let n=Ua(),r=z.extend({id:t},n,e);Pa.forEach(c=>{r[c]=z.extend({},n[c],e[c])});let{navigationBar:o}=r;return o.titleText&&o.titleImage&&(o.titleText=""),r}function Ha(e){return JSON.parse(Dn(JSON.stringify(e),!0))}function ja(e){return e.offset&&(e.offset=Dn(e.offset)),e.height&&(e.height=Dn(e.height)),e.range&&(e.range=Dn(e.range)),e}function da(e,t,n,r,o,c){let{id:g,route:b}=r,V=J.normalizeStyles(r.navigationBar,x.themeConfig,c).titleColor;return{id:g,path:J.addLeadingSlash(b),route:b,fullPath:t,options:n,meta:r,openType:e,eventChannel:o,statusBarStyle:V==="#ffffff"?"light":"dark"}}function Ia(e,t,n){let r=e.$[t];!z.isArray(r)||n.__weh&&z.remove(r,n.__weh)}function Vn(e,t,n){if(z.isString(e))n=t,t=e,e=br();else if(typeof e=="number"){let o=In().find(c=>c.$page.id===e);o?e=o.$vm:e=br()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&J.invokeArrayFns(r,n)}function Lo(e){if(e.indexOf("/")===0)return e;let t="",n=In();return n.length&&(t=n[n.length-1].$page.route),Xo(t,e)}function Xo(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return Xo(e,t.slice(2));let n=t.split("/"),r=n.length,o=0;for(;o<r&&n[o]==="..";o++);n.splice(0,o),t=n.join("/");let c=e.length>0?e.split("/"):[];return c.splice(c.length-o-1,o+1),J.addLeadingSlash(c.concat(n).join("/"))}function Wi(e,t=!1){return t?Ve.find(n=>n.path===e||n.alias===e):Ve.find(n=>n.path===e)}function os(e){let t=Wi(e);if(t)return t.meta}function as(e,t,n){let r=Wi(J.addLeadingSlash(t));if(r){let{meta:c}=r;delete c.tabBarIndex,c.isQuit=c.isTabBar=!1}let o=Wi(J.addLeadingSlash(n));if(o){let{meta:c}=o;c.tabBarIndex=e,c.isQuit=c.isTabBar=!0;let g=x.tabBar;g&&g.list&&g.list[e]&&(g.list[e].pagePath=J.removeLeadingSlash(n))}}let Do,ss,io;function si(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Ci(){return Do.webview.currentWebview().id}let Gi,li,ur={};function lr(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=ur[n];r&&r(t),t.keep||delete ur[n]}function za(e,t){si()==="v8"?io?(Gi&&Gi.close(),Gi=new io(Ci()),Gi.onmessage=lr):li||(li=ss.requireModule("globalEvent"),li.addEventListener("plusMessage",lr)):window.__plusMessage=lr,ur[e]=t}class Wa{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;io?new io(r).postMessage(n):Do.webview.postMessageToUniNView&&Do.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function Yi({context:e={},url:t,data:n={},style:r={},onMessage:o,onClose:c}){let g=x.darkmode;Do=e.plus||s,ss=e.weex||(typeof f=="object"?f:null),io=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let b={autoBackButton:!0,titleSize:"17px"},V=`page${Date.now()}`;r=z.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=z.extend(b,r.titleNView));let T={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:Do.screen.resolutionWidth}};r=z.extend(T,r);let D=Do.webview.create("",V,r,{extras:{from:Ci(),runtime:si(),data:z.extend({},n,{darkmode:g}),useGlobalEvent:!io}});return D.addEventListener("close",c),za(V,_e=>{z.isFunction(o)&&o(_e.data),_e.keep||D.close("auto")}),D.show(r.animationType,r.animationDuration),new Wa(D)}let oo=(e,t)=>at.emit("api."+e,t),ao=1;function ls(e){return(e||fa())+"."+mo}let ha=(e,t,n,r)=>{let{subscribe:o,publishHandler:c}=at,g=r?ao++:0;r&&o(mo+"."+g,r,!0),c(ls(n),{id:g,name:e,args:t},n)},Fo=(e,t,n,r)=>{let{subscribe:o,unsubscribe:c,publishHandler:g}=at,b=ao++,V=mo+"."+b;return o(V,n),g(ls(r),{id:b,name:e,args:t},r),()=>{c(V)}},ga=Object.create(null);function m(){at.subscribe(Bo,$)}function R(e,t){ga[e]||(ga[e]=t)}function $({id:e,name:t,args:n},r){let o=g=>{e&&at.publishHandler(Bo+"."+e,g,r)},c=ga[t];c?c(n,o):o({})}let U=z.extend(Br("view"),{invokeOnCallback:oo,invokeViewMethod:ha,invokeViewMethodKeepAlive:Fo});function Z(){let{on:e}=at;e(J.ON_RESIZE,q),e(J.ON_APP_ENTER_FOREGROUND,te),e(J.ON_APP_ENTER_BACKGROUND,ce)}function q(e){Vn(wi(),J.ON_RESIZE,e),at.invokeOnCallback("onWindowResize",e)}function te(e){let t=wi();Vn(St(),J.ON_SHOW,e),Vn(t,J.ON_SHOW)}function ce(){Vn(St(),J.ON_HIDE),Vn(wi(),J.ON_HIDE)}let pe=[J.ON_PAGE_SCROLL,J.ON_REACH_BOTTOM];function Ie(){pe.forEach(e=>at.subscribe(e,fe(e)))}function fe(e){return(t,n)=>{Vn(parseInt(n),e,t)}}function we(){Z(),Ie()}function ut(e){e.$vm=e,e.$mpType="app";let t=dn.ref(ae().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function pt(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function $t(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function Et(e,t){let n=e.$options||{};n.globalData=z.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function je(e){if(e.indexOf("//")===0)return"https:"+e;if(J.SCHEME_RE.test(e)||J.DATA_RE.test(e))return e;if(fn(e))return"file://"+Mt(e);let t="file://"+Mt("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+Xo(J.addLeadingSlash(__id__),e);{let n=wi();if(n)return t+Xo(J.addLeadingSlash(n.route),e)}}return e}let Mt=J.cacheStringFunction(e=>s.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function fn(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let Gt="success",ht="fail",Bn=[Gt,ht,"complete"];function Yt(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,o]=Qo(n,r);return Object.keys(o).length?e[t](ci(t,o)):e[t]()}function Ht(e,t,n,r){if(!e)return;let[o,c]=Qo(n,r);return Object.keys(c).length?e[t](o,ci(t,c)):e[t](o)}function Vt(e,t){let n=qt(e,t.$el);return n||console.error("Can not find `"+e+"`")}function qt(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,o=n.length;r<o;r++){let c=qt(e,n[r]);if(c)return c}}function Qo(e={},t){let n=Object.create(null),r=function(c){let g=e[c];z.isFunction(g)&&(n[c]=g,delete e[c])};return Bn.forEach(r),t&&t.forEach(r),[e,n]}function ci(e,t){return function(r){let o=r.type;delete r.type;let c=t[o];if(o===Gt?r.errMsg=`${e}:ok`:o===ht&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,z.isFunction(c)&&c(r),o===Gt||o===ht){let g=t.complete;z.isFunction(g)&&g(r)}}}let ei;function qi(){return ei}function Ga(e){let t=e.$;Object.defineProperty(t.ctx,"$children",{get(){return Hn().map(r=>r.$vm)}});let n=t.appContext;ei=z.extend(n.app,{mountPage(r,o,c){let g=dn.createVNode(r,o);g.appContext=n,g.__page_container__=c,dn.render(g,c);let b=g.component.proxy;return b.__page_container__=c,b},unmountPage:r=>{let{__page_container__:o}=r;o&&(o.isUnmounted=!0,dn.render(null,o))}})}let Un=[];function $n(e){if(!e.$page.meta.isNVue)return Un.push(e);let n=Un.findIndex(r=>r.$page.id===e.$page.id);n>-1?Un.splice(n,1,e):Un.push(e)}function Ir(e){return Un.find(t=>t.$page.id===e)}function Hn(){return Un}function Er(){let e=[];return Un.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function zr(){let e=wi();!e||ea(e)}function ea(e){let t=Un.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||qi().unmountPage(e),Un.splice(t,1))}let cs={play(e){return Yt(e,"play")},pause(e){return Yt(e,"pause")},seek(e,t){return Ht(e,"seek",t.position)},stop(e){return Yt(e,"stop")},sendDanmu(e,t){return Ht(e,"sendDanmu",t)},playbackRate(e,t){return Ht(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Ht(e,"requestFullScreen",t)},exitFullScreen(e){return Yt(e,"exitFullScreen")},showStatusBar(e){return Yt(e,"showStatusBar")},hideStatusBar(e){return Yt(e,"hideStatusBar")}};function tn(e,t,n,r){let o=Ir(t);if(o==null?void 0:o.$page.meta.isNVue){let c=o.$vm;return cs[n](Vt(e,c),r)}at.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let mn={getCenterLocation(e,t){return Yt(e,"getCenterLocation",t)},moveToLocation(e,t){return Ht(e,"moveToLocation",t)},translateMarker(e,t){return Ht(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Ht(e,"includePoints",t)},getRegion(e,t){return Yt(e,"getRegion",t)},getScale(e,t){return Yt(e,"getScale",t)},addCustomLayer(e,t){return Ht(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Ht(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Ht(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Ht(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Ht(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Ht(e,"initMarkerCluster",t)},addMarkers(e,t){return Ht(e,"addMarkers",t)},removeMarkers(e,t){return Ht(e,"removeMarkers",t)},moveAlong(e,t){return Ht(e,"moveAlong",t)},setLocMarkerIcon(e,t){return Ht(e,"setLocMarkerIcon",t)},openMapApp(e,t){return Ht(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function jn(e,t,n,r,o){let c=Ir(t);if(c==null?void 0:c.$page.meta.isNVue){let g=c.$vm;return mn[n](Vt(e,g),r)}at.invokeViewMethod("map."+e,{type:n,data:r},t,o)}function qn(e){return`IntersectionObserver.${e}`}function Ai({reqId:e,component:t,options:n,callback:r},o){let c=qn(e);at.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:c},o),at.subscribe(c,r)}function us({reqId:e,component:t},n){at.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),at.unsubscribe(qn(e))}function Ya(e){return`MediaQueryObserver.${e}`}function Na({reqId:e,component:t,options:n,callback:r},o){let c=Ya(e);at.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:c},o),at.subscribe(c,r)}function ta({reqId:e,component:t},n){at.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),at.unsubscribe(Ya(e))}let so=200,qa=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],fs="_doc/uniapp_temp",Wr=`${fs}_${Date.now()}`;function Ja(e){let t=e.split("/");return t[t.length-1]}function Ka(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let Vo="backbutton";function Li(){I.navigateBack({from:"backbutton",success(){}})}let _o=$t(),bo=$t();function ds(){return z.extend({},bo)}function Uo(){return z.extend({},_o)}function Bs({path:e,query:t,referrerInfo:n}){z.extend(_o,{path:e,query:t?J.parseQuery(t):{},referrerInfo:n||{}})}function hs({path:e,query:t,referrerInfo:n}){return z.extend(bo,{path:e,query:t?J.parseQuery(t):{},referrerInfo:n||{},channel:s.runtime.channel,launcher:s.runtime.launcher}),z.extend(_o,bo),z.extend({},bo)}function Ms(){let e=f.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:o,fromAppid:c}=e.getRedirectInfo()||{},g={appId:c,extraData:{}};return r&&(g.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:g,userAction:o}}}var Be={};(function(e){var t=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function n(c,g){return Object.prototype.hasOwnProperty.call(c,g)}e.assign=function(c){for(var g=Array.prototype.slice.call(arguments,1);g.length;){var b=g.shift();if(!!b){if(typeof b!="object")throw new TypeError(b+"must be non-object");for(var V in b)n(b,V)&&(c[V]=b[V])}}return c},e.shrinkBuf=function(c,g){return c.length===g?c:c.subarray?c.subarray(0,g):(c.length=g,c)};var r={arraySet:function(c,g,b,V,T){if(g.subarray&&c.subarray){c.set(g.subarray(b,b+V),T);return}for(var D=0;D<V;D++)c[T+D]=g[b+D]},flattenChunks:function(c){var g,b,V,T,D,_e;for(V=0,g=0,b=c.length;g<b;g++)V+=c[g].length;for(_e=new Uint8Array(V),T=0,g=0,b=c.length;g<b;g++)D=c[g],_e.set(D,T),T+=D.length;return _e}},o={arraySet:function(c,g,b,V,T){for(var D=0;D<V;D++)c[T+D]=g[b+D]},flattenChunks:function(c){return[].concat.apply([],c)}};e.setTyped=function(c){c?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,r)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,o))},e.setTyped(t)})(Be);var It={},Pt={},wn={},yr=Be,Oi=4,Ji=0,Eo=1,ka=2;function na(e){for(var t=e.length;--t>=0;)e[t]=0}var gs=0,ps=1,dl=2,Ul=3,$l=258,pa=29,va=256,ra=va+1+pa,ma=30,Ra=19,vs=2*ra+1,ia=15,Ls=16,Hl=7,ms=256,Ds=16,Fs=17,Vs=18,_s=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],xa=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],hl=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Us=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],jl=512,$o=new Array((ra+2)*2);na($o);var Za=new Array(ma*2);na(Za);var _a=new Array(jl);na(_a);var Ba=new Array($l-Ul+1);na(Ba);var yo=new Array(pa);na(yo);var oa=new Array(ma);na(oa);function Xa(e,t,n,r,o){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=o,this.has_stree=e&&e.length}var $s,gl,Ho;function bs(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function Hs(e){return e<256?_a[e]:_a[256+(e>>>7)]}function Qa(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function ti(e,t,n){e.bi_valid>Ls-n?(e.bi_buf|=t<<e.bi_valid&65535,Qa(e,e.bi_buf),e.bi_buf=t>>Ls-e.bi_valid,e.bi_valid+=n-Ls):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function Mr(e,t,n){ti(e,n[t*2],n[t*2+1])}function aa(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function pl(e){e.bi_valid===16?(Qa(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function zl(e,t){var n=t.dyn_tree,r=t.max_code,o=t.stat_desc.static_tree,c=t.stat_desc.has_stree,g=t.stat_desc.extra_bits,b=t.stat_desc.extra_base,V=t.stat_desc.max_length,T,D,_e,Se,Pe,dt,gt=0;for(Se=0;Se<=ia;Se++)e.bl_count[Se]=0;for(n[e.heap[e.heap_max]*2+1]=0,T=e.heap_max+1;T<vs;T++)D=e.heap[T],Se=n[n[D*2+1]*2+1]+1,Se>V&&(Se=V,gt++),n[D*2+1]=Se,!(D>r)&&(e.bl_count[Se]++,Pe=0,D>=b&&(Pe=g[D-b]),dt=n[D*2],e.opt_len+=dt*(Se+Pe),c&&(e.static_len+=dt*(o[D*2+1]+Pe)));if(gt!==0){do{for(Se=V-1;e.bl_count[Se]===0;)Se--;e.bl_count[Se]--,e.bl_count[Se+1]+=2,e.bl_count[V]--,gt-=2}while(gt>0);for(Se=V;Se!==0;Se--)for(D=e.bl_count[Se];D!==0;)_e=e.heap[--T],!(_e>r)&&(n[_e*2+1]!==Se&&(e.opt_len+=(Se-n[_e*2+1])*n[_e*2],n[_e*2+1]=Se),D--)}}function js(e,t,n){var r=new Array(ia+1),o=0,c,g;for(c=1;c<=ia;c++)r[c]=o=o+n[c-1]<<1;for(g=0;g<=t;g++){var b=e[g*2+1];b!==0&&(e[g*2]=aa(r[b]++,b))}}function Es(){var e,t,n,r,o,c=new Array(ia+1);for(n=0,r=0;r<pa-1;r++)for(yo[r]=n,e=0;e<1<<_s[r];e++)Ba[n++]=r;for(Ba[n-1]=r,o=0,r=0;r<16;r++)for(oa[r]=o,e=0;e<1<<xa[r];e++)_a[o++]=r;for(o>>=7;r<ma;r++)for(oa[r]=o<<7,e=0;e<1<<xa[r]-7;e++)_a[256+o++]=r;for(t=0;t<=ia;t++)c[t]=0;for(e=0;e<=143;)$o[e*2+1]=8,e++,c[8]++;for(;e<=255;)$o[e*2+1]=9,e++,c[9]++;for(;e<=279;)$o[e*2+1]=7,e++,c[7]++;for(;e<=287;)$o[e*2+1]=8,e++,c[8]++;for(js($o,ra+1,c),e=0;e<ma;e++)Za[e*2+1]=5,Za[e*2]=aa(e,5);$s=new Xa($o,_s,va+1,ra,ia),gl=new Xa(Za,xa,0,ma,ia),Ho=new Xa(new Array(0),hl,0,Ra,Hl)}function zs(e){var t;for(t=0;t<ra;t++)e.dyn_ltree[t*2]=0;for(t=0;t<ma;t++)e.dyn_dtree[t*2]=0;for(t=0;t<Ra;t++)e.bl_tree[t*2]=0;e.dyn_ltree[ms*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function Ws(e){e.bi_valid>8?Qa(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function vl(e,t,n,r){Ws(e),r&&(Qa(e,n),Qa(e,~n)),yr.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function Gs(e,t,n,r){var o=t*2,c=n*2;return e[o]<e[c]||e[o]===e[c]&&r[t]<=r[n]}function ys(e,t,n){for(var r=e.heap[n],o=n<<1;o<=e.heap_len&&(o<e.heap_len&&Gs(t,e.heap[o+1],e.heap[o],e.depth)&&o++,!Gs(t,r,e.heap[o],e.depth));)e.heap[n]=e.heap[o],n=o,o<<=1;e.heap[n]=r}function Ss(e,t,n){var r,o,c=0,g,b;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+c*2]<<8|e.pending_buf[e.d_buf+c*2+1],o=e.pending_buf[e.l_buf+c],c++,r===0?Mr(e,o,t):(g=Ba[o],Mr(e,g+va+1,t),b=_s[g],b!==0&&(o-=yo[g],ti(e,o,b)),r--,g=Hs(r),Mr(e,g,n),b=xa[g],b!==0&&(r-=oa[g],ti(e,r,b)));while(c<e.last_lit);Mr(e,ms,t)}function ws(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,o=t.stat_desc.has_stree,c=t.stat_desc.elems,g,b,V=-1,T;for(e.heap_len=0,e.heap_max=vs,g=0;g<c;g++)n[g*2]!==0?(e.heap[++e.heap_len]=V=g,e.depth[g]=0):n[g*2+1]=0;for(;e.heap_len<2;)T=e.heap[++e.heap_len]=V<2?++V:0,n[T*2]=1,e.depth[T]=0,e.opt_len--,o&&(e.static_len-=r[T*2+1]);for(t.max_code=V,g=e.heap_len>>1;g>=1;g--)ys(e,n,g);T=c;do g=e.heap[1],e.heap[1]=e.heap[e.heap_len--],ys(e,n,1),b=e.heap[1],e.heap[--e.heap_max]=g,e.heap[--e.heap_max]=b,n[T*2]=n[g*2]+n[b*2],e.depth[T]=(e.depth[g]>=e.depth[b]?e.depth[g]:e.depth[b])+1,n[g*2+1]=n[b*2+1]=T,e.heap[1]=T++,ys(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],zl(e,t),js(n,V,e.bl_count)}function ml(e,t,n){var r,o=-1,c,g=t[0*2+1],b=0,V=7,T=4;for(g===0&&(V=138,T=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)c=g,g=t[(r+1)*2+1],!(++b<V&&c===g)&&(b<T?e.bl_tree[c*2]+=b:c!==0?(c!==o&&e.bl_tree[c*2]++,e.bl_tree[Ds*2]++):b<=10?e.bl_tree[Fs*2]++:e.bl_tree[Vs*2]++,b=0,o=c,g===0?(V=138,T=3):c===g?(V=6,T=3):(V=7,T=4))}function _l(e,t,n){var r,o=-1,c,g=t[0*2+1],b=0,V=7,T=4;for(g===0&&(V=138,T=3),r=0;r<=n;r++)if(c=g,g=t[(r+1)*2+1],!(++b<V&&c===g)){if(b<T)do Mr(e,c,e.bl_tree);while(--b!==0);else c!==0?(c!==o&&(Mr(e,c,e.bl_tree),b--),Mr(e,Ds,e.bl_tree),ti(e,b-3,2)):b<=10?(Mr(e,Fs,e.bl_tree),ti(e,b-3,3)):(Mr(e,Vs,e.bl_tree),ti(e,b-11,7));b=0,o=c,g===0?(V=138,T=3):c===g?(V=6,T=3):(V=7,T=4)}}function a(e){var t;for(ml(e,e.dyn_ltree,e.l_desc.max_code),ml(e,e.dyn_dtree,e.d_desc.max_code),ws(e,e.bl_desc),t=Ra-1;t>=3&&e.bl_tree[Us[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function u(e,t,n,r){var o;for(ti(e,t-257,5),ti(e,n-1,5),ti(e,r-4,4),o=0;o<r;o++)ti(e,e.bl_tree[Us[o]*2+1],3);_l(e,e.dyn_ltree,t-1),_l(e,e.dyn_dtree,n-1)}function v(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return Ji;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return Eo;for(n=32;n<va;n++)if(e.dyn_ltree[n*2]!==0)return Eo;return Ji}var y=!1;function P(e){y||(Es(),y=!0),e.l_desc=new bs(e.dyn_ltree,$s),e.d_desc=new bs(e.dyn_dtree,gl),e.bl_desc=new bs(e.bl_tree,Ho),e.bi_buf=0,e.bi_valid=0,zs(e)}function O(e,t,n,r){ti(e,(gs<<1)+(r?1:0),3),vl(e,t,n,!0)}function F(e){ti(e,ps<<1,3),Mr(e,ms,$o),pl(e)}function W(e,t,n,r){var o,c,g=0;e.level>0?(e.strm.data_type===ka&&(e.strm.data_type=v(e)),ws(e,e.l_desc),ws(e,e.d_desc),g=a(e),o=e.opt_len+3+7>>>3,c=e.static_len+3+7>>>3,c<=o&&(o=c)):o=c=n+5,n+4<=o&&t!==-1?O(e,t,n,r):e.strategy===Oi||c===o?(ti(e,(ps<<1)+(r?1:0),3),Ss(e,$o,Za)):(ti(e,(dl<<1)+(r?1:0),3),u(e,e.l_desc.max_code+1,e.d_desc.max_code+1,g+1),Ss(e,e.dyn_ltree,e.dyn_dtree)),zs(e),r&&Ws(e)}function G(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(Ba[n]+va+1)*2]++,e.dyn_dtree[Hs(t)*2]++),e.last_lit===e.lit_bufsize-1}wn._tr_init=P,wn._tr_stored_block=O,wn._tr_flush_block=W,wn._tr_tally=G,wn._tr_align=F;function le(e,t,n,r){for(var o=e&65535|0,c=e>>>16&65535|0,g=0;n!==0;){g=n>2e3?2e3:n,n-=g;do o=o+t[r++]|0,c=c+o|0;while(--g);o%=65521,c%=65521}return o|c<<16|0}var ze=le;function ot(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var ge=ot();function Ge(e,t,n,r){var o=ge,c=r+n;e^=-1;for(var g=r;g<c;g++)e=e>>>8^o[(e^t[g])&255];return e^-1}var Xe=Ge,wt={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},it=Be,Ce=wn,Ee=ze,Te=Xe,st=wt,ke=0,Ct=1,i=3,l=4,d=5,_=0,A=1,C=-2,k=-3,L=-5,H=-1,ne=1,ve=2,Me=3,ue=4,Re=0,Ye=2,ft=8,Qe=9,xe=15,me=8,ye=29,Fe=256,Ae=Fe+1+ye,bt=30,At=19,Je=2*Ae+1,Rt=15,M=3,j=258,se=j+M+1,re=32,oe=42,Ue=69,rt=73,qe=91,Ke=103,$e=113,Ut=666,vt=1,xt=2,Bt=3,Mn=4,Rn=3;function pn(e,t){return e.msg=st[t],t}function _n(e){return(e<<1)-(e>4?9:0)}function fr(e){for(var t=e.length;--t>=0;)e[t]=0}function ni(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(it.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function Jt(e,t){Ce._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,ni(e.strm)}function nn(e,t){e.pending_buf[e.pending++]=t}function lo(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function Y(e,t,n,r){var o=e.avail_in;return o>r&&(o=r),o===0?0:(e.avail_in-=o,it.arraySet(t,e.input,e.next_in,o,n),e.state.wrap===1?e.adler=Ee(e.adler,t,o,n):e.state.wrap===2&&(e.adler=Te(e.adler,t,o,n)),e.next_in+=o,e.total_in+=o,o)}function ee(e,t){var n=e.max_chain_length,r=e.strstart,o,c,g=e.prev_length,b=e.nice_match,V=e.strstart>e.w_size-se?e.strstart-(e.w_size-se):0,T=e.window,D=e.w_mask,_e=e.prev,Se=e.strstart+j,Pe=T[r+g-1],dt=T[r+g];e.prev_length>=e.good_match&&(n>>=2),b>e.lookahead&&(b=e.lookahead);do if(o=t,!(T[o+g]!==dt||T[o+g-1]!==Pe||T[o]!==T[r]||T[++o]!==T[r+1])){r+=2,o++;do;while(T[++r]===T[++o]&&T[++r]===T[++o]&&T[++r]===T[++o]&&T[++r]===T[++o]&&T[++r]===T[++o]&&T[++r]===T[++o]&&T[++r]===T[++o]&&T[++r]===T[++o]&&r<Se);if(c=j-(Se-r),r=Se-j,c>g){if(e.match_start=t,g=c,c>=b)break;Pe=T[r+g-1],dt=T[r+g]}}while((t=_e[t&D])>V&&--n!==0);return g<=e.lookahead?g:e.lookahead}function be(e){var t=e.w_size,n,r,o,c,g;do{if(c=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-se)){it.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do o=e.head[--n],e.head[n]=o>=t?o-t:0;while(--r);r=t,n=r;do o=e.prev[--n],e.prev[n]=o>=t?o-t:0;while(--r);c+=t}if(e.strm.avail_in===0)break;if(r=Y(e.strm,e.window,e.strstart+e.lookahead,c),e.lookahead+=r,e.lookahead+e.insert>=M)for(g=e.strstart-e.insert,e.ins_h=e.window[g],e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+M-1])&e.hash_mask,e.prev[g&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=g,g++,e.insert--,!(e.lookahead+e.insert<M)););}while(e.lookahead<se&&e.strm.avail_in!==0)}function Le(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(be(e),e.lookahead===0&&t===ke)return vt;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,Jt(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-se&&(Jt(e,!1),e.strm.avail_out===0))return vt}return e.insert=0,t===l?(Jt(e,!0),e.strm.avail_out===0?Bt:Mn):(e.strstart>e.block_start&&(Jt(e,!1),e.strm.avail_out===0),vt)}function De(e,t){for(var n,r;;){if(e.lookahead<se){if(be(e),e.lookahead<se&&t===ke)return vt;if(e.lookahead===0)break}if(n=0,e.lookahead>=M&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+M-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-se&&(e.match_length=ee(e,n)),e.match_length>=M)if(r=Ce._tr_tally(e,e.strstart-e.match_start,e.match_length-M),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=M){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+M-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=Ce._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Jt(e,!1),e.strm.avail_out===0))return vt}return e.insert=e.strstart<M-1?e.strstart:M-1,t===l?(Jt(e,!0),e.strm.avail_out===0?Bt:Mn):e.last_lit&&(Jt(e,!1),e.strm.avail_out===0)?vt:xt}function Ze(e,t){for(var n,r,o;;){if(e.lookahead<se){if(be(e),e.lookahead<se&&t===ke)return vt;if(e.lookahead===0)break}if(n=0,e.lookahead>=M&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+M-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=M-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-se&&(e.match_length=ee(e,n),e.match_length<=5&&(e.strategy===ne||e.match_length===M&&e.strstart-e.match_start>4096)&&(e.match_length=M-1)),e.prev_length>=M&&e.match_length<=e.prev_length){o=e.strstart+e.lookahead-M,r=Ce._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-M),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=o&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+M-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=M-1,e.strstart++,r&&(Jt(e,!1),e.strm.avail_out===0))return vt}else if(e.match_available){if(r=Ce._tr_tally(e,0,e.window[e.strstart-1]),r&&Jt(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return vt}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=Ce._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<M-1?e.strstart:M-1,t===l?(Jt(e,!0),e.strm.avail_out===0?Bt:Mn):e.last_lit&&(Jt(e,!1),e.strm.avail_out===0)?vt:xt}function _t(e,t){for(var n,r,o,c,g=e.window;;){if(e.lookahead<=j){if(be(e),e.lookahead<=j&&t===ke)return vt;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=M&&e.strstart>0&&(o=e.strstart-1,r=g[o],r===g[++o]&&r===g[++o]&&r===g[++o])){c=e.strstart+j;do;while(r===g[++o]&&r===g[++o]&&r===g[++o]&&r===g[++o]&&r===g[++o]&&r===g[++o]&&r===g[++o]&&r===g[++o]&&o<c);e.match_length=j-(c-o),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=M?(n=Ce._tr_tally(e,1,e.match_length-M),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=Ce._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Jt(e,!1),e.strm.avail_out===0))return vt}return e.insert=0,t===l?(Jt(e,!0),e.strm.avail_out===0?Bt:Mn):e.last_lit&&(Jt(e,!1),e.strm.avail_out===0)?vt:xt}function et(e,t){for(var n;;){if(e.lookahead===0&&(be(e),e.lookahead===0)){if(t===ke)return vt;break}if(e.match_length=0,n=Ce._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Jt(e,!1),e.strm.avail_out===0))return vt}return e.insert=0,t===l?(Jt(e,!0),e.strm.avail_out===0?Bt:Mn):e.last_lit&&(Jt(e,!1),e.strm.avail_out===0)?vt:xt}function tt(e,t,n,r,o){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=o}var He;He=[new tt(0,0,0,0,Le),new tt(4,4,8,4,De),new tt(4,5,16,8,De),new tt(4,6,32,32,De),new tt(4,4,16,16,Ze),new tt(8,16,32,32,Ze),new tt(8,16,128,128,Ze),new tt(8,32,128,256,Ze),new tt(32,128,258,1024,Ze),new tt(32,258,258,4096,Ze)];function jt(e){e.window_size=2*e.w_size,fr(e.head),e.max_lazy_match=He[e.level].max_lazy,e.good_match=He[e.level].good_length,e.nice_match=He[e.level].nice_length,e.max_chain_length=He[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=M-1,e.match_available=0,e.ins_h=0}function Dt(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ft,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new it.Buf16(Je*2),this.dyn_dtree=new it.Buf16((2*bt+1)*2),this.bl_tree=new it.Buf16((2*At+1)*2),fr(this.dyn_ltree),fr(this.dyn_dtree),fr(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new it.Buf16(Rt+1),this.heap=new it.Buf16(2*Ae+1),fr(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new it.Buf16(2*Ae+1),fr(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Wt(e){var t;return!e||!e.state?pn(e,C):(e.total_in=e.total_out=0,e.data_type=Ye,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?oe:$e,e.adler=t.wrap===2?0:1,t.last_flush=ke,Ce._tr_init(t),_)}function An(e){var t=Wt(e);return t===_&&jt(e.state),t}function Gr(e,t){return!e||!e.state||e.state.wrap!==2?C:(e.state.gzhead=t,_)}function Xn(e,t,n,r,o,c){if(!e)return C;var g=1;if(t===H&&(t=6),r<0?(g=0,r=-r):r>15&&(g=2,r-=16),o<1||o>Qe||n!==ft||r<8||r>15||t<0||t>9||c<0||c>ue)return pn(e,C);r===8&&(r=9);var b=new Dt;return e.state=b,b.strm=e,b.wrap=g,b.gzhead=null,b.w_bits=r,b.w_size=1<<b.w_bits,b.w_mask=b.w_size-1,b.hash_bits=o+7,b.hash_size=1<<b.hash_bits,b.hash_mask=b.hash_size-1,b.hash_shift=~~((b.hash_bits+M-1)/M),b.window=new it.Buf8(b.w_size*2),b.head=new it.Buf16(b.hash_size),b.prev=new it.Buf16(b.w_size),b.lit_bufsize=1<<o+6,b.pending_buf_size=b.lit_bufsize*4,b.pending_buf=new it.Buf8(b.pending_buf_size),b.d_buf=1*b.lit_bufsize,b.l_buf=(1+2)*b.lit_bufsize,b.level=t,b.strategy=c,b.method=n,An(e)}function ui(e,t){return Xn(e,t,ft,xe,me,Re)}function jo(e,t){var n,r,o,c;if(!e||!e.state||t>d||t<0)return e?pn(e,C):C;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===Ut&&t!==l)return pn(e,e.avail_out===0?L:C);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===oe)if(r.wrap===2)e.adler=0,nn(r,31),nn(r,139),nn(r,8),r.gzhead?(nn(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),nn(r,r.gzhead.time&255),nn(r,r.gzhead.time>>8&255),nn(r,r.gzhead.time>>16&255),nn(r,r.gzhead.time>>24&255),nn(r,r.level===9?2:r.strategy>=ve||r.level<2?4:0),nn(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(nn(r,r.gzhead.extra.length&255),nn(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=Te(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=Ue):(nn(r,0),nn(r,0),nn(r,0),nn(r,0),nn(r,0),nn(r,r.level===9?2:r.strategy>=ve||r.level<2?4:0),nn(r,Rn),r.status=$e);else{var g=ft+(r.w_bits-8<<4)<<8,b=-1;r.strategy>=ve||r.level<2?b=0:r.level<6?b=1:r.level===6?b=2:b=3,g|=b<<6,r.strstart!==0&&(g|=re),g+=31-g%31,r.status=$e,lo(r,g),r.strstart!==0&&(lo(r,e.adler>>>16),lo(r,e.adler&65535)),e.adler=1}if(r.status===Ue)if(r.gzhead.extra){for(o=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=Te(e.adler,r.pending_buf,r.pending-o,o)),ni(e),o=r.pending,r.pending===r.pending_buf_size));)nn(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>o&&(e.adler=Te(e.adler,r.pending_buf,r.pending-o,o)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=rt)}else r.status=rt;if(r.status===rt)if(r.gzhead.name){o=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=Te(e.adler,r.pending_buf,r.pending-o,o)),ni(e),o=r.pending,r.pending===r.pending_buf_size)){c=1;break}r.gzindex<r.gzhead.name.length?c=r.gzhead.name.charCodeAt(r.gzindex++)&255:c=0,nn(r,c)}while(c!==0);r.gzhead.hcrc&&r.pending>o&&(e.adler=Te(e.adler,r.pending_buf,r.pending-o,o)),c===0&&(r.gzindex=0,r.status=qe)}else r.status=qe;if(r.status===qe)if(r.gzhead.comment){o=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=Te(e.adler,r.pending_buf,r.pending-o,o)),ni(e),o=r.pending,r.pending===r.pending_buf_size)){c=1;break}r.gzindex<r.gzhead.comment.length?c=r.gzhead.comment.charCodeAt(r.gzindex++)&255:c=0,nn(r,c)}while(c!==0);r.gzhead.hcrc&&r.pending>o&&(e.adler=Te(e.adler,r.pending_buf,r.pending-o,o)),c===0&&(r.status=Ke)}else r.status=Ke;if(r.status===Ke&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&ni(e),r.pending+2<=r.pending_buf_size&&(nn(r,e.adler&255),nn(r,e.adler>>8&255),e.adler=0,r.status=$e)):r.status=$e),r.pending!==0){if(ni(e),e.avail_out===0)return r.last_flush=-1,_}else if(e.avail_in===0&&_n(t)<=_n(n)&&t!==l)return pn(e,L);if(r.status===Ut&&e.avail_in!==0)return pn(e,L);if(e.avail_in!==0||r.lookahead!==0||t!==ke&&r.status!==Ut){var V=r.strategy===ve?et(r,t):r.strategy===Me?_t(r,t):He[r.level].func(r,t);if((V===Bt||V===Mn)&&(r.status=Ut),V===vt||V===Bt)return e.avail_out===0&&(r.last_flush=-1),_;if(V===xt&&(t===Ct?Ce._tr_align(r):t!==d&&(Ce._tr_stored_block(r,0,0,!1),t===i&&(fr(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),ni(e),e.avail_out===0))return r.last_flush=-1,_}return t!==l?_:r.wrap<=0?A:(r.wrap===2?(nn(r,e.adler&255),nn(r,e.adler>>8&255),nn(r,e.adler>>16&255),nn(r,e.adler>>24&255),nn(r,e.total_in&255),nn(r,e.total_in>>8&255),nn(r,e.total_in>>16&255),nn(r,e.total_in>>24&255)):(lo(r,e.adler>>>16),lo(r,e.adler&65535)),ni(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?_:A)}function es(e){var t;return!e||!e.state?C:(t=e.state.status,t!==oe&&t!==Ue&&t!==rt&&t!==qe&&t!==Ke&&t!==$e&&t!==Ut?pn(e,C):(e.state=null,t===$e?pn(e,k):_))}function Cs(e,t){var n=t.length,r,o,c,g,b,V,T,D;if(!e||!e.state||(r=e.state,g=r.wrap,g===2||g===1&&r.status!==oe||r.lookahead))return C;for(g===1&&(e.adler=Ee(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(g===0&&(fr(r.head),r.strstart=0,r.block_start=0,r.insert=0),D=new it.Buf8(r.w_size),it.arraySet(D,t,n-r.w_size,r.w_size,0),t=D,n=r.w_size),b=e.avail_in,V=e.next_in,T=e.input,e.avail_in=n,e.next_in=0,e.input=t,be(r);r.lookahead>=M;){o=r.strstart,c=r.lookahead-(M-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[o+M-1])&r.hash_mask,r.prev[o&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=o,o++;while(--c);r.strstart=o,r.lookahead=M-1,be(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=M-1,r.match_available=0,e.next_in=V,e.input=T,e.avail_in=b,r.wrap=g,_}Pt.deflateInit=ui,Pt.deflateInit2=Xn,Pt.deflateReset=An,Pt.deflateResetKeep=Wt,Pt.deflateSetHeader=Gr,Pt.deflate=jo,Pt.deflateEnd=es,Pt.deflateSetDictionary=Cs,Pt.deflateInfo="pako deflate (from Nodeca project)";var rr={},Ma=Be,As=!0,Ki=!0;try{String.fromCharCode.apply(null,[0])}catch(e){As=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){Ki=!1}for(var zo=new Ma.Buf8(256),co=0;co<256;co++)zo[co]=co>=252?6:co>=248?5:co>=240?4:co>=224?3:co>=192?2:1;zo[254]=zo[254]=1,rr.string2buf=function(e){var t,n,r,o,c,g=e.length,b=0;for(o=0;o<g;o++)n=e.charCodeAt(o),(n&64512)===55296&&o+1<g&&(r=e.charCodeAt(o+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),o++)),b+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Ma.Buf8(b),c=0,o=0;c<b;o++)n=e.charCodeAt(o),(n&64512)===55296&&o+1<g&&(r=e.charCodeAt(o+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),o++)),n<128?t[c++]=n:n<2048?(t[c++]=192|n>>>6,t[c++]=128|n&63):n<65536?(t[c++]=224|n>>>12,t[c++]=128|n>>>6&63,t[c++]=128|n&63):(t[c++]=240|n>>>18,t[c++]=128|n>>>12&63,t[c++]=128|n>>>6&63,t[c++]=128|n&63);return t};function ba(e,t){if(t<65534&&(e.subarray&&Ki||!e.subarray&&As))return String.fromCharCode.apply(null,Ma.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}rr.buf2binstring=function(e){return ba(e,e.length)},rr.binstring2buf=function(e){for(var t=new Ma.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},rr.buf2string=function(e,t){var n,r,o,c,g=t||e.length,b=new Array(g*2);for(r=0,n=0;n<g;){if(o=e[n++],o<128){b[r++]=o;continue}if(c=zo[o],c>4){b[r++]=65533,n+=c-1;continue}for(o&=c===2?31:c===3?15:7;c>1&&n<g;)o=o<<6|e[n++]&63,c--;if(c>1){b[r++]=65533;continue}o<65536?b[r++]=o:(o-=65536,b[r++]=55296|o>>10&1023,b[r++]=56320|o&1023)}return ba(b,r)},rr.utf8border=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+zo[e[n]]>t?n:t};function ts(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var sa=ts,la=Pt,Wo=Be,bl=rr,Ys=wt,bc=sa,Wl=Object.prototype.toString,Jv=0,pu=4,El=0,Uf=1,$f=2,Kv=-1,Zv=0,Xv=8;function qs(e){if(!(this instanceof qs))return new qs(e);this.options=Wo.assign({level:Kv,method:Xv,chunkSize:16384,windowBits:15,memLevel:8,strategy:Zv,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new bc,this.strm.avail_out=0;var n=la.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==El)throw new Error(Ys[n]);if(t.header&&la.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=bl.string2buf(t.dictionary):Wl.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=la.deflateSetDictionary(this.strm,r),n!==El)throw new Error(Ys[n]);this._dict_set=!0}}qs.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,o,c;if(this.ended)return!1;c=t===~~t?t:t===!0?pu:Jv,typeof e=="string"?n.input=bl.string2buf(e):Wl.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Wo.Buf8(r),n.next_out=0,n.avail_out=r),o=la.deflate(n,c),o!==Uf&&o!==El)return this.onEnd(o),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(c===pu||c===$f))&&(this.options.to==="string"?this.onData(bl.buf2binstring(Wo.shrinkBuf(n.output,n.next_out))):this.onData(Wo.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&o!==Uf);return c===pu?(o=la.deflateEnd(this.strm),this.onEnd(o),this.ended=!0,o===El):(c===$f&&(this.onEnd(El),n.avail_out=0),!0)},qs.prototype.onData=function(e){this.chunks.push(e)},qs.prototype.onEnd=function(e){e===El&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Wo.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function vu(e,t){var n=new qs(t);if(n.push(e,!0),n.err)throw n.msg||Ys[n.err];return n.result}function Qv(e,t){return t=t||{},t.raw=!0,vu(e,t)}function em(e,t){return t=t||{},t.gzip=!0,vu(e,t)}It.Deflate=qs,It.deflate=vu,It.deflateRaw=Qv,It.gzip=em;var Gl={},Ea={},Ec=30,tm=12,nm=function(t,n){var r,o,c,g,b,V,T,D,_e,Se,Pe,dt,gt,Ft,yt,vn,rn,sn,ct,yn,ln,Kt,Tn,hr,en;r=t.state,o=t.next_in,hr=t.input,c=o+(t.avail_in-5),g=t.next_out,en=t.output,b=g-(n-t.avail_out),V=g+(t.avail_out-257),T=r.dmax,D=r.wsize,_e=r.whave,Se=r.wnext,Pe=r.window,dt=r.hold,gt=r.bits,Ft=r.lencode,yt=r.distcode,vn=(1<<r.lenbits)-1,rn=(1<<r.distbits)-1;e:do{gt<15&&(dt+=hr[o++]<<gt,gt+=8,dt+=hr[o++]<<gt,gt+=8),sn=Ft[dt&vn];t:for(;;){if(ct=sn>>>24,dt>>>=ct,gt-=ct,ct=sn>>>16&255,ct===0)en[g++]=sn&65535;else if(ct&16){yn=sn&65535,ct&=15,ct&&(gt<ct&&(dt+=hr[o++]<<gt,gt+=8),yn+=dt&(1<<ct)-1,dt>>>=ct,gt-=ct),gt<15&&(dt+=hr[o++]<<gt,gt+=8,dt+=hr[o++]<<gt,gt+=8),sn=yt[dt&rn];n:for(;;){if(ct=sn>>>24,dt>>>=ct,gt-=ct,ct=sn>>>16&255,ct&16){if(ln=sn&65535,ct&=15,gt<ct&&(dt+=hr[o++]<<gt,gt+=8,gt<ct&&(dt+=hr[o++]<<gt,gt+=8)),ln+=dt&(1<<ct)-1,ln>T){t.msg="invalid distance too far back",r.mode=Ec;break e}if(dt>>>=ct,gt-=ct,ct=g-b,ln>ct){if(ct=ln-ct,ct>_e&&r.sane){t.msg="invalid distance too far back",r.mode=Ec;break e}if(Kt=0,Tn=Pe,Se===0){if(Kt+=D-ct,ct<yn){yn-=ct;do en[g++]=Pe[Kt++];while(--ct);Kt=g-ln,Tn=en}}else if(Se<ct){if(Kt+=D+Se-ct,ct-=Se,ct<yn){yn-=ct;do en[g++]=Pe[Kt++];while(--ct);if(Kt=0,Se<yn){ct=Se,yn-=ct;do en[g++]=Pe[Kt++];while(--ct);Kt=g-ln,Tn=en}}}else if(Kt+=Se-ct,ct<yn){yn-=ct;do en[g++]=Pe[Kt++];while(--ct);Kt=g-ln,Tn=en}for(;yn>2;)en[g++]=Tn[Kt++],en[g++]=Tn[Kt++],en[g++]=Tn[Kt++],yn-=3;yn&&(en[g++]=Tn[Kt++],yn>1&&(en[g++]=Tn[Kt++]))}else{Kt=g-ln;do en[g++]=en[Kt++],en[g++]=en[Kt++],en[g++]=en[Kt++],yn-=3;while(yn>2);yn&&(en[g++]=en[Kt++],yn>1&&(en[g++]=en[Kt++]))}}else if((ct&64)===0){sn=yt[(sn&65535)+(dt&(1<<ct)-1)];continue n}else{t.msg="invalid distance code",r.mode=Ec;break e}break}}else if((ct&64)===0){sn=Ft[(sn&65535)+(dt&(1<<ct)-1)];continue t}else if(ct&32){r.mode=tm;break e}else{t.msg="invalid literal/length code",r.mode=Ec;break e}break}}while(o<c&&g<V);yn=gt>>3,o-=yn,gt-=yn<<3,dt&=(1<<gt)-1,t.next_in=o,t.next_out=g,t.avail_in=o<c?5+(c-o):5-(o-c),t.avail_out=g<V?257+(V-g):257-(g-V),r.hold=dt,r.bits=gt},Hf=Be,yl=15,jf=852,zf=592,Wf=0,mu=1,Gf=2,rm=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],im=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],om=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],am=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],sm=function(t,n,r,o,c,g,b,V){var T=V.bits,D=0,_e=0,Se=0,Pe=0,dt=0,gt=0,Ft=0,yt=0,vn=0,rn=0,sn,ct,yn,ln,Kt,Tn=null,hr=0,en,Oa=new Hf.Buf16(yl+1),Kc=new Hf.Buf16(yl+1),Zc=null,Ap=0,Op,Xc,Qc;for(D=0;D<=yl;D++)Oa[D]=0;for(_e=0;_e<o;_e++)Oa[n[r+_e]]++;for(dt=T,Pe=yl;Pe>=1&&Oa[Pe]===0;Pe--);if(dt>Pe&&(dt=Pe),Pe===0)return c[g++]=1<<24|64<<16|0,c[g++]=1<<24|64<<16|0,V.bits=1,0;for(Se=1;Se<Pe&&Oa[Se]===0;Se++);for(dt<Se&&(dt=Se),yt=1,D=1;D<=yl;D++)if(yt<<=1,yt-=Oa[D],yt<0)return-1;if(yt>0&&(t===Wf||Pe!==1))return-1;for(Kc[1]=0,D=1;D<yl;D++)Kc[D+1]=Kc[D]+Oa[D];for(_e=0;_e<o;_e++)n[r+_e]!==0&&(b[Kc[n[r+_e]]++]=_e);if(t===Wf?(Tn=Zc=b,en=19):t===mu?(Tn=rm,hr-=257,Zc=im,Ap-=257,en=256):(Tn=om,Zc=am,en=-1),rn=0,_e=0,D=Se,Kt=g,gt=dt,Ft=0,yn=-1,vn=1<<dt,ln=vn-1,t===mu&&vn>jf||t===Gf&&vn>zf)return 1;for(;;){Op=D-Ft,b[_e]<en?(Xc=0,Qc=b[_e]):b[_e]>en?(Xc=Zc[Ap+b[_e]],Qc=Tn[hr+b[_e]]):(Xc=32+64,Qc=0),sn=1<<D-Ft,ct=1<<gt,Se=ct;do ct-=sn,c[Kt+(rn>>Ft)+ct]=Op<<24|Xc<<16|Qc|0;while(ct!==0);for(sn=1<<D-1;rn&sn;)sn>>=1;if(sn!==0?(rn&=sn-1,rn+=sn):rn=0,_e++,--Oa[D]===0){if(D===Pe)break;D=n[r+b[_e]]}if(D>dt&&(rn&ln)!==yn){for(Ft===0&&(Ft=dt),Kt+=Se,gt=D-Ft,yt=1<<gt;gt+Ft<Pe&&(yt-=Oa[gt+Ft],!(yt<=0));)gt++,yt<<=1;if(vn+=1<<gt,t===mu&&vn>jf||t===Gf&&vn>zf)return 1;yn=rn&ln,c[yn]=dt<<24|gt<<16|Kt-g|0}}return rn!==0&&(c[Kt+rn]=D-Ft<<24|64<<16|0),V.bits=dt,0},Go=Be,_u=ze,La=Xe,lm=nm,Yl=sm,cm=0,Yf=1,qf=2,Jf=4,um=5,yc=6,Js=0,fm=1,dm=2,ca=-2,Kf=-3,Zf=-4,hm=-5,Xf=8,Qf=1,ed=2,td=3,nd=4,rd=5,id=6,od=7,ad=8,sd=9,ld=10,Sc=11,ns=12,bu=13,cd=14,Eu=15,ud=16,fd=17,dd=18,hd=19,wc=20,Cc=21,gd=22,pd=23,vd=24,md=25,_d=26,yu=27,bd=28,Ed=29,Sr=30,yd=31,gm=32,pm=852,vm=592,mm=15,_m=mm;function Sd(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function bm(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Go.Buf16(320),this.work=new Go.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function wd(e){var t;return!e||!e.state?ca:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=Qf,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Go.Buf32(pm),t.distcode=t.distdyn=new Go.Buf32(vm),t.sane=1,t.back=-1,Js)}function Cd(e){var t;return!e||!e.state?ca:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,wd(e))}function Ad(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?ca:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,Cd(e))}function Od(e,t){var n,r;return e?(r=new bm,e.state=r,r.window=null,n=Ad(e,t),n!==Js&&(e.state=null),n):ca}function Em(e){return Od(e,_m)}var Td=!0,Su,wu;function ym(e){if(Td){var t;for(Su=new Go.Buf32(512),wu=new Go.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Yl(Yf,e.lens,0,288,Su,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Yl(qf,e.lens,0,32,wu,0,e.work,{bits:5}),Td=!1}e.lencode=Su,e.lenbits=9,e.distcode=wu,e.distbits=5}function Pd(e,t,n,r){var o,c=e.state;return c.window===null&&(c.wsize=1<<c.wbits,c.wnext=0,c.whave=0,c.window=new Go.Buf8(c.wsize)),r>=c.wsize?(Go.arraySet(c.window,t,n-c.wsize,c.wsize,0),c.wnext=0,c.whave=c.wsize):(o=c.wsize-c.wnext,o>r&&(o=r),Go.arraySet(c.window,t,n-r,o,c.wnext),r-=o,r?(Go.arraySet(c.window,t,n-r,r,0),c.wnext=r,c.whave=c.wsize):(c.wnext+=o,c.wnext===c.wsize&&(c.wnext=0),c.whave<c.wsize&&(c.whave+=o))),0}function Sm(e,t){var n,r,o,c,g,b,V,T,D,_e,Se,Pe,dt,gt,Ft=0,yt,vn,rn,sn,ct,yn,ln,Kt,Tn=new Go.Buf8(4),hr,en,Oa=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return ca;n=e.state,n.mode===ns&&(n.mode=bu),g=e.next_out,o=e.output,V=e.avail_out,c=e.next_in,r=e.input,b=e.avail_in,T=n.hold,D=n.bits,_e=b,Se=V,Kt=Js;e:for(;;)switch(n.mode){case Qf:if(n.wrap===0){n.mode=bu;break}for(;D<16;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(n.wrap&2&&T===35615){n.check=0,Tn[0]=T&255,Tn[1]=T>>>8&255,n.check=La(n.check,Tn,2,0),T=0,D=0,n.mode=ed;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((T&255)<<8)+(T>>8))%31){e.msg="incorrect header check",n.mode=Sr;break}if((T&15)!==Xf){e.msg="unknown compression method",n.mode=Sr;break}if(T>>>=4,D-=4,ln=(T&15)+8,n.wbits===0)n.wbits=ln;else if(ln>n.wbits){e.msg="invalid window size",n.mode=Sr;break}n.dmax=1<<ln,e.adler=n.check=1,n.mode=T&512?ld:ns,T=0,D=0;break;case ed:for(;D<16;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(n.flags=T,(n.flags&255)!==Xf){e.msg="unknown compression method",n.mode=Sr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=Sr;break}n.head&&(n.head.text=T>>8&1),n.flags&512&&(Tn[0]=T&255,Tn[1]=T>>>8&255,n.check=La(n.check,Tn,2,0)),T=0,D=0,n.mode=td;case td:for(;D<32;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}n.head&&(n.head.time=T),n.flags&512&&(Tn[0]=T&255,Tn[1]=T>>>8&255,Tn[2]=T>>>16&255,Tn[3]=T>>>24&255,n.check=La(n.check,Tn,4,0)),T=0,D=0,n.mode=nd;case nd:for(;D<16;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}n.head&&(n.head.xflags=T&255,n.head.os=T>>8),n.flags&512&&(Tn[0]=T&255,Tn[1]=T>>>8&255,n.check=La(n.check,Tn,2,0)),T=0,D=0,n.mode=rd;case rd:if(n.flags&1024){for(;D<16;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}n.length=T,n.head&&(n.head.extra_len=T),n.flags&512&&(Tn[0]=T&255,Tn[1]=T>>>8&255,n.check=La(n.check,Tn,2,0)),T=0,D=0}else n.head&&(n.head.extra=null);n.mode=id;case id:if(n.flags&1024&&(Pe=n.length,Pe>b&&(Pe=b),Pe&&(n.head&&(ln=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),Go.arraySet(n.head.extra,r,c,Pe,ln)),n.flags&512&&(n.check=La(n.check,r,Pe,c)),b-=Pe,c+=Pe,n.length-=Pe),n.length))break e;n.length=0,n.mode=od;case od:if(n.flags&2048){if(b===0)break e;Pe=0;do ln=r[c+Pe++],n.head&&ln&&n.length<65536&&(n.head.name+=String.fromCharCode(ln));while(ln&&Pe<b);if(n.flags&512&&(n.check=La(n.check,r,Pe,c)),b-=Pe,c+=Pe,ln)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=ad;case ad:if(n.flags&4096){if(b===0)break e;Pe=0;do ln=r[c+Pe++],n.head&&ln&&n.length<65536&&(n.head.comment+=String.fromCharCode(ln));while(ln&&Pe<b);if(n.flags&512&&(n.check=La(n.check,r,Pe,c)),b-=Pe,c+=Pe,ln)break e}else n.head&&(n.head.comment=null);n.mode=sd;case sd:if(n.flags&512){for(;D<16;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(T!==(n.check&65535)){e.msg="header crc mismatch",n.mode=Sr;break}T=0,D=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=ns;break;case ld:for(;D<32;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}e.adler=n.check=Sd(T),T=0,D=0,n.mode=Sc;case Sc:if(n.havedict===0)return e.next_out=g,e.avail_out=V,e.next_in=c,e.avail_in=b,n.hold=T,n.bits=D,dm;e.adler=n.check=1,n.mode=ns;case ns:if(t===um||t===yc)break e;case bu:if(n.last){T>>>=D&7,D-=D&7,n.mode=yu;break}for(;D<3;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}switch(n.last=T&1,T>>>=1,D-=1,T&3){case 0:n.mode=cd;break;case 1:if(ym(n),n.mode=wc,t===yc){T>>>=2,D-=2;break e}break;case 2:n.mode=fd;break;case 3:e.msg="invalid block type",n.mode=Sr}T>>>=2,D-=2;break;case cd:for(T>>>=D&7,D-=D&7;D<32;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if((T&65535)!==(T>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Sr;break}if(n.length=T&65535,T=0,D=0,n.mode=Eu,t===yc)break e;case Eu:n.mode=ud;case ud:if(Pe=n.length,Pe){if(Pe>b&&(Pe=b),Pe>V&&(Pe=V),Pe===0)break e;Go.arraySet(o,r,c,Pe,g),b-=Pe,c+=Pe,V-=Pe,g+=Pe,n.length-=Pe;break}n.mode=ns;break;case fd:for(;D<14;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(n.nlen=(T&31)+257,T>>>=5,D-=5,n.ndist=(T&31)+1,T>>>=5,D-=5,n.ncode=(T&15)+4,T>>>=4,D-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Sr;break}n.have=0,n.mode=dd;case dd:for(;n.have<n.ncode;){for(;D<3;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}n.lens[Oa[n.have++]]=T&7,T>>>=3,D-=3}for(;n.have<19;)n.lens[Oa[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,hr={bits:n.lenbits},Kt=Yl(cm,n.lens,0,19,n.lencode,0,n.work,hr),n.lenbits=hr.bits,Kt){e.msg="invalid code lengths set",n.mode=Sr;break}n.have=0,n.mode=hd;case hd:for(;n.have<n.nlen+n.ndist;){for(;Ft=n.lencode[T&(1<<n.lenbits)-1],yt=Ft>>>24,vn=Ft>>>16&255,rn=Ft&65535,!(yt<=D);){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(rn<16)T>>>=yt,D-=yt,n.lens[n.have++]=rn;else{if(rn===16){for(en=yt+2;D<en;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(T>>>=yt,D-=yt,n.have===0){e.msg="invalid bit length repeat",n.mode=Sr;break}ln=n.lens[n.have-1],Pe=3+(T&3),T>>>=2,D-=2}else if(rn===17){for(en=yt+3;D<en;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}T>>>=yt,D-=yt,ln=0,Pe=3+(T&7),T>>>=3,D-=3}else{for(en=yt+7;D<en;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}T>>>=yt,D-=yt,ln=0,Pe=11+(T&127),T>>>=7,D-=7}if(n.have+Pe>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Sr;break}for(;Pe--;)n.lens[n.have++]=ln}}if(n.mode===Sr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=Sr;break}if(n.lenbits=9,hr={bits:n.lenbits},Kt=Yl(Yf,n.lens,0,n.nlen,n.lencode,0,n.work,hr),n.lenbits=hr.bits,Kt){e.msg="invalid literal/lengths set",n.mode=Sr;break}if(n.distbits=6,n.distcode=n.distdyn,hr={bits:n.distbits},Kt=Yl(qf,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,hr),n.distbits=hr.bits,Kt){e.msg="invalid distances set",n.mode=Sr;break}if(n.mode=wc,t===yc)break e;case wc:n.mode=Cc;case Cc:if(b>=6&&V>=258){e.next_out=g,e.avail_out=V,e.next_in=c,e.avail_in=b,n.hold=T,n.bits=D,lm(e,Se),g=e.next_out,o=e.output,V=e.avail_out,c=e.next_in,r=e.input,b=e.avail_in,T=n.hold,D=n.bits,n.mode===ns&&(n.back=-1);break}for(n.back=0;Ft=n.lencode[T&(1<<n.lenbits)-1],yt=Ft>>>24,vn=Ft>>>16&255,rn=Ft&65535,!(yt<=D);){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(vn&&(vn&240)===0){for(sn=yt,ct=vn,yn=rn;Ft=n.lencode[yn+((T&(1<<sn+ct)-1)>>sn)],yt=Ft>>>24,vn=Ft>>>16&255,rn=Ft&65535,!(sn+yt<=D);){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}T>>>=sn,D-=sn,n.back+=sn}if(T>>>=yt,D-=yt,n.back+=yt,n.length=rn,vn===0){n.mode=_d;break}if(vn&32){n.back=-1,n.mode=ns;break}if(vn&64){e.msg="invalid literal/length code",n.mode=Sr;break}n.extra=vn&15,n.mode=gd;case gd:if(n.extra){for(en=n.extra;D<en;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}n.length+=T&(1<<n.extra)-1,T>>>=n.extra,D-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=pd;case pd:for(;Ft=n.distcode[T&(1<<n.distbits)-1],yt=Ft>>>24,vn=Ft>>>16&255,rn=Ft&65535,!(yt<=D);){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if((vn&240)===0){for(sn=yt,ct=vn,yn=rn;Ft=n.distcode[yn+((T&(1<<sn+ct)-1)>>sn)],yt=Ft>>>24,vn=Ft>>>16&255,rn=Ft&65535,!(sn+yt<=D);){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}T>>>=sn,D-=sn,n.back+=sn}if(T>>>=yt,D-=yt,n.back+=yt,vn&64){e.msg="invalid distance code",n.mode=Sr;break}n.offset=rn,n.extra=vn&15,n.mode=vd;case vd:if(n.extra){for(en=n.extra;D<en;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}n.offset+=T&(1<<n.extra)-1,T>>>=n.extra,D-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Sr;break}n.mode=md;case md:if(V===0)break e;if(Pe=Se-V,n.offset>Pe){if(Pe=n.offset-Pe,Pe>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Sr;break}Pe>n.wnext?(Pe-=n.wnext,dt=n.wsize-Pe):dt=n.wnext-Pe,Pe>n.length&&(Pe=n.length),gt=n.window}else gt=o,dt=g-n.offset,Pe=n.length;Pe>V&&(Pe=V),V-=Pe,n.length-=Pe;do o[g++]=gt[dt++];while(--Pe);n.length===0&&(n.mode=Cc);break;case _d:if(V===0)break e;o[g++]=n.length,V--,n.mode=Cc;break;case yu:if(n.wrap){for(;D<32;){if(b===0)break e;b--,T|=r[c++]<<D,D+=8}if(Se-=V,e.total_out+=Se,n.total+=Se,Se&&(e.adler=n.check=n.flags?La(n.check,o,Se,g-Se):_u(n.check,o,Se,g-Se)),Se=V,(n.flags?T:Sd(T))!==n.check){e.msg="incorrect data check",n.mode=Sr;break}T=0,D=0}n.mode=bd;case bd:if(n.wrap&&n.flags){for(;D<32;){if(b===0)break e;b--,T+=r[c++]<<D,D+=8}if(T!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=Sr;break}T=0,D=0}n.mode=Ed;case Ed:Kt=fm;break e;case Sr:Kt=Kf;break e;case yd:return Zf;case gm:default:return ca}return e.next_out=g,e.avail_out=V,e.next_in=c,e.avail_in=b,n.hold=T,n.bits=D,(n.wsize||Se!==e.avail_out&&n.mode<Sr&&(n.mode<yu||t!==Jf))&&Pd(e,e.output,e.next_out,Se-e.avail_out),_e-=e.avail_in,Se-=e.avail_out,e.total_in+=_e,e.total_out+=Se,n.total+=Se,n.wrap&&Se&&(e.adler=n.check=n.flags?La(n.check,o,Se,e.next_out-Se):_u(n.check,o,Se,e.next_out-Se)),e.data_type=n.bits+(n.last?64:0)+(n.mode===ns?128:0)+(n.mode===wc||n.mode===Eu?256:0),(_e===0&&Se===0||t===Jf)&&Kt===Js&&(Kt=hm),Kt}function wm(e){if(!e||!e.state)return ca;var t=e.state;return t.window&&(t.window=null),e.state=null,Js}function Cm(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?ca:(n.head=t,t.done=!1,Js)}function Am(e,t){var n=t.length,r,o,c;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==Sc)?ca:r.mode===Sc&&(o=1,o=_u(o,t,n,0),o!==r.check)?Kf:(c=Pd(e,t,n,n),c?(r.mode=yd,Zf):(r.havedict=1,Js))}Ea.inflateReset=Cd,Ea.inflateReset2=Ad,Ea.inflateResetKeep=wd,Ea.inflateInit=Em,Ea.inflateInit2=Od,Ea.inflate=Sm,Ea.inflateEnd=wm,Ea.inflateGetHeader=Cm,Ea.inflateSetDictionary=Am,Ea.inflateInfo="pako inflate (from Nodeca project)";var Id={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function Om(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var Tm=Om,Sl=Ea,ql=Be,Ac=rr,Yr=Id,Cu=wt,Pm=sa,Im=Tm,Nd=Object.prototype.toString;function Ks(e){if(!(this instanceof Ks))return new Ks(e);this.options=ql.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Pm,this.strm.avail_out=0;var n=Sl.inflateInit2(this.strm,t.windowBits);if(n!==Yr.Z_OK)throw new Error(Cu[n]);if(this.header=new Im,Sl.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=Ac.string2buf(t.dictionary):Nd.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Sl.inflateSetDictionary(this.strm,t.dictionary),n!==Yr.Z_OK)))throw new Error(Cu[n])}Ks.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,o=this.options.dictionary,c,g,b,V,T,D=!1;if(this.ended)return!1;g=t===~~t?t:t===!0?Yr.Z_FINISH:Yr.Z_NO_FLUSH,typeof e=="string"?n.input=Ac.binstring2buf(e):Nd.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new ql.Buf8(r),n.next_out=0,n.avail_out=r),c=Sl.inflate(n,Yr.Z_NO_FLUSH),c===Yr.Z_NEED_DICT&&o&&(c=Sl.inflateSetDictionary(this.strm,o)),c===Yr.Z_BUF_ERROR&&D===!0&&(c=Yr.Z_OK,D=!1),c!==Yr.Z_STREAM_END&&c!==Yr.Z_OK)return this.onEnd(c),this.ended=!0,!1;n.next_out&&(n.avail_out===0||c===Yr.Z_STREAM_END||n.avail_in===0&&(g===Yr.Z_FINISH||g===Yr.Z_SYNC_FLUSH))&&(this.options.to==="string"?(b=Ac.utf8border(n.output,n.next_out),V=n.next_out-b,T=Ac.buf2string(n.output,b),n.next_out=V,n.avail_out=r-V,V&&ql.arraySet(n.output,n.output,b,V,0),this.onData(T)):this.onData(ql.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&(D=!0)}while((n.avail_in>0||n.avail_out===0)&&c!==Yr.Z_STREAM_END);return c===Yr.Z_STREAM_END&&(g=Yr.Z_FINISH),g===Yr.Z_FINISH?(c=Sl.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===Yr.Z_OK):(g===Yr.Z_SYNC_FLUSH&&(this.onEnd(Yr.Z_OK),n.avail_out=0),!0)},Ks.prototype.onData=function(e){this.chunks.push(e)},Ks.prototype.onEnd=function(e){e===Yr.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=ql.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function Au(e,t){var n=new Ks(t);if(n.push(e,!0),n.err)throw n.msg||Cu[n.err];return n.result}function Nm(e,t){return t=t||{},t.raw=!0,Au(e,t)}Gl.Inflate=Ks,Gl.inflate=Au,Gl.inflateRaw=Nm,Gl.ungzip=Au;var km=Be.assign,Rm=It,xm=Gl,Bm=Id,kd={};km(kd,Rm,xm,Bm);var Rd=kd;let Mm="upx2px",Lm=[{name:"upx",type:[Number,String],required:!0}],Dm=1e-4,Fm=750,xd=!1,Ou=0,Bd=0,Md=960,Ld=375,Dd=750;function Vm(){let{platform:e,pixelRatio:t,windowWidth:n}=Rr();Ou=n,Bd=t,xd=e==="ios"}function Tu(e,t){let n=Number(e);return isNaN(n)?t:n}function Um(){let e=x.globalStyle||{};Md=Tu(e.rpxCalcMaxDeviceWidth,960),Ld=Tu(e.rpxCalcBaseDeviceWidth,375),Dd=Tu(e.rpxCalcBaseDeviceWidth,750)}let $m=Lt(Mm,(e,t)=>{if(Ou===0&&(Vm(),Um()),e=Number(e),e===0)return 0;let n=t||Ou;n=e===Dd||n<=Md?n:Ld;let r=e/Fm*n;return r<0&&(r=-r),r=Math.floor(r+Dm),r===0&&(Bd===1||!xd?r=1:r=.5),e<0?-r:r},Lm),Hm="addInterceptor",jm="removeInterceptor",Fd=[{name:"method",type:[String,Object],required:!0}],zm=Fd;function Vd(e,t){Object.keys(t).forEach(n=>{z.isFunction(t[n])&&(e[n]=Wm(e[n],t[n]))})}function Ud(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],o=t[n];z.isArray(r)&&z.isFunction(o)&&z.remove(r,o)})}function Wm(e,t){let n=t?e?e.concat(t):z.isArray(t)?t:[t]:e;return n&&Gm(n)}function Gm(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let Ym=Lt(Hm,(e,t)=>{z.isString(e)&&z.isPlainObject(t)?Vd(Cr[e]||(Cr[e]={}),t):z.isPlainObject(e)&&Vd(kn,e)},Fd),qm=Lt(jm,(e,t)=>{z.isString(e)?z.isPlainObject(t)?Ud(Cr[e],t):delete Cr[e]:z.isPlainObject(e)&&Ud(kn,e)},zm),Jm={},Km="$on",$d=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],Zm="$once",Xm=$d,Qm="$off",e_=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],t_="$emit",n_=[{name:"event",type:String,required:!0}],Zs=new J.Emitter,r_=Lt(Km,(e,t)=>(Zs.on(e,t),()=>Zs.off(e,t)),$d),i_=Lt(Zm,(e,t)=>(Zs.once(e,t),()=>Zs.off(e,t)),Xm),o_=Lt(Qm,(e,t)=>{if(!e){Zs.e={};return}z.isArray(e)||(e=[e]),e.forEach(n=>Zs.off(n,t))},e_),a_=Lt(t_,(e,...t)=>{Zs.emit(e,...t)},n_),Hd=[{name:"id",type:String,required:!0}],s_="createVideoContext",l_="createMapContext",c_=Hd,u_="createCanvasContext",f_=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],d_="createInnerAudioContext",h_="createLivePusherContext",g_=Hd.concat({name:"componentInstance",type:Object}),p_=[.5,.8,1,1.25,1.5,2];class Pu{constructor(t,n){this.id=t,this.pageId=n}play(){tn(this.id,this.pageId,"play")}pause(){tn(this.id,this.pageId,"pause")}stop(){tn(this.id,this.pageId,"stop")}seek(t){tn(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){tn(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~p_.indexOf(t)||(t=1),tn(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){tn(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){tn(this.id,this.pageId,"exitFullScreen")}showStatusBar(){tn(this.id,this.pageId,"showStatusBar")}hideStatusBar(){tn(this.id,this.pageId,"hideStatusBar")}}let v_=Lt(s_,(e,t)=>t?new Pu(e,Fn(t)):new Pu(e,Fn(br()))),m_=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},Ti=(e,t,n,r)=>{jn(e,t,n,r,o=>{r&&m_(r,o)})};class Iu{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){Ti(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){Ti(this.id,this.pageId,"moveToLocation",t)}getScale(t){Ti(this.id,this.pageId,"getScale",t)}getRegion(t){Ti(this.id,this.pageId,"getRegion",t)}includePoints(t){Ti(this.id,this.pageId,"includePoints",t)}translateMarker(t){Ti(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return s.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){Ti(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){Ti(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){Ti(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){Ti(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){Ti(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){Ti(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){Ti(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){Ti(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){Ti(this.id,this.pageId,"moveAlong",t)}setLocMarkerIcon(t){Ti(this.id,this.pageId,"setLocMarkerIcon",t)}openMapApp(t){Ti(this.id,this.pageId,"openMapApp",t)}on(t,n){Ti(this.id,this.pageId,"on",{name:t,callback:n})}}let __=Lt(l_,(e,t)=>t?new Iu(e,Fn(t)):new Iu(e,Fn(br())),c_);function Os(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let jd=Os("width"),zd=Os("height"),b_="canvasGetImageData",Wd={formatArgs:{x:Os("x"),y:Os("y"),width:jd,height:zd}},Gd={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},E_="canvasPutImageData",y_=Wd,S_=z.extend({data:{type:Uint8ClampedArray,required:!0}},Gd,{height:{type:Number}}),Yd={PNG:"png",JPG:"jpg",JPEG:"jpg"},w_="canvasToTempFilePath",C_={formatArgs:{x:Os("x",0),y:Os("y",0),width:jd,height:zd,destWidth:Os("destWidth"),destHeight:Os("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=Yd[e];n||(n=Yd.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},A_={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function Oc(e,t,n,r,o){at.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,c=>{o&&o(c)})}var O_=["scale","rotate","translate","setTransform","transform"],T_=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],P_=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function I_(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let qd={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function Nu(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),o=parseInt(t[1].slice(2,4),16),c=parseInt(t[1].slice(4),16);return[r,o,c,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),o=t[1].slice(1,2),c=t[1].slice(2,3);return r=parseInt(r+r,16),o=parseInt(o+o,16),c=parseInt(c+c,16),[r,o,c,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,o){return o===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(z.hasOwn(qd,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(qd[n]);let r=parseInt(t[1].slice(0,2),16),o=parseInt(t[1].slice(2,4),16),c=parseInt(t[1].slice(4,6),16),g=parseInt(t[1].slice(6,8),16);return g=g>=0?g:255,[r,o,c,g]}return console.error("unsupported color:"+e),[0,0,0,255]}class Jd{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,Nu(n)])}}class N_{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class k_{constructor(t){this.width=t}}class Jl{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],Oc(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,o){return new Jd("linear",[t,n,r,o])}createCircularGradient(t,n,r){return new Jd("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new N_(t,n)}measureText(t){let n=this.state.font,r=0;{let o=s.webview.all().find(c=>c.getURL().endsWith("www/__uniappview.html"));o&&(r=Number(o.evalJSSync(`(${I_.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new k_(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[],this.path.push({method:"beginPath",data:[]})}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,o){this.path.push({method:"quadraticCurveTo",data:[t,n,r,o]}),this.subpath.push([r,o])}bezierCurveTo(t,n,r,o,c,g){this.path.push({method:"bezierCurveTo",data:[t,n,r,o,c,g]}),this.subpath.push([c,g])}arc(t,n,r,o,c,g=!1){this.path.push({method:"arc",data:[t,n,r,o,c,g]}),this.subpath.push([t,n])}rect(t,n,r,o){this.path.push({method:"rect",data:[t,n,r,o]}),this.subpath=[[t,n]]}arcTo(t,n,r,o,c){this.path.push({method:"arcTo",data:[t,n,r,o,c]}),this.subpath.push([r,o])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var o=r[1].trim().split(/\s/),c=parseFloat(r[3]),g=r[7],b=[];o.forEach(function(T,D){["italic","oblique","normal"].indexOf(T)>-1?(b.push({method:"setFontStyle",data:[T]}),n.state.fontStyle=T):["bold","normal"].indexOf(T)>-1?(b.push({method:"setFontWeight",data:[T]}),n.state.fontWeight=T):D===0?(b.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):D===1&&V()}),o.length===1&&V(),o=b.map(function(T){return T.data[0]}).join(" "),this.state.fontSize=c,this.state.fontFamily=g,this.actions.push({method:"setFont",data:[`${o} ${c}px ${g}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function V(){b.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let R_=J.once(()=>{[...O_,...T_].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,o,c,g){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,o,c,g]}]})};case"strokeRect":return function(r,o,c,g){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,o,c,g]}]})};case"fillText":case"strokeText":return function(r,o,c,g){var b=[r.toString(),o,c];typeof g=="number"&&b.push(g),this.actions.push({method:n,data:b})};case"drawImage":return function(r,o,c,g,b,V,T,D,_e){_e===void 0&&(V=o,T=c,D=g,_e=b,o=void 0,c=void 0,g=void 0,b=void 0);var Se;function Pe(dt){return typeof dt=="number"}Se=Pe(o)&&Pe(c)&&Pe(g)&&Pe(b)?[r,V,T,D,_e,o,c,g,b]:Pe(D)&&Pe(_e)?[r,V,T,D,_e]:[r,V,T],this.actions.push({method:n,data:Se})};default:return function(...r){this.actions.push({method:n,data:r})}}}Jl.prototype[e]=t(e)}),P_.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",Nu(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,o,c,g){g=Nu(g),this.actions.push({method:n,data:[r,o,c,g]}),this.state.shadowBlur=c,this.state.shadowColor=g,this.state.shadowOffsetX=r,this.state.shadowOffsetY=o};case"setLineDash":return function(r,o){r=r||[0,0],o=o||0,this.actions.push({method:n,data:[r,o]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Jl.prototype[e]=t(e)})}),x_=Lt(u_,(e,t)=>{if(R_(),t)return new Jl(e,Fn(t));let n=Fn(br());if(n)return new Jl(e,n);at.emit(J.ON_ERROR,"createCanvasContext:fail")},f_),B_=Oe(b_,({canvasId:e,x:t,y:n,width:r,height:o},{resolve:c,reject:g})=>{let b=Fn(br());if(!b){g();return}function V(T){if(T.errMsg&&T.errMsg.indexOf("fail")!==-1){g("",T);return}let D=T.data;D&&D.length&&(T.compressed&&(D=Rd.inflateRaw(D)),T.data=new Uint8ClampedArray(D)),delete T.compressed,c(T)}Oc(e,b,"getImageData",{x:t,y:n,width:r,height:o},V)},Gd,Wd),M_=Oe(E_,({canvasId:e,data:t,x:n,y:r,width:o,height:c},{resolve:g,reject:b})=>{var V=Fn(br());if(!V){b();return}let T,D=()=>{Oc(e,V,"putImageData",{data:t,x:n,y:r,width:o,height:c,compressed:T},_e=>{if(_e.errMsg&&_e.errMsg.indexOf("fail")!==-1){b();return}g(_e)})};s.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=Rd.deflateRaw(t,{to:"string"}),T=!0):t=Array.prototype.slice.call(t),D()},S_,y_),L_=Oe(w_,({x:e=0,y:t=0,width:n,height:r,destWidth:o,destHeight:c,canvasId:g,fileType:b,quality:V},{resolve:T,reject:D})=>{var _e=Fn(br());if(!_e){D();return}let Se=`${Wr}/canvas`;Oc(g,_e,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:o,destHeight:c,fileType:b,quality:V,dirname:Se},Pe=>{if(Pe.errMsg&&Pe.errMsg.indexOf("fail")!==-1){D("",Pe);return}T(Pe)})},A_,C_),Kd=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],D_=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],F_={thresholds:[0],initialRatio:0,observeAll:!1},V_=["top","right","bottom","left"],U_=1;function Zd(e={}){return V_.map(t=>`${Number(e[t])||0}px`).join(" ")}class Xd{constructor(t,n){this._pageId=Fn(t),this._component=t,this._options=z.extend({},F_,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=Zd(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=Zd(t),this}observe(t,n){!z.isFunction(n)||(this._options.selector=t,this._reqId=U_++,Ai({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&us({reqId:this._reqId,component:this._component},this._pageId)}}let $_=Lt("createIntersectionObserver",(e,t)=>(e=J.resolveComponentInstance(e),e&&!Fn(e)&&(t=e,e=null),e?new Xd(e,t):new Xd(br(),t))),H_=1;class Qd{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!z.isFunction(n)||(this._reqId=H_++,Na({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&ta({reqId:this._reqId,component:this._component},this._pageId)}}let j_=Lt("createMediaQueryObserver",e=>(e=J.resolveComponentInstance(e),e&&!Fn(e)&&(e=null),e?new Qd(e):new Qd(br()))),z_=0,ku={};function W_(e,t,n,r){let o={options:r},c=r&&("success"in r||"fail"in r||"complete"in r);if(c){let g=String(z_++);o.callbackId=g,ku[g]=r}at.invokeViewMethod(`editor.${e}`,{type:n,data:o},t,({callbackId:g,data:b})=>{c&&(J.callOptions(ku[g],b),delete ku[g])})}class G_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){W_(this.id,this.pageId,t,n)}}let Y_={canvas:Jl,map:Iu,video:Pu,editor:G_};function eh(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,o=Y_[n];e.context=new o(t,r),delete e.contextInfo}}class Ru{constructor(t,n,r,o){this._selectorQuery=t,this._component=n,this._selector=r,this._single=o}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class q_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return ai(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((o,c)=>{z.isArray(o)?o.forEach(eh):eh(o);let g=r[c];z.isFunction(g)&&g.call(this,o)}),z.isFunction(t)&&t.call(this,n)}),this._nodesRef}in(t){return this._component=J.resolveComponentInstance(t),this}select(t){return this._nodesRef=new Ru(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new Ru(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new Ru(this,null,"",!0)}_push(t,n,r,o,c){this._queue.push({component:n,selector:t,single:r,fields:o}),this._queueCb.push(c)}}let J_=Lt("createSelectorQuery",e=>(e=J.resolveComponentInstance(e),e&&!Fn(e)&&(e=null),new q_(e||br()))),K_="createAnimation",Z_={formatArgs:{}},X_={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},Q_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class th{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=z.extend({},Q_,t)}_getOption(t){let n={transition:z.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let eb=J.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{th.prototype[r]=function(...o){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(o[0]):o[0]]):this._pushAnimates(r,o),this}})}),tb=Lt(K_,e=>(eb(),new th(e)),X_,Z_),nh="onTabBarMidButtonTap",nb=gn(nh,()=>{}),rb="onWindowResize",ib="offWindowResize",ob=gn(rb,()=>{}),ab=Xr(ib,()=>{}),rh="setLocale",sb="getLocale",ih="onLocaleChange",Kl=Lt(sb,()=>{let e=St({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:ae().getLocale()}),lb=gn(ih,()=>{}),cb=Lt(rh,e=>{let t=St();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,In().forEach(o=>{at.publishHandler(rh,e,o.$page.id)}),f.requireModule("plus").setLanguage(e),at.invokeOnCallback(ih,{locale:e}),!0):!1}),ub=Oe("setPageMeta",(e,{resolve:t})=>{t(to(br(),e))}),oh="getSelectedTextRange",fb=Oe(oh,(e,{resolve:t,reject:n})=>{at.invokeViewMethod(oh,{},fa(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),Tc={[J.ON_UNHANDLE_REJECTION]:[],[J.ON_PAGE_NOT_FOUND]:[],[J.ON_ERROR]:[],[J.ON_SHOW]:[],[J.ON_HIDE]:[]};function Zl(e,t){let n=St({allowDefault:!0});if(n&&n.$vm)return dn.injectHook(e,t,n.$vm.$);Tc[e].push(t)}function db(e){Object.keys(Tc).forEach(t=>{Tc[t].forEach(n=>{dn.injectHook(t,n,e)})})}function Xl(e,t){let n=St({allowDefault:!0});if(n&&n.$vm)return Ia(n.$vm,e,t);z.remove(Tc[e],t)}function hb(e){Zl(J.ON_UNHANDLE_REJECTION,e)}function gb(e){Xl(J.ON_UNHANDLE_REJECTION,e)}function pb(e){Zl(J.ON_PAGE_NOT_FOUND,e)}function vb(e){Xl(J.ON_PAGE_NOT_FOUND,e)}function mb(e){Zl(J.ON_ERROR,e)}function _b(e){Xl(J.ON_ERROR,e)}function bb(e){Zl(J.ON_SHOW,e)}function Eb(e){Xl(J.ON_SHOW,e)}function yb(e){Zl(J.ON_HIDE,e)}function Sb(e){Xl(J.ON_HIDE,e)}let wb=Lt("getEnterOptionsSync",()=>Uo()),Cb=Lt("getLaunchOptionsSync",()=>ds()),Ql,xu,Bu,ah;function sh(e){try{return JSON.parse(e)}catch(t){}return e}function Mu(e){if(e.type==="enabled")Bu=!0,ah=e.offline;else if(e.type==="clientId")Ql=e.cid,xu=e.errMsg,lh(Ql,e.errMsg);else if(e.type==="pushMsg"){let t={type:"receive",data:sh(e.message)};for(let n=0;n<Ts.length&&(Ts[n](t),!t.stopped);n++);}else e.type==="click"&&Ts.forEach(t=>{t({type:"click",data:sh(e.message)})})}let Lu=[];function lh(e,t){Lu.forEach(n=>{n(e,t)}),Lu.length=0}let Ab=Oe("getPushClientId",(e,{resolve:t,reject:n})=>{if(ah){s.push.getClientInfoAsync(r=>{t({cid:r.clientid})},r=>{n(r.code+": "+r.message)});return}Promise.resolve().then(()=>{typeof Bu=="undefined"&&(Bu=!1,Ql="",xu="uniPush is not enabled"),Lu.push((r,o)=>{r?t({cid:r}):n(o)}),typeof Ql!="undefined"&&lh(Ql,xu)})}),Ts=[],ch=!1,Ob=e=>{Ts.indexOf(e)===-1&&Ts.push(e),ch||(ch=!0,s.push.addEventListener("click",t=>{Mu({type:"click",message:t})}),s.push.addEventListener("receive",t=>{Mu({type:"pushMsg",message:t})}))},Tb=e=>{if(!e)Ts.length=0;else{let t=Ts.indexOf(e);t>-1&&Ts.splice(t,1)}},Pb="canIUse",Ib=[{name:"schema",type:String,required:!0}],Nb="getBackgroundAudioManager",kb="makePhoneCall",Rb={phoneNumber:String},xb="addPhoneContact",Bb={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},Mb={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},Lb="getClipboardData",Db="setClipboardData",Fb={formatArgs:{showToast:!0},beforeInvoke(){lt()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=ae(),r=n("uni.setClipboardData.success");r&&I.showToast({title:r,icon:"success",mask:!1})}},Vb={data:{type:String,required:!0},showToast:{type:Boolean}},uh="onAccelerometer",Ub="offAccelerometer",$b="startAccelerometer",Hb="stopAccelerometer",fh="onCompass",jb="offCompass",zb="startCompass",Wb="stopCompass",Gb="vibrateShort",Yb="vibrateLong",dh="onBluetoothDeviceFound",hh="onBluetoothAdapterStateChange",gh="onBLEConnectionStateChange",ph="onBLECharacteristicValueChange",qb="startBluetoothDevicesDiscovery",Jb={services:Array,allowDuplicatesKey:Boolean,interval:Number},Kb="getConnectedBluetoothDevices",Zb={services:{type:Array,required:!0}},Xb="createBLEConnection",Qb={deviceId:{type:String,required:!0}},e0="closeBLEConnection",t0={deviceId:{type:String,required:!0}},n0="getBLEDeviceServices",r0={deviceId:{type:String,required:!0}},i0="getBLEDeviceCharacteristics",o0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},a0="notifyBLECharacteristicValueChange",s0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},l0="readBLECharacteristicValue",c0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},u0="writeBLECharacteristicValue",f0={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},d0="setBLEMTU",h0={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},g0="getBLEDeviceRSSI",p0={deviceId:{type:String,required:!0}},vh="onBeaconUpdate",mh="onBeaconServiceChange",v0="getBeacons",m0="startBeaconDiscovery",_0={uuids:{type:Array,required:!0}},b0="stopBeaconDiscovery",E0="getScreenBrightness",y0="setScreenBrightness",S0="setKeepScreenOn",w0="checkIsSupportSoterAuthentication",C0="checkIsSoterEnrolledInDevice",A0=["fingerPrint","facial","speech"],O0={formatArgs:{checkAuthMode(e,t){if(!e||!A0.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},T0={checkAuthMode:String},P0="startSoterAuthentication",I0={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},N0={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},k0="scanCode",R0={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean,sound:String,autoZoom:Boolean},x0=["default","none"],B0={formatArgs:{sound(e,t){x0.includes(e)||(t.sound="none")},autoZoom(e,t){typeof e=="undefined"&&(t.autoZoom=!0)}}},M0="getSystemSetting",L0="getAppAuthorizeSetting",D0="openAppAuthorizeSetting",F0="getStorage",_h={key:{type:String,required:!0}},V0="getStorageSync",bh=[{name:"key",type:String,required:!0}],U0="setStorage",$0={key:{type:String,required:!0},data:{required:!0}},H0="setStorageSync",j0=[{name:"key",type:String,required:!0},{name:"data",required:!0}],Eh="removeStorage",z0=_h,W0=bh,G0="saveFile",Y0={formatArgs:{tempFilePath(e,t){t.tempFilePath=je(e)}}},q0={tempFilePath:{type:String,required:!0}},J0="getSavedFileList",K0="removeSavedFile",Z0={formatArgs:{filePath(e,t){t.filePath=je(e)}}},X0={filePath:{type:String,required:!0}},Q0="getFileInfo",eE={formatArgs:{filePath(e,t){t.filePath=je(e)}}},tE={filePath:{type:String,required:!0}},nE="getSavedFileInfo",rE={formatArgs:{filePath(e,t){t.filePath=je(e)}}},iE={filePath:{type:String,required:!0}},oE="openDocument",aE={formatArgs:{filePath(e,t){t.filePath=je(e)}}},sE={filePath:{type:String,required:!0},fileType:String},lE="hideKeyboard",cE="showKeyboard",uE="chooseLocation",fE={keyword:String,latitude:Number,longitude:Number},dE="getLocation",yh=["wgs84","gcj02"],hE={formatArgs:{type(e,t){e=(e||"").toLowerCase(),yh.indexOf(e)===-1?t.type=yh[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},gE={type:String,altitude:Boolean},pE="openLocation",Sh=(e,t)=>{if(t===void 0)return`${e} should not be empty.`;if(typeof t!="number"){let n=typeof t;return n=n[0].toUpperCase()+n.substring(1),`Expected Number, got ${n} with value ${JSON.stringify(t)}.`}},vE={formatArgs:{latitude(e,t){let n=Sh("latitude",e);if(n)return n;t.latitude=e},longitude(e,t){let n=Sh("longitude",e);if(n)return n;t.longitude=e},scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},mE={latitude:Number,longitude:Number,scale:Number,name:String,address:String},_E="chooseImage",bE={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=pr(e,pi)},sourceType(e,t){t.sourceType=pr(e,qr)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},EE={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},yE="chooseVideo",SE={formatArgs:{sourceType(e,t){t.sourceType=pr(e,qr)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},wE={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},CE="getImageInfo",AE={formatArgs:{src(e,t){t.src=je(e)}}},OE={src:{type:String,required:!0}},TE="previewImage",PE={formatArgs:{urls(e,t){t.urls=e.map(n=>z.isString(n)&&n?je(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:z.isString(e)&&e&&(t.current=je(e))}}},IE={urls:{type:Array,required:!0},current:{type:[Number,String]}},NE="closePreviewImage",kE="getVideoInfo",RE={formatArgs:{src(e,t){t.src=je(e)}}},xE={src:{type:String,required:!0}},BE="saveImageToPhotosAlbum",ME={formatArgs:{filePath(e,t){t.filePath=je(e)}}},LE={filePath:{type:String,required:!0}},DE="saveVideoToPhotosAlbum",FE={formatArgs:{filePath(e,t){t.filePath=je(e)}}},VE={filePath:{type:String,required:!0}},UE="getRecorderManager",$E="compressImage",HE={formatArgs:{src(e,t){t.src=je(e)}}},jE={src:{type:String,required:!0}},zE="compressVideo",WE={formatArgs:{src(e,t){t.src=je(e)}}},GE={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},YE="request",qE={JSON:"json"},JE=["text","arraybuffer"],KE="text",wh=encodeURIComponent;function ZE(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let o=n[1]||"";e=n[0];let c=o.split("&").filter(b=>b),g={};c.forEach(b=>{let V=b.split("=");g[V[0]]=V[1]});for(let b in t)if(z.hasOwn(t,b)){let V=t[b];typeof V=="undefined"||V===null?V="":z.isPlainObject(V)&&(V=JSON.stringify(V)),g[wh(b)]=wh(V)}return o=Object.keys(g).map(b=>`${b}=${g[b]}`).join("&"),e+(o?"?"+o:"")+(r?"#"+r:"")}let XE={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},QE={formatArgs:{method(e,t){t.method=Sn((e||"").toUpperCase(),gr)},data(e,t){t.data=e||""},url(e,t){t.method===gr[0]&&z.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=ZE(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==gr[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||qE.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),JE.indexOf(t.responseType)===-1&&(t.responseType=KE)}}},ey="configMTLS",ty={certificates:{type:Array,required:!0}},ny={formatArgs:{certificates(e){if(e.some(t=>z.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},ry="downloadFile",iy={formatArgs:{header(e,t){t.header=e||{}}}},oy={url:{type:String,required:!0},header:Object,timeout:Number},ay="uploadFile",sy={formatArgs:{filePath(e,t){e&&(t.filePath=je(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},ly={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},cy="connectSocket",uy={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=Sn((e||"").toUpperCase(),gr)},protocols(e,t){z.isString(e)&&(t.protocols=[e])}}},fy={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},dy="sendSocketMessage",hy={data:[String,ArrayBuffer]},gy="closeSocket",py={code:Number,reason:String},vy="startLocationUpdate",Ch="onLocationChange",my="stopLocationUpdate",_y="offLocationChange",by="offLocationChangeError",Ah="onLocationChangeError",Oh=["wgs84","gcj02"],Ey={type:String},yy={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Oh.indexOf(e)===-1?t.type=Oh[1]:t.type=e}}};function Sy(e){if(!z.isString(e))return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(o=>{let c=o.replace(/\+/g," ").split("="),g=c.shift(),b=c.length>0?c.join("="):"";r.push(g+"="+encodeURIComponent(b))}),r.length?e+"?"+r.join("&"):e}let wy=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],Cy=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],wl={url:{type:String,required:!0}},Du="navigateTo",Fu="redirectTo",Th="reLaunch",Pc="switchTab",Ay="navigateBack",Vu="preloadPage",Ph="unPreloadPage",Oy=z.extend({},wl,Ih(wy)),Ty=z.extend({delta:{type:Number}},Ih(Cy)),Py=wl,Iy=wl,Ny=wl,ky=wl,Ry=wl,xy=Nc(Du),By=Nc(Fu),My=Nc(Th),Ly=Nc(Pc),Dy={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(In().length-1,e)}}};function Ih(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Ic;function Fy(){Ic=""}function Nc(e){return{formatArgs:{url:Vy(e)},beforeAll:Fy}}function Vy(e){return function(n,r){if(!n)return'Missing required args: "url"';n=Lo(n);let o=n.split("?")[0],c=Wi(o,!0);if(!c)return"page `"+n+"` is not found";if(e===Du||e===Fu){if(c.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Pc&&!c.meta.isTabBar)return"can not switch to no-tabBar page";if((e===Pc||e===Vu)&&c.meta.isTabBar&&r.openType!=="appLaunch"&&(n=o),c.meta.isEntry&&(n=n.replace(c.alias,"/")),r.url=Sy(n),e!==Ph){if(e===Vu){if(!c.meta.isNVue)return"can not preload vue page";if(c.meta.isTabBar){let g=In(),b=c.path.slice(1);if(g.find(V=>V.route===b))return"tabBar page `"+b+"` already exists"}return}if(Ic===n&&r.openType!=="appLaunch")return`${Ic} locked`;x.ready&&(Ic=n)}}}let Uy="hideLoading",$y="hideToast",Nh="loadFontFace",Hy={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},jy=["#ffffff","#000000"],zy="setNavigationBarColor",Wy={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},Gy={frontColor:{type:String,required:!0,validator(e){if(jy.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},Yy="setNavigationBarTitle",qy={title:{type:String,required:!0}},Jy="showNavigationBarLoading",Ky="hideNavigationBarLoading",kh="pageScrollTo",Zy={scrollTop:Number,selector:String,duration:Number},Xy={formatArgs:{duration:300}},Qy="showActionSheet",eS={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},tS={formatArgs:{itemColor:"#000"}},nS="showLoading",rS={title:String,mask:Boolean},iS={formatArgs:{title:"",mask:!1}},oS="showModal",aS={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},sS={beforeInvoke(){X()},formatArgs:{title:"",content:"",placeholderText:"",showCancel:!0,editable:!1,cancelText(e,t){if(!z.hasOwn(t,"cancelText")){let{t:n}=ae();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!z.hasOwn(t,"confirmText")){let{t:n}=ae();t.confirmText=n("uni.showModal.confirm")}},confirmColor:J.PRIMARY_COLOR}},lS="showToast",cS=["success","loading","none","error"],uS={title:String,icon:String,image:String,duration:Number,mask:Boolean},fS={formatArgs:{title:"",icon(e,t){t.icon=Sn(e,cS)},image(e,t){e?t.image=je(e):t.image=""},duration:1500,mask:!1}},dS="startPullDownRefresh",hS="stopPullDownRefresh",ec={index:{type:Number,required:!0}},Ps={beforeInvoke(){let e=is();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!x.tabBar.list[e])return"tabbar item not found"}}},gS="setTabBarItem",pS=z.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},ec),vS={beforeInvoke:Ps.beforeInvoke,formatArgs:z.extend({pagePath(e,t){e&&(t.pagePath=J.removeLeadingSlash(e))}},Ps.formatArgs)},mS="setTabBarStyle",_S={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},bS=/^(linear|radial)-gradient\(.+?\);?$/,ES={beforeInvoke:Ps.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!bS.test(e)&&(t.backgroundImage=je(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},yS="hideTabBar",Rh={animation:Boolean},SS="showTabBar",wS=Rh,CS="hideTabBarRedDot",AS=ec,OS=Ps,TS="showTabBarRedDot",PS=ec,IS=Ps,NS="removeTabBarBadge",kS=ec,RS=Ps,xS="setTabBarBadge",BS=z.extend({text:{type:String,required:!0}},ec),MS={beforeInvoke:Ps.beforeInvoke,formatArgs:z.extend({text(e,t){J.getLen(e)>=4&&(t.text="...")}},Ps.formatArgs)},LS="getProvider",DS={service:{type:String,required:!0}},FS="login",VS={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},US="getUserInfo",$S={provider:String,withCredentials:Boolean,timeout:Number,lang:String},HS="ggetUserProfilegetUserProfile",jS={provider:String,withCredentials:Boolean,timeout:Number,lang:String},zS="preLogin",WS={UNIVERIFY:"univerify"},GS={formatArgs:{provider(e,t){if(Object.values(WS).indexOf(String(e))<0)return"provider error"}}},YS={provider:{type:String,required:!0}},qS="closeAuthView",JS="getCheckBoxState",KS="getUniverifyManager",ZS="share",xh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],XS={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!xh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${xh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},QS={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},ew="shareWithSystem",Bh=["text","image"],tw={formatArgs:{type(e,t){if(e&&!Bh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=Sn(e,Bh)}}},nw={type:String,summary:String,href:String,imageUrl:String},rw="requestPayment",iw={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},ow="createPushMessage",aw={formatArgs:{content(e){if(!e)return"content is required"}}},sw="createRewardedVideoAd",lw={formatArgs:{adpid:"",adUnitId:""}},cw={adpid:String,adUnitId:String},uw="createFullScreenVideoAd",fw={formatArgs:{adpid:""}},dw={adpid:String},hw="createInterstitialAd",gw={formatArgs:{adpid:"",adUnitId:""}},pw={adpid:String,adUnitId:String},vw="createInteractiveAd",mw={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},_w={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function Xs(e,t){return function(r){delete r.code,delete r.message,z.isFunction(t)&&(r=t(r)),e(r)}}function dr(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,z.extend({code:0},r))}}function Cl(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),at.invokeOnCallback(t,r)})}}function fi(e,t,n){return function(r,{resolve:o,reject:c}){e()(z.extend({},z.isFunction(t)?t(r):r,{success:Xs(o,n),fail:dr(c)}))}}function tc(e=""){if(!(x.tabBar&&z.isArray(x.tabBar.list)))return!1;try{if(!e){let n=In();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=J.addLeadingSlash(e));let t=Wi(e);return t&&t.meta.isTabBar}catch(t){}return!1}let ya="__TYPE",bw="uni-storage-keys";function Uu(e){let t=["object","string","number","boolean","undefined"];try{let n=z.isString(e)?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let o=Object.keys(n);if(o.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(o.length===1)return""}}catch(n){}}let Ew=Lt(H0,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&Uu(r)!==void 0?s.storage.setItem(e+ya,n):s.storage.removeItem(e+ya),s.storage.setItem(e,r)}catch(o){}},j0),yw=Oe(U0,({key:e,data:t},{resolve:n,reject:r})=>{let o=typeof t,c=o==="string"?t:JSON.stringify({type:o,data:t});try{let g=s.storage;o==="string"&&Uu(c)!==void 0?g.setItemAsync(e+ya,o,()=>{}):g.removeItemAsync(e+ya,()=>{}),g.setItemAsync(e,c,n,dr(r))}catch(g){r(g.message)}},$0);function $u(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),o=Uu(r);if(o!==void 0)n=o;else if(e&&(n=r,z.isString(r))){r=JSON.parse(r);let c=typeof r;c==="number"&&e==="date"?n=new Date(r):c===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let Sw=Lt(V0,e=>{let t=s.storage.getItem(e),r=(s.storage.getItem(e+ya)||"").toLowerCase();return z.isString(t)?$u(r,t):""},bh),ww=Oe(F0,({key:e},{resolve:t,reject:n})=>{let r=s.storage;r.getItemAsync(e,function(o){r.getItemAsync(e+ya,function(c){let b=(c.data||"").toLowerCase();t({data:$u(b,o.data)})},function(){t({data:$u("",o.data)})})},dr(n))},_h),Cw=Lt(Eh,e=>{s.storage.removeItem(e+ya),s.storage.removeItem(e)},W0),Aw=Oe(Eh,({key:e},{resolve:t,reject:n})=>{s.storage.removeItemAsync(e+ya,()=>{}),s.storage.removeItemAsync(e,t,dr(n))},z0),Ow=Lt("clearStorageSync",()=>{s.storage.clear()}),Tw=Oe("clearStorage",(e,{resolve:t,reject:n})=>{s.storage.clearAsync(t,dr(n))}),Mh=Lt("getStorageInfoSync",()=>{let e=s.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let o=s.storage.key(r);if(o!==bw&&(o.indexOf(ya)<0||o.indexOf(ya)+ya.length!==o.length)){let c=s.storage.getItem(o);n+=o.length+c.length,t.push(o)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),Pw=Oe("getStorageInfo",(e,{resolve:t})=>{t(Mh())}),Iw=Oe(Q0,(e,{resolve:t,reject:n})=>{s.io.getFileInfo(z.extend(e,{success:Xs(t),fail:dr(n)}))},tE,eE),Nw=0,Lh="uniapp_save",kw=`_doc/${Lh}`;function Rw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(Lh,{create:!0},e,t)},t)}let xw=Oe(G0,({tempFilePath:e},{resolve:t,reject:n})=>{let r=dr(n),o=`${Date.now()}${Nw++}${Ka(e)}`;s.io.resolveLocalFileSystemURL(e,c=>{Rw(g=>{c.copyTo(g,o,()=>{let b=kw+"/"+o;t({savedFilePath:b})},r)},r)},r)},q0,Y0),Bw="uniapp_save";function Mw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(Bw,{create:!0},e,t)},t)}let Lw=Oe(J0,(e,{resolve:t,reject:n})=>{let r=dr(n);Mw(o=>{var c=o.createReader(),g=[];c.readEntries(b=>{b&&b.length?b.forEach(V=>{V.getMetadata(T=>{g.push({filePath:s.io.convertAbsoluteFileSystem(V.fullPath),createTime:T.modificationTime.getTime(),size:T.size}),g.length===b.length&&t({fileList:g})},r,!1)}):t({fileList:g})},r)},r)}),Dw=Oe(nE,({filePath:e},{resolve:t,reject:n})=>{let r=dr(n);s.io.resolveLocalFileSystemURL(e,o=>{o.getMetadata(c=>{t({createTime:c.modificationTime.getTime(),size:c.size})},r,!1)},r)},iE,rE),Fw=Oe(K0,({filePath:e},{resolve:t,reject:n})=>{let r=dr(n);s.io.resolveLocalFileSystemURL(e,o=>{o.remove(()=>{t()},r)},r)},X0,Z0),Vw=Oe(oE,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let o=dr(r);s.runtime.openDocument(je(e),void 0,n,o)},sE,aE),Uw=Lt(Pb,e=>!!z.hasOwn(I,e),Ib),nc,Dh=s.navigator.setStatusBarStyle;function $w(e){Dh=e}function Fh(e){nc=e,Dh(e)}s.navigator.setStatusBarStyle=Fh;function Da(e){if(!e){let t=wi();if(!t||(e=t.$page.statusBarStyle,!e||e===nc))return}e!==nc&&(nc=e,s.navigator.setStatusBarStyle(e))}function Vh(e){at.on(J.ON_THEME_CHANGE,e)}function Hw(e){at.off(J.ON_THEME_CHANGE,e)}function jw(){return Uh()==="dark"?"light":"dark"}function Uh(){return s.navigator.getUIStyle()}function zw(){if(x.darkmode){let e=jw();Da(e),Hn().forEach(n=>{n.$page.statusBarStyle=e})}}function Hu(e){if(x.darkmode){let t={},n=s.navigator.getUIStyle(),r=ic();return r&&r.hostTheme&&(n=r.hostTheme),t=J.normalizeStyles(e,x.themeConfig,n),t}return e}function Ww(e,t){if(x.darkmode){let n=()=>{let{list:r=[],color:o,selectedColor:c,backgroundColor:g,borderStyle:b}=Hu(t);e&&e.setTabBarStyle({color:o,selectedColor:c,backgroundColor:g,borderStyle:b}),e&&e.setTabBarItems({list:r.map(V=>({iconPath:V.iconPath,selectedIconPath:V.selectedIconPath,visible:V.visible}))})};n(),Vh(n)}}function $h(e,t){if(x.darkmode){let n=()=>{let r=t();r.animationAlphaBGColor,r.background,r.backgroundColorBottom,r.backgroundColorTop;var o=r.titleNView;typeof o!="undefined"&&typeof o=="object"&&(o.backgroundColor,o.titleColor),e&&e.setStyle(r)};Vh(n),e.addEventListener("close",()=>Hw(n))}}let rc,ju=!0,ir;function Gw(e,t,n){!ir||(e==="none"?(ir.hideTabBarRedDot({index:t}),ir.removeTabBarBadge({index:t})):e==="text"?ir.setTabBarBadge({index:t,text:n}):e==="redDot"&&ir.showTabBarRedDot({index:t}))}function Yw(e){ir&&ir.setTabBarItems(e)}function qw(e,t,n,r,o,c){let g={index:e};if(t!==void 0&&(g.text=t),n&&(g.iconPath=je(n)),r&&(g.selectedIconPath=je(r)),c!==void 0&&(g.iconfont=c),o!==void 0){g.visible=rc.list[e].visible=o,delete g.index;let b=rc.list.map(V=>({visible:V.visible}));b[e]=g,Yw({list:b})}else ir&&ir.setTabBarItem(g)}function Jw(e){ir&&ir.setTabBarStyle(e)}function Kw(e){ju=!1,ir&&ir.hideTabBar({animation:e})}function Zw(e){ju=!0,ir&&ir.showTabBar({animation:e})}let kc=[];var di={id:"0",init(e,t){e&&e.list.length&&(rc=e);try{ir=f.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}ir.onMaskClick(()=>{kc.forEach(n=>{n()})}),ir&&ir.onClick(({index:n})=>{t(rc.list[n],n)}),ir&&ir.onMidButtonClick(()=>at.invokeOnCallback(nh)),Ww(ir,e)},indexOf(e){let t=this.config,n=t&&t.list&&t.list.length;if(n){for(let r=0;r<n;r++)if(t.list[r].pagePath===e||t.list[r].pagePath===`${e}.html`)return r}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(ir&&ir.switchSelect({index:t}),!0):!1},setTabBarBadge:Gw,setTabBarItem:qw,setTabBarStyle:Jw,hideTabBar:Kw,showTabBar:Zw,append(e){ir&&ir.append({id:e.id},({code:t})=>{t!==0&&N(()=>{this.append(e)},20)})},get config(){return rc||x.tabBar},get visible(){return ju},get height(){let e=this.config;return(e&&e.height?parseFloat(e.height):J.TABBAR_HEIGHT)+s.navigator.getSafeAreaInsets().deviceBottom},get cover(){let e=this.config;return e&&["extralight","light","dark"].indexOf(e.blurEffect)>=0},setStyle({mask:e}){ir.setMask({color:e})},addEventListener(e,t){kc.push(t)},removeEventListener(e,t){let n=kc.indexOf(t);kc.splice(n,1)}};function Rc(){let e=wi();return e?e.$getAppWebview():null}function Hh(e){return e?e.$getAppWebview():Rc()}let jh=null;function zh(){return jh}function zu(e){jh=e}function Wu(){return s.navigator.isImmersedStatusbar()?Math.round(s.os.name==="iOS"?s.navigator.getSafeAreaInsets().top:s.navigator.getStatusbarHeight()):0}function Wh(){let e=s.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}function Xw(){let{resolutionWidth:e,resolutionHeight:t}=s.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let Gh=Lt("getWindowInfo",()=>{let e=s.os.name.toLowerCase()==="ios",{screenWidth:t,screenHeight:n}=Xw(),r=Wu(),o,c={height:0,cover:!1},g=Rc();if(g){let dt=g.getStyle(),gt=dt&&dt.titleNView;gt&&gt.type&&gt.type!=="none"&&(c.height=gt.type==="transparent"?0:r+J.NAVBAR_HEIGHT,c.cover=gt.type==="transparent"||gt.type==="float"),o=g.getSafeAreaInsets()}else o=s.navigator.getSafeAreaInsets();let b={height:0,cover:!1};tc()&&(b.height=di.visible?di.height:0,b.cover=di.cover);let V=c.cover?c.height:0,T=b.cover?b.height:0,D=n-c.height-b.height,_e=n-(c.cover?0:c.height)-(b.cover?0:b.height),Se=t;(!b.height||b.cover)&&!o.bottom&&o.deviceBottom&&(D-=o.deviceBottom,_e-=o.deviceBottom),o=e?o:{left:0,right:0,top:c.height&&!c.cover?0:r,bottom:0};let Pe={left:o.left,right:Se-o.right,top:o.top,bottom:_e-o.bottom,width:Se-o.left-o.right,height:_e-o.top-o.bottom};return{pixelRatio:s.screen.scale,screenWidth:t,screenHeight:n,windowWidth:Se,windowHeight:D,statusBarHeight:r,safeArea:Pe,safeAreaInsets:{top:o.top,right:o.right,bottom:o.bottom,left:o.left},windowTop:V,windowBottom:T,screenTop:n-D}}),Sa,xc=!0;function ic(){if(!xc)return;let{getSystemInfoSync:e}=f.requireModule("plus");if(Sa=e(),z.isString(Sa))try{Sa=JSON.parse(Sa)}catch(t){}return Sa}let Yh=Lt("getDeviceInfo",()=>{ic();let{deviceBrand:e="",deviceModel:t,osName:n,osVersion:r,deviceOrientation:o,deviceType:c,deviceId:g}=Sa,b=e.toLowerCase(),V=n.toLowerCase();return{brand:b,deviceBrand:b,deviceModel:t,devicePixelRatio:s.screen.scale,deviceId:g,deviceOrientation:o,deviceType:c,model:t,platform:V,system:`${V==="ios"?"iOS":"Android"} ${r}`}}),qh=Lt("getAppBaseInfo",()=>{ic();let{hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,osLanguage:o,hostTheme:c,appId:g,appName:b,appVersion:V,appVersionCode:T,appWgtVersion:D}=Sa;return{appId:g,appName:b,appVersion:V,appVersionCode:T,appWgtVersion:D,appLanguage:Kl?Kl():o,enableDebug:!1,hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,hostTheme:c,hostFontSizeSetting:void 0,hostSDKVersion:void 0,language:o,SDKVersion:"",theme:Uh(),version:s.runtime.innerVersion}}),Jh=Lt("getSystemInfoSync",()=>{xc=!0,ic(),xc=!1;let e=Gh(),t=Yh(),n=qh();xc=!0;let r={fontSizeSetting:n.hostFontSizeSetting,osName:Sa.osName.toLowerCase()};Sa.hostName&&(r.hostSDKVersion=Sa.uniRuntimeVersion);let o=z.extend(Sa,e,t,n,r);return delete o.screenTop,delete o.enableDebug,x.darkmode||delete o.theme,J.sortObject(o)}),Qw=Oe("getSystemInfo",(e,{resolve:t})=>t(Jh())),Al=null,eC=gn(fh,()=>{Kh()}),tC=Xr(jb,()=>{Zh()}),Kh=Oe(zb,(e,{resolve:t,reject:n})=>{Al||(Al=s.orientation.watchOrientation(r=>{at.invokeOnCallback(fh,{direction:r.magneticHeading})},r=>{n(r.message),Al=null},{frequency:so})),N(t,so)}),Zh=Oe(Wb,(e,{resolve:t})=>{Al&&(s.orientation.clearWatch(Al),Al=null),t()}),nC=Oe(Gb,(e,{resolve:t})=>{s.device.vibrate(15),t()}),rC=Oe(Yb,(e,{resolve:t})=>{s.device.vibrate(400),t()}),Ol=null,iC=gn(uh,()=>{Xh()}),oC=Xr(Ub,()=>{Qh()}),Xh=Oe($b,(e,{resolve:t,reject:n})=>{Ol||(Ol=s.accelerometer.watchAcceleration(r=>{at.invokeOnCallback(uh,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{Ol=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:so})),N(t,so)}),Qh=Oe(Hb,(e,{resolve:t})=>{Ol&&(s.accelerometer.clearWatch(Ol),Ol=null),t()}),aC=gn(dh,Cl(()=>s.bluetooth.onBluetoothDeviceFound.bind(s.bluetooth),dh)),sC=gn(hh,Cl(()=>s.bluetooth.onBluetoothAdapterStateChange.bind(s.bluetooth),hh)),lC=gn(gh,Cl(()=>s.bluetooth.onBLEConnectionStateChange.bind(s.bluetooth),gh)),cC=gn(ph,Cl(()=>s.bluetooth.onBLECharacteristicValueChange.bind(s.bluetooth),ph)),uC=Oe("openBluetoothAdapter",fi(()=>s.bluetooth.openBluetoothAdapter.bind(s.bluetooth))),fC=Oe("closeBluetoothAdapter",fi(()=>s.bluetooth.closeBluetoothAdapter.bind(s.bluetooth))),dC=Oe("getBluetoothAdapterState",fi(()=>s.bluetooth.getBluetoothAdapterState.bind(s.bluetooth))),hC=Oe(qb,fi(()=>s.bluetooth.startBluetoothDevicesDiscovery.bind(s.bluetooth)),Jb),gC=Oe("stopBluetoothDevicesDiscovery",fi(()=>s.bluetooth.stopBluetoothDevicesDiscovery.bind(s.bluetooth))),pC=Oe("getBluetoothDevices",fi(()=>s.bluetooth.getBluetoothDevices.bind(s.bluetooth))),vC=Oe(Kb,fi(()=>s.bluetooth.getConnectedBluetoothDevices.bind(s.bluetooth)),Zb),mC=Oe(Xb,fi(()=>s.bluetooth.createBLEConnection.bind(s.bluetooth)),Qb),_C=Oe(e0,fi(()=>s.bluetooth.closeBLEConnection.bind(s.bluetooth)),t0),bC=Oe(n0,fi(()=>s.bluetooth.getBLEDeviceServices.bind(s.bluetooth)),r0),EC=Oe(i0,fi(()=>s.bluetooth.getBLEDeviceCharacteristics.bind(s.bluetooth)),o0),yC=Oe(a0,fi(()=>s.bluetooth.notifyBLECharacteristicValueChange.bind(s.bluetooth)),s0),SC=Oe(l0,fi(()=>s.bluetooth.readBLECharacteristicValue.bind(s.bluetooth)),c0),wC=Oe(u0,fi(()=>s.bluetooth.writeBLECharacteristicValue.bind(s.bluetooth)),f0),CC=Oe(d0,fi(()=>s.bluetooth.setBLEMTU.bind(s.bluetooth)),h0),AC=Oe(g0,fi(()=>s.bluetooth.getBLEDeviceRSSI.bind(s.bluetooth)),p0),OC=gn(vh,Cl(()=>s.ibeacon.onBeaconUpdate.bind(s.ibeacon),vh)),TC=gn(mh,Cl(()=>s.ibeacon.onBeaconServiceChange.bind(s.ibeacon),mh)),PC=Oe(v0,fi(()=>s.ibeacon.getBeacons.bind(s.ibeacon))),IC=Oe(m0,fi(()=>s.ibeacon.startBeaconDiscovery.bind(s.ibeacon)),_0),NC=Oe(b0,fi(()=>s.ibeacon.stopBeaconDiscovery.bind(s.ibeacon))),kC=Oe(kb,({phoneNumber:e},{resolve:t})=>(s.device.dial(e),t()),Rb),RC={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},xC=["type","preferred"];function Gu(e,t,n){let r=0;return Object.keys(n).forEach(o=>{let c=n[o];typeof c!=="object"?xC.indexOf(o)!==-1?e[o]=n[o]:typeof t[c]!="undefined"?(r++,e[o]=t[c]):delete e[o]:c instanceof Array?(e[o]=[],c.forEach(b=>{let V={};Gu(V,t,b)&&e[o].push(V)}),e[o].length?r++:delete e[o]):(e[o]={},Gu(e[o],t,c)?r++:delete e[o])}),r}let BC=Oe(xb,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),s.contacts.getAddressBook(s.contacts.ADDRESSBOOK_PHONE,r=>{let o=r.create();Gu(o,e,RC),o.save(()=>t(),c=>n())},r=>n())},Mb,Bb);function Yo(e){return typeof f!="undefined"?f.requireModule(e):__requireNativePlugin__(e)}function eg(e,t,n){return Yo("plus").sendNativeEvent(e,t,n)}let MC=Oe(Lb,(e,{resolve:t,reject:n})=>{Yo("clipboard").getString(o=>{o.result==="success"?t({data:o.data}):n("getClipboardData:fail")})}),LC=Oe(Db,(e,{resolve:t})=>{Yo("clipboard").setString(e.data),t()},Vb,Fb),tg="onNetworkStatusChange";function ng(){rg().then(({networkType:e})=>{at.invokeOnCallback(tg,{isConnected:e!=="none",networkType:e})})}let DC=gn(tg,()=>{s.globalEvent.addEventListener("netchange",ng)}),FC=Xr("offNetworkStatusChange",()=>{s.globalEvent.removeEventListener("netchange",ng)}),rg=Oe("getNetworkType",(e,{resolve:t})=>{let n=qa[s.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function ig(){if(s.os.name.toLowerCase()!=="ios")return!1;let t=Yo("faceID");return!!(t&&t.isSupport())}function og(){return!!(s.fingerprint&&s.fingerprint.isSupport())}let ag=e=>{let t=[];return og()&&t.push("fingerPrint"),ig()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},VC=Oe(w0,(e,{resolve:t,reject:n})=>{ag(t)}),sg=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(c,g)=>n&&n(c,g),o=c=>t&&t(c);if(e==="fingerPrint"){if(og()){let c=s.fingerprint.isKeyguardSecure()&&s.fingerprint.isEnrolledFingerprints();return o({isEnrolled:c}),{isEnrolled:c,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(ig()){let c=Yo("faceID"),g=c&&c.isKeyguardSecure()&&c.isEnrolledFaceID();return o({isEnrolled:g}),{isEnrolled:g,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},UC=Oe(C0,({checkAuthMode:e},{resolve:t,reject:n})=>{sg({checkAuthMode:e,resolve:t,reject:n})},T0,O0),$C=Oe(P0,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:o})=>{xn();let{t:c}=ae(),{supportMode:g}=ag();if(!g.length)return o("not support",{authMode:"fingerPrint",errCode:90001});let b=[];if(e.forEach(dt=>{g.indexOf(dt)>-1&&b.push(dt)}),!b.length)return o("startSoterAuthentication:fail no corresponding mode",{authMode:"fingerPrint",errCode:90003});let V=[];if(b.forEach(dt=>{sg({checkAuthMode:dt}).isEnrolled&&V.push(dt)}),!V.length)return o(`startSoterAuthentication:fail no ${b[0]} enrolled`,{authMode:b[0],errCode:90011});let T=V[0],D=null,_e,Se=n||c("uni.startSoterAuthentication.authContent"),Pe=dt=>{let{code:gt}=dt,Ft={authMode:T},yt={4:()=>{D?(S(_e),D.setTitle(c("uni.startSoterAuthentication.waitingContent")),_e=N(()=>{D&&D.setTitle(Se)},1e3)):o("",z.extend(Ft,{errCode:90009}))},5:()=>{s.nativeUI.closeWaiting(),o("authenticate freeze. please try again later",z.extend(Ft,{errCode:90010}))},6:()=>{s.nativeUI.closeWaiting(),o("cancel",z.extend(Ft,{errCode:90008}))}};gt&&yt[gt]?yt[gt]():(s.nativeUI.closeWaiting(),o("",z.extend(Ft,{errCode:90007})))};T==="fingerPrint"?(s.os.name.toLowerCase()==="android"&&(D=s.nativeUI.showWaiting(Se),D.onclose=function(){s.fingerprint.cancel()}),s.fingerprint.authenticate(()=>{s.nativeUI.closeWaiting(),r({authMode:T,errCode:0})},Pe,{message:Se})):T==="facial"&&Yo("faceID").authenticate({message:Se},gt=>{gt.type==="success"&&gt.code===0?r({authMode:T,errCode:0}):Pe(gt)})},N0,I0),HC=Oe(k0,(e,{resolve:t,reject:n})=>{Zt();let{t:r}=ae(),c=Wh()!=="light",g,b=!1,V=Yi({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{V.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:T,detail:D}){g=D,b=T==="marked"},onClose(){c&&s.navigator.setStatusBarStyle("dark"),g?b?(delete g.message,t(g)):n(g.message):n("cancel")}});c&&(s.navigator.setStatusBarStyle("light"),V.webview.addEventListener("popGesture",({type:T,result:D})=>{T==="start"?s.navigator.setStatusBarStyle("dark"):T==="end"&&!D&&s.navigator.setStatusBarStyle("light")}))},R0,B0),lg=e=>{at.invokeOnCallback(J.ON_THEME_CHANGE,e)},jC=gn(J.ON_THEME_CHANGE,()=>{at.on(J.ON_THEME_CHANGE,lg)}),zC=Xr(J.OFF_THEME_CHANGE,()=>{at.off(J.ON_THEME_CHANGE,lg)}),WC=Oe(E0,(e,{resolve:t})=>{let n=s.screen.getBrightness(!1);t({value:n})}),GC=Oe(y0,(e,{resolve:t})=>{s.screen.setBrightness(e.value,!1),t()}),YC=Oe(S0,(e,{resolve:t})=>{s.device.setWakelock(!!e.keepScreenOn),t()}),qC=Lt(M0,()=>{let{getSystemSetting:e}=f.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}return t}),cg=Lt(L0,()=>{let{getAppAuthorizeSetting:e}=f.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}for(let n in t)z.hasOwn(t,n)&&t[n]==="undefined"&&(t[n]=void 0);return t}),JC=Oe(D0,(e,{resolve:t,reject:n})=>{let{openAppAuthorizeSetting:r}=f.requireModule("plus");r(c=>{c.type==="success"?t():n()})}),KC=Oe(CE,(e,{resolve:t,reject:n})=>{let r=Wr+"/download/";s.io.getImageInfo(z.extend(e,{savePath:r,filename:r,success:Xs(t),fail:dr(n)}))},OE,AE),ZC=Oe(kE,(e,{resolve:t,reject:n})=>{s.io.getVideoInfo({filePath:e.src,success:r=>{t({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate})},fail:dr(n)})},xE,RE),XC=Oe(TE,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:o},{resolve:c,reject:g})=>{Ne();let{t:b}=ae();r=r.map(T=>je(T));let V=Number(e);isNaN(V)?(e=r.indexOf(je(e)),e=e<0?0:e):e=V,s.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(T){let D=[],_e="",Se=o&&z.isPlainObject(o);Se?(D=o.itemList?o.itemList:[],_e=o.itemColor?o.itemColor:"#000000"):(D=[b("uni.previewImage.button.save")],_e="#000000");let Pe={buttons:D.map(dt=>({title:dt,color:_e})),cancel:b("uni.previewImage.cancel")};s.nativeUI.actionSheet(Pe,dt=>{if(dt.index>0){if(Se){z.isFunction(o.success)&&o.success({tapIndex:dt.index-1,index:T.index});return}s.gallery.save(T.url,()=>{s.nativeUI.toast(b("uni.previewImage.save.success"))},function(){s.nativeUI.toast(b("uni.previewImage.save.fail"))})}else Se&&z.isFunction(o.fail)&&o.fail({errMsg:"showActionSheet:fail cancel"})})}}),c()},IE,PE),QC=Oe(NE,(e,{resolve:t,reject:n})=>{try{s.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Yu,Tl=!1,qu,Pl=(e,t={})=>{eA(z.extend({state:e},t))},oc={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:o="mp3",frameSize:c}={}){if(Tl)return Pl("start");Yu=s.audio.getRecorder(),Yu.record({format:o,samplerate:t?String(t):void 0,filename:Wr+"/recorder/"},g=>Pl("stop",{tempFilePath:g}),g=>Pl("error",{errMsg:g.message})),qu=N(()=>{oc.stop()},e),Pl("start"),Tl=!0},stop(){Tl&&(Yu.stop(),Tl=!1,qu&&S(qu))},pause(){Tl&&Pl("error",{errMsg:"Unsupported operation: pause"})},resume(){Tl&&Pl("error",{errMsg:"Unsupported operation: resume"})}},Qs={pause:null,resume:null,start:null,stop:null,error:null};function eA(e){let t=e.state;delete e.state,delete e.errMsg,t&&z.isFunction(Qs[t])&&Qs[t](e)}class tA{constructor(){}onError(t){Qs.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){Qs.pause=t}onResume(t){Qs.resume=t}onStart(t){Qs.start=t}onStop(t){Qs.stop=t}pause(){oc.pause()}resume(){oc.resume()}start(t={}){oc.start(t)}stop(){oc.stop()}}let ug,nA=Lt(UE,()=>ug||(ug=new tA)),rA=Oe(DE,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,Xs(t),dr(n))},VE,FE),iA=Oe(BE,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,Xs(t),dr(n))},LE,ME),oA=Oe($E,(e,{resolve:t,reject:n})=>{let r=`${Wr}/compressed/${Date.now()}_${Ja(e.src)}`,{compressedWidth:o,compressedHeight:c}=e;typeof o=="number"&&(e.width=o+"px"),typeof c=="number"&&(e.height=c+"px"),s.zip.compressImage(z.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},jE,HE),aA=Oe(zE,(e,{resolve:t,reject:n})=>{let r=`${Wr}/compressed/${Date.now()}_${Ja(e.src)}`;s.zip.compressVideo(z.extend({},e,{filename:r}),o=>{t({tempFilePath:r,size:o.size})},n)},GE,WE);function sA(e){return new Promise((t,n)=>{s.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let lA=Oe(_E,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:o,reject:c})=>{K();let{t:g}=ae(),b=dr(c);function V(_e){let Se=[],Pe=[];Promise.all(_e.map(dt=>sA(dt))).then(dt=>{dt.forEach((gt,Ft)=>{let yt=_e[Ft];Pe.push(yt),Se.push({path:yt,size:gt.size})}),o({tempFilePaths:Pe,tempFiles:Se})}).catch(b)}function T(){s.camera.getCamera().captureImage(Se=>V([Se]),b,{filename:Wr+"/camera/",resolution:"high",crop:r,sizeType:t})}function D(){s.gallery.pick(({files:_e})=>V(_e),b,{maximum:e,multiple:!0,system:!1,filename:Wr+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){D();return}else if(n.includes("camera")){T();return}}s.nativeUI.actionSheet({cancel:g("uni.chooseImage.cancel"),buttons:[{title:g("uni.chooseImage.sourceType.camera")},{title:g("uni.chooseImage.sourceType.album")}]},_e=>{switch(_e.index){case 1:T();break;case 2:D();break;default:b();break}})},EE,bE),cA=Oe(yE,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:o,reject:c})=>{ie();let{t:g}=ae(),b=dr(c);function V(_e){s.io.getVideoInfo({filePath:_e,success(Se){let Pe={errMsg:"chooseVideo:ok",tempFilePath:_e,size:Se.size,duration:Se.duration,width:Se.width,height:Se.height};o(Pe)},fail:b})}function T(){s.gallery.pick(({files:_e})=>V(_e[0]),b,{filter:"video",system:!1,multiple:!0,maximum:1,filename:Wr+"/gallery/",permissionAlert:!0,videoCompress:t})}function D(){s.camera.getCamera().startVideoCapture(V,b,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:Wr+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){T();return}else if(e.includes("camera")){D();return}}s.nativeUI.actionSheet({cancel:g("uni.chooseVideo.cancel"),buttons:[{title:g("uni.chooseVideo.sourceType.camera")},{title:g("uni.chooseVideo.sourceType.album")}]},_e=>{switch(_e.index){case 1:D();break;case 2:T();break;default:b();break}})},wE,SE),uA=Oe(cE,(e,{resolve:t})=>{s.key.showSoftKeybord(),t()}),fA=Oe(lE,(e,{resolve:t})=>{s.key.hideSoftKeybord(),t()});function fg(e){at.invokeOnCallback(J.ON_KEYBOARD_HEIGHT_CHANGE,e)}let dA=gn(J.ON_KEYBOARD_HEIGHT_CHANGE,()=>{at.on(J.ON_KEYBOARD_HEIGHT_CHANGE,fg)}),hA=Xr(J.ON_KEYBOARD_HEIGHT_CHANGE,()=>{at.off(J.ON_KEYBOARD_HEIGHT_CHANGE,fg)});class gA{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(o=>{o({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){!z.isFunction(t)||this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let pA=Ur(ry,({url:e,header:t,timeout:n},{resolve:r,reject:o})=>{n=(n||x.networkTimeout&&x.networkTimeout.request||60*1e3)/1e3;let c=s.downloader.createDownload(e,{timeout:n,filename:Wr+"/download/",retry:0,retryInterval:0},(b,V)=>{V?r({tempFilePath:b.filename,statusCode:V}):o(`statusCode: ${V}`)}),g=new gA(c);for(let b in t)z.hasOwn(t,b)&&c.setRequestHeader(b,t[b]);return c.start(),g},oy,iy),vA=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let o=0;o<r.length;o++)r[o].indexOf("Expires=")!==-1||r[o].indexOf("expires=")!==-1?n.push(r[o].replace(",","")):n.push(r[o]);return n=n.join(";").split(","),n};function mA(e,t){if(z.isString(e.data)&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),z.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let o=e.header[r];return z.isArray(o)?n[r]=o.join(","):z.isString(o)&&(n[r]=o),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class _A{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let bA=Ur(YE,(e,{resolve:t,reject:n})=>{let{header:r,method:o,data:c,timeout:g,url:b,responseType:V,sslVerify:T,firstIpv4:D,tls:_e}=e,Se;for(let ct in r)if(ct.toLowerCase()==="content-type"){Se=r[ct];break}o!=="GET"&&Se.indexOf("application/json")===0&&z.isPlainObject(c)&&(c=JSON.stringify(c));let Pe=Yo("stream"),dt={},gt,Ft,yt=!1;for(let ct in r)if(!yt&&ct.toLowerCase()==="content-type"){if(yt=!0,dt["Content-Type"]=r[ct],o!=="GET"&&r[ct].indexOf("application/x-www-form-urlencoded")===0&&!z.isString(c)&&!(c instanceof ArrayBuffer)){let yn=[];for(let ln in c)z.hasOwn(c,ln)&&yn.push(encodeURIComponent(ln)+"="+encodeURIComponent(c[ln]));c=yn.join("&")}}else dt[ct]=r[ct];!yt&&o==="POST"&&(dt["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),g&&(gt=N(()=>{Ft=!0,n("timeout")},g+200));let vn={method:o,url:b.trim(),headers:dt,type:V==="arraybuffer"?"base64":"text",timeout:g||6e5,sslVerify:!T,firstIpv4:D,tls:_e},rn=!1;o!=="GET"&&(toString.call(c)==="[object ArrayBuffer]"?rn=!0:vn.body=z.isString(c)?c:JSON.stringify(c));let sn=({ok:ct,status:yn,data:ln,headers:Kt,errorMsg:Tn})=>{if(Ft)return;gt&&S(gt);let hr=yn;if(hr>0)t(mA({data:ct&&V==="arraybuffer"?Ri(ln):ln,statusCode:hr,header:Kt,cookies:vA(Kt)},e));else{let en="abort statusCode:"+hr;Tn&&(en=en+" "+Tn),n(en)}};return rn?Pe.fetchWithArrayBuffer({"@type":"binary",base64:Tr(c)},vn,sn):Pe.fetch(vn,sn),new _A({abort(){Ft=!0,gt&&S(gt),n("abort")}})},XE,QE),EA=Oe(ey,({certificates:e},{resolve:t,reject:n})=>{Yo("stream").configMTLS(e,({type:o,code:c,message:g})=>{switch(o){case"success":t({code:c});break;case"fail":n(g,{code:c});break}})},ty,ny),Il=[],Nl={},Ju={open:"",close:"",error:"",message:""},ac;function yA(e){let t=String(Date.now()),n;try{ac||(ac=Yo("uni-webSocket"),SA(ac)),ac.WebSocket({id:t,url:e.url,protocol:z.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:ac,socketId:t,errMsg:n}}function SA(e){e.onopen(t=>{let n=Nl[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=Nl[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=Nl[t.id];!n||n._socketOnError()}),e.onclose(t=>{let{id:n,code:r,reason:o}=t,c=Nl[n];!c||c._socketOnClose({code:r,reason:o})})}class wA{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Ri(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(t){this.socketStateChange("close",t),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete Nl[this.id];let t=Il.indexOf(this);t>=0&&Il.splice(t,1)}socketStateChange(t,n={}){let{code:r,reason:o}=n,c=t==="message"?{data:n.data}:t==="close"?{code:r,reason:o}:{};this===Il[0]&&Ju[t]&&at.invokeOnCallback(Ju[t],c),this._callbacks[t].forEach(g=>{z.isFunction(g)&&g(c)})}send(t,n=!0){this.readyState!==this.OPEN&&J.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Tr(t.data)}:t.data}),n&&J.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&J.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(z.extend({id:this.id,args:t})),n&&J.callOptions(t,"closeSocket:ok")}catch(r){n&&J.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let CA=Ur(cy,({url:e,protocols:t,header:n,method:r},{resolve:o,reject:c})=>{let{socket:g,socketId:b,errMsg:V}=yA({url:e,protocols:t,header:n,method:r}),T=new wA(g,b);return V?N(()=>{c(V)},0):(Il.push(T),Nl[b]=T),N(()=>{o()},0),T},fy,uy),AA=Oe(dy,(e,{resolve:t,reject:n})=>{let r=Il[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},hy),OA=Oe(gy,(e,{resolve:t,reject:n})=>{let r=Il[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},py);function Bc(e){let t=`onSocket${z.capitalize(e)}`;return gn(t,()=>{Ju[e]=t})}let TA=Bc("open"),PA=Bc("error"),IA=Bc("message"),NA=Bc("close");class kA{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(o=>{o({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){!z.isFunction(t)||this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let RA=Ur(ay,({url:e,timeout:t,header:n,formData:r,files:o,filePath:c,name:g},{resolve:b,reject:V})=>{t=(t||x.networkTimeout&&x.networkTimeout.uploadFile||60*1e3)/1e3;let T=s.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(_e,Se)=>{Se?b({data:_e.responseText,statusCode:Se}):V(`statusCode: ${Se}`)});for(let _e in n)z.hasOwn(n,_e)&&T.setRequestHeader(_e,String(n[_e]));for(let _e in r)z.hasOwn(r,_e)&&T.addData(_e,String(r[_e]));o&&o.length?o.forEach(_e=>{T.addFile(je(_e.uri),{key:_e.name||"file"})}):T.addFile(je(c),{key:g});let D=new kA(T);return T.start(),D},ly,sy),Is={},xA=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],dg="playback",BA=200,MA=e=>{let t=Is[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{hg({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),xA.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),hg({state:n,audioId:e})})}))};function LA(){let e=`${Date.now()}${Math.random()}`,t=Is[e]=s.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(dg),{errMsg:"createAudioInstance:ok",audioId:e}}function DA({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:o=!1,obeyMuteSwitch:c,volume:g,sessionCategory:b=dg,playbackRate:V}){let T=Is[e];if(T){let D={loop:o,autoplay:r};if(t){let _e=je(t);T.src!==_e&&(T.src=D.src=_e)}n&&(T.startTime=D.startTime=n),typeof g=="number"&&(T.volume=D.volume=g),T.setStyles(D),b&&T.setSessionCategory(b),V&&T.playbackRate&&T.playbackRate(V),MA(e)}return{errMsg:"setAudioState:ok"}}function FA({audioId:e}){let t=Is[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:o}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:o,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function VA({operationType:e,audioId:t,currentTime:n}){let r=Is[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let Ku=Object.create(null),hg=({state:e,audioId:t,errMsg:n,errCode:r})=>{let o=Ku[t];if(o)if(Xu(o,e,n,r),e==="play"){let c=o.currentTime;Xu(o,"timeUpdate"),o.__timing=h(()=>{o.currentTime!==c&&Xu(o,"timeUpdate")},BA)}else(e==="pause"||e==="stop"||e==="error")&&E(o.__timing)},UA=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class Zu{constructor(t){this.id=t,this._callbacks={},this._options={},Kd.forEach(n=>{this._callbacks[n]=[]}),UA.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let o=n.cache?this._options:FA({audioId:this.id}),c=r in o?o[r]:n.default;return typeof c=="number"&&r!=="volume"?c/1e3:c},set:n.readonly?void 0:o=>{this._options[r]=o,DA(z.extend({},this._options,{audioId:this.id}))}})}),$A()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){E(this.__timing),Is[this.id]&&(Is[this.id].close(),delete Is[this.id]),delete Ku[this.id]}_operate(t,n){VA(z.extend({},n,{audioId:this.id,operationType:t}))}}let $A=J.once(()=>{Kd.forEach(e=>{Zu.prototype[e]=function(t){z.isFunction(t)&&this._callbacks[e].push(t)}}),D_.forEach(e=>{Zu.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function Xu(e,t,n,r){let o=`on${z.capitalize(t)}`;e._callbacks[o].forEach(c=>{z.isFunction(c)&&c(t==="error"?{errMsg:n,errCode:r}:{})})}let HA=Lt(d_,()=>{let{audioId:e}=LA(),t=new Zu(e);return Ku[e]=t,t}),jA=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],gg={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},an,Qu=null,zA=250,WA=["play","pause","ended","stop","canplay"];function GA(){Mc(),el({state:"timeUpdate"}),Qu=h(()=>{el({state:"timeUpdate"})},zA)}function Mc(){Qu!==null&&E(Qu)}function YA(){if(an)return;let e=at.invokeOnCallback;an=s.audio.createPlayer({autoplay:!0,backgroundControl:!0}),an.src=an.title=an.epname=an.singer=an.coverImgUrl=an.webUrl="",an.startTime=0,WA.forEach(t=>{an.addEventListener(t,()=>{t==="play"?(an.isStopped=!1,GA()):t==="stop"&&(an.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&Mc();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:an.src,errMsg:`${n}:ok`}),el({state:t,dataUrl:an.src})})}),an.addEventListener("waiting",()=>{Mc(),el({state:"waiting",dataUrl:an.src})}),an.addEventListener("error",t=>{Mc(),e("onMusicError",{dataUrl:an.src,errMsg:"Error:"+t.message}),el({state:"error",dataUrl:an.src,errMsg:t.message,errCode:t.code})}),an.addEventListener("prev",()=>{el({state:"prev"})}),an.addEventListener("next",()=>{el({state:"next"})})}function qA(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(an){let t={duration:an.getDuration()||0,currentTime:an.isStopped?0:an.getPosition(),paused:an.isPaused(),src:an.src,buffered:an.getBuffered(),title:an.title,epname:an.epname,singer:an.singer,coverImgUrl:an.coverImgUrl,webUrl:an.webUrl,startTime:an.startTime};e=z.extend(e,t)}return e}function pg(e,t){YA();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let o=e[t];an.playbackRate&&an.playbackRate(parseFloat(o));return}let r={};Object.keys(e).forEach(o=>{if(n.indexOf(o)>=0){let c=e[o];o===n[0]&&c&&(c=je(c)),an[o]=r[o]=c}}),an.setStyles(r)}function JA({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:o,coverImgUrl:c}){var g=["resume","pause","stop"];return g.indexOf(e)>0?an&&an[e]():e==="play"?(pg({src:t,startTime:n,title:o,coverImgUrl:c}),an.play()):e==="seek"&&an&&an.seekTo(n),{errMsg:`${r}:ok`}}function KA({operationType:e,src:t,startTime:n,currentTime:r}){return JA({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function el({state:e,errMsg:t,errCode:n,dataUrl:r}){gg[e].forEach(o=>{z.isFunction(o)&&o(e==="error"?{errMsg:t,errCode:n}:{})})}let ZA=J.once(()=>{jA.forEach(e=>{vg.prototype[`on${z.capitalize(e)}`]=function(t){gg[e].push(t)}})}),XA=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class vg{constructor(){this._options={},XA.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:qA();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,pg(this._options,n)}})}),ZA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){KA(z.extend({},n,{operationType:t}))}}let mg,QA=Lt(Nb,()=>mg||(mg=new vg));class eO{constructor(t,n){this.id=t,this.ctx=n}start(t){return Yt(this.ctx,"start",t)}stop(t){return Yt(this.ctx,"stop",t)}pause(t){return Yt(this.ctx,"pause",t)}resume(t){return Yt(this.ctx,"resume",t)}switchCamera(t){return Yt(this.ctx,"switchCamera",t)}snapshot(t){return Yt(this.ctx,"snapshot",t)}toggleTorch(t){return Yt(this.ctx,"toggleTorch",t)}playBGM(t){return Ht(this.ctx,"playBGM",t)}stopBGM(t){return Yt(this.ctx,"stopBGM",t)}pauseBGM(t){return Yt(this.ctx,"pauseBGM",t)}resumeBGM(t){return Yt(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Ht(this.ctx,"setBGMVolume",t)}startPreview(t){return Yt(this.ctx,"startPreview",t)}stopPreview(t){return Yt(this.ctx,"stopPreview",t)}}function Ns(e,t,n,r){at.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class tO{constructor(t,n){this.id=t,this.pageId=n}start(){Ns(this.id,this.pageId,"start")}stop(){Ns(this.id,this.pageId,"stop")}pause(){Ns(this.id,this.pageId,"pause")}resume(){Ns(this.id,this.pageId,"resume")}switchCamera(){Ns(this.id,this.pageId,"switchCamera")}startPreview(){Ns(this.id,this.pageId,"preview")}stopPreview(){Ns(this.id,this.pageId,"stop")}snapshot(){Ns(this.id,this.pageId,"snapshot")}}let nO=Lt(h_,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=Vt(e,t);return n?new eO(e,n):console.warn("Can not find `"+e+"`")}return new tO(e,t.$page.id)},g_),Pi=3.141592653589793,Lc=6378245,Dc=.006693421622965943;function rO(e,t){if(t=+t,e=+e,_g(e,t))return[e,t];let n=bg(e-105,t-35),r=Eg(e-105,t-35),o=t/180*Pi,c=Math.sin(o);c=1-Dc*c*c;let g=Math.sqrt(c);n=n*180/(Lc*(1-Dc)/(c*g)*Pi),r=r*180/(Lc/g*Math.cos(o)*Pi);let b=t+n,V=e+r;return[e*2-V,t*2-b]}function iO(e,t){if(t=+t,e=+e,_g(e,t))return[e,t];let n=bg(e-105,t-35),r=Eg(e-105,t-35),o=t/180*Pi,c=Math.sin(o);c=1-Dc*c*c;let g=Math.sqrt(c);n=n*180/(Lc*(1-Dc)/(c*g)*Pi),r=r*180/(Lc/g*Math.cos(o)*Pi);let b=t+n;return[e+r,b]}let _g=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},bg=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*Pi)+20*Math.sin(2*e*Pi))*2/3,n+=(20*Math.sin(t*Pi)+40*Math.sin(t/3*Pi))*2/3,n+=(160*Math.sin(t/12*Pi)+320*Math.sin(t*Pi/30))*2/3,n},Eg=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*Pi)+20*Math.sin(2*e*Pi))*2/3,n+=(20*Math.sin(e*Pi)+40*Math.sin(e/3*Pi))*2/3,n+=(150*Math.sin(e/12*Pi)+300*Math.sin(e/30*Pi))*2/3,n};function yg(e,t,n){let r=t.coords;if(e!==t.coordsType){let o;e==="wgs84"?o=rO(r.longitude,r.latitude):e==="gcj02"&&(o=iO(r.longitude,r.latitude)),o&&(r.longitude=o[0],r.latitude=o[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let oO=Oe(dE,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:o=!1},{resolve:c,reject:g})=>{s.geolocation.getCurrentPosition(b=>{yg(e,b,c)},b=>{if(b.code===1501){yg(e,b,c);return}g("getLocation:fail "+b.message)},{geocode:t,enableHighAccuracy:o||n,timeout:r,coordsType:e})},gE,hE),aO=Oe(uE,(e,{resolve:t,reject:n})=>{let o=Wh()!=="light",c,g=Yi({url:"__uniappchooselocation",data:z.extend({},e,{locale:Kl()}),style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:b,detail:V}){b==="selected"&&(c=V)},onClose(){o&&s.navigator.setStatusBarStyle("dark"),c?t(c):n("cancel")}});o&&(s.navigator.setStatusBarStyle("light"),g.webview.addEventListener("popGesture",({type:b,result:V})=>{b==="start"?s.navigator.setStatusBarStyle("dark"):b==="end"&&!V&&s.navigator.setStatusBarStyle("light")}))},fE),sO=Oe(pE,(e,{resolve:t,reject:n})=>(Yi({url:"__uniappopenlocation",data:z.extend({},e,{locale:Kl()}),style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),mE,vE),Fc=!1,sc=0,lO=Oe(vy,(e,{resolve:t,reject:n})=>{sc=sc||s.geolocation.watchPosition(r=>{Fc=!0,at.invokeOnCallback(Ch,r.coords)},r=>{Fc||(n(r.message),Fc=!0),at.invokeOnCallback(Ah,{errMsg:`onLocationChange:fail ${r.message}`})},{coordsType:e==null?void 0:e.type}),N(t,100)},Ey,yy),cO=Oe(my,(e,{resolve:t})=>{sc&&(s.geolocation.clearWatch(sc),Fc=!1,sc=0),t()}),uO=gn(Ch,()=>{}),fO=Xr(_y,()=>{}),dO=gn(Ah,()=>{}),hO=Xr(by,()=>{}),gO=Oe(oS,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:o,confirmText:c,confirmColor:g,editable:b=!1,placeholderText:V=""}={},{resolve:T})=>{let D=n?[r,c]:[c],_e=b?V:D;t=t||" ",s.nativeUI[b?"prompt":"confirm"](t,Se=>{if(n){let Pe=Se.index===1,dt={confirm:Pe,cancel:Se.index===0||Se.index===-1};Pe&&b&&(dt.content=Se.value),T(dt)}else{let Pe={confirm:Se.index===0,cancel:!1};b&&(Pe.content=Se.value),T(Pe)}},e,_e,D)},aS,sS),pO={light:{itemColor:"#000000"},dark:{itemColor:"rgba(255, 255, 255, 0.8)"}},vO=Oe(Qy,({itemList:e=[],itemColor:t,title:n="",popover:r},{resolve:o,reject:c})=>{t==="#000"&&x.darkmode&&(t=pO[s.navigator.getUIStyle()].itemColor),kt();let{t:g}=ae(),b={title:n,cancel:g("uni.showActionSheet.cancel"),buttons:e.map(V=>({title:V,color:t}))};s.nativeUI.actionSheet(z.extend(b,{popover:r}),V=>{V.index>0?o({tapIndex:V.index-1}):c("showActionSheet:fail cancel")})},eS,tS),lc,ef=!1,Vc="",Uc,mO=Oe(nS,(e,t)=>Sg(z.extend({},e,{type:"loading",icon:"loading"}),t),rS,iS),Sg=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:o=!1,position:c,type:g="toast",style:b},{resolve:V,reject:T})=>{if($c(""),Vc=g,["top","center","bottom"].includes(String(c)))s.nativeUI.toast(e,{verticalAlign:c}),ef=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let D={modal:o,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?D.loading={display:"none"}:(D.width="140px",D.height="112px"),n?D.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&(D.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{lc=s.nativeUI.showWaiting(e,z.extend(D,b))}catch(_e){T(`${_e}`)}}return Vc==="toast"&&(Uc=N(()=>{$c("")},r)),V()},_O=Oe(lS,Sg,uS,fS),bO=Oe($y,(e,t)=>$c("toast",t)),EO=Oe(Uy,(e,t)=>$c("loading",t));function $c(e="toast",t){return e&&e!==Vc||(Uc&&(S(Uc),Uc=null),ef?s.nativeUI.closeToast():lc&&lc.close&&lc.close(),lc=null,ef=!1,Vc=""),t&&t.resolve()}let yO=Oe(dS,(e,{resolve:t,reject:n})=>{let r=zh();if(r&&r.endPullToRefresh(),r=Rc(),!r)return n();r.beginPullToRefresh(),zu(r),t()}),SO=Oe(hS,(e,{resolve:t,reject:n})=>{let r=zh()||Rc();if(!r)return n();r.endPullToRefresh(),zu(null),t()}),wO=Oe(Nh,(e,{resolve:t,reject:n})=>{let r=Fn(br());at.invokeViewMethod(Nh,e,r,o=>{o?n(o):t()})},Hy),CO=Oe(kh,(e,{resolve:t})=>{let n=Fn(br());at.invokeViewMethod(kh,e,n,t)},Zy,Xy),AO=Oe(Yy,({__page__:e,title:t},{resolve:n,reject:r})=>{let o=Hh(e);if(o){let c=o.getStyle();c&&c.titleNView&&o.setStyle({titleNView:{titleText:t}}),n()}else r()},qy),OO=Oe(Jy,(e,{resolve:t})=>{s.nativeUI.showWaiting("",{modal:!1}),t()}),TO=Oe(Ky,(e,{resolve:t})=>{s.nativeUI.closeWaiting(),t()});function PO(e){let t=In();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let IO=Oe(zy,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:o})=>{let c=Hh(e);if(c){let g={};t&&(g.titleColor=t),n&&(g.backgroundColor=n);let b=t==="#000000"?"dark":"light";s.navigator.setStatusBarStyle(b),PO(b);let V=c.getStyle();V&&V.titleNView&&(V.titleNView.autoBackButton&&(g.backButton=g.backButton||{},g.backButton.color=t),c.setStyle({titleNView:g})),r()}else o()},Gy,Wy),NO=Oe(xS,({index:e,text:t},{resolve:n,reject:r})=>{di.setTabBarBadge("text",e,t),n()},BS,MS),kO=Oe(gS,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:o,visible:c,iconfont:g},{resolve:b})=>{if(di.setTabBarItem(e,t,n,r,c,g),o){let V=x.tabBar.list[e];if(V){let T=V.pagePath,D=J.removeLeadingSlash(o);D!==T&&as(e,T,D)}}b()},pS,vS),RO=Oe(mS,(e={},{resolve:t,reject:n})=>{if(!tc())return n("not TabBar page");e.borderStyle=J.normalizeTabBarStyles(e.borderStyle),di.setTabBarStyle(e),t()},_S,ES),xO=Oe(yS,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!tc())return n("not TabBar page");di.hideTabBar(Boolean(r)),t()},Rh),BO=Oe(SS,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!tc())return n("not TabBar page");di.showTabBar(Boolean(r)),t()},wS),MO=Oe(TS,({index:e},{resolve:t,reject:n})=>{di.setTabBarBadge("redDot",e),t()},PS,IS),wg=e=>di.setTabBarBadge("none",e),LO=Oe(NS,({index:e},{resolve:t,reject:n})=>{wg(e),t()},kS,RS),DO=Oe(CS,({index:e},{resolve:t,reject:n})=>{wg(e),t()},AS,OS),Cg="vdSync",FO="__uniapp__service",kl="onWebviewReady",VO=0,UO="webviewInserted",$O="webviewRemoved",Ag="UniAppSubNVue";class HO{constructor(t,n){this.callbacks=[];let r=this.webview=s.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let o=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:g}){Yo("uni-tabview").setMask({color:g})}}:s.webview.getWebviewById(r.__uniapp_mask_id),c=function(){o.setStyle({mask:"none"})};r.addEventListener("hide",c),r.addEventListener("close",c)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===Ag){let o=r.data.target;o.id===this.webview.id&&o.isSub===this.isSub&&this.callbacks.forEach(c=>{c({origin:this.webview.__uniapp_host,data:r.data.data})})}};Yo("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){s.webview.postMessageToUniNView({type:Ag,data:t,target:{id:this.webview.id,isSub:!this.isSub}},FO)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let jO=function(e,t){return new HO(e,t)};function zO(e,t,n,r,o,c,g){s!==n&&(w=dn=e,f=t,s=n,$w(s.navigator.setStatusBarStyle),s.navigator.setStatusBarStyle=Fh,N=r,S=o,h=c,E=g),x.serviceReady=!0}function WO(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}function GO(e){z.extend(global,e)}let Og={oauth(e){s.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{t=t,e(t)})},share(e){s.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},payment(e){s.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},push(e){if(typeof f!="undefined"||typeof s!="undefined"){let t=s.push.getClientInfo();e(null,[t.id],[t])}else e(null,[])}},YO=Oe(LS,({service:e},{resolve:t,reject:n})=>{Og[e]?Og[e]((r,o=[],c=[])=>{r?n(r.message):t({service:e,provider:o,providers:c.map(g=>(typeof g.serviceReady=="boolean"&&(g.isAppExist=g.serviceReady),typeof g.nativeClient=="boolean"&&(g.isAppExist=g.nativeClient),g))})}):n("service not found")},DS),Hc;function cc(e){return new Promise((t,n)=>{s.oauth.getServices(r=>{let o=r.find(({id:c})=>c===e);o?t(o):n(new Error("provider not find"))},n)})}let Tg=Oe(FS,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",o=dr(n),c=r==="apple",g=c?{scope:"email"}:e.univerifyStyle?{univerifyStyle:KO(e.univerifyStyle,o)}:{};cc(r).then(b=>{function V(){if(e.onlyAuthorize&&r==="weixin"){b.authorize(({code:T})=>{t({code:T,authResult:""})},o);return}b.login(T=>{let D=T.target.authResult,_e=T.target.appleInfo;t({code:D.code,authResult:D,appleInfo:_e})},o,g)}c||r==="univerify"?V():b.logout(V,V)}).catch(o)},VS),Pg=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",o=dr(n);cc(r).then(c=>{c.getUserInfo(g=>{let b={nickName:""};if(r==="weixin"){let T=c.userInfo;T&&(b={openId:T.openid,nickName:T.nickname,gender:T.sex,city:T.city,province:T.province,country:T.country,avatarUrl:T.headimgurl,unionId:T.unionid})}else if(r==="apple"){let T=c.appleInfo;T&&(b={openId:T.user,fullName:T.fullName,email:T.email,authorizationCode:T.authorizationCode,identityToken:T.identityToken,realUserStatus:T.realUserStatus})}else b=c.userInfo,b&&(b.openId=b.openId||b.openid||c.authResult.openid,b.nickName=b.nickName||b.nickname,b.avatarUrl=b.avatarUrl||b.headimgurl);let V={};e.data&&e.data.api_name==="webapi_getuserinfo"?V.data={data:JSON.stringify(b),rawData:"",signature:"",encryptedData:"",iv:""}:V.userInfo=b,t(V)},o)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},qO=Oe(US,Pg,$S),JO=Oe(HS,Pg,jS),Ig=Oe(zS,({provider:e},{resolve:t,reject:n})=>{let r=Xs(t),o=dr(n);cc(e).then(c=>c.preLogin(r,o)).catch(o)},YS,GS),Ng=()=>cc("univerify").then(e=>e.closeAuthView()),kg=Lt(qS,Ng),Rg=Oe(JS,(e,{resolve:t,reject:n})=>{let r=Xs(t),o=dr(n);try{cc("univerify").then(c=>{let g=c.getCheckBoxState();r({state:g})})}catch(c){o(c)}});function KO(e,t){return z.isPlainObject(e)&&z.isPlainObject(e.buttons)&&z.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let o={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};z.isPlainObject(Hc)?Hc._triggerUniverifyButtonsClick(o):Ng().then(()=>{t(o)})}}),e}class ZO{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return kg()}login(t){return Tg(this._getOptions(t))}getCheckBoxState(t){return Rg(t)}preLogin(t){return Ig(this._getOptions(t))}onButtonsClick(t){at.on(this.eventName,t)}offButtonsClick(t){at.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){at.emit(this.eventName,t)}_getOptions(t={}){return z.extend({},t,{provider:this.provider})}}let XO=Lt(KS,()=>Hc||(Hc=new ZO)),QO=Oe(ow,(e,{resolve:t,reject:n})=>{let r=cg();if(r.notificationAuthorized!=="authorized")return n("notificationAuthorized: "+r.notificationAuthorized);let o=z.extend({},e);delete o.content,delete o.payload,s.push.createMessage(e.content,e.payload,o),t()},void 0,aw),eT=Lt("registerRuntime",e=>{z.extend(jsRuntime,e)}),tT={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},nT=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:o,href:c,imageUrl:g,mediaUrl:b,scene:V,miniProgram:T,openCustomerServiceChat:D,corpid:_e,customerUrl:Se}=e;z.isString(g)&&g&&(g=je(g));let Pe=tT[n];if(Pe){let dt={provider:t,type:Pe.name,title:r,content:o,href:c,pictures:[g],thumbs:g?[g]:void 0,media:b,miniProgram:T,extra:{scene:V},openCustomerServiceChat:D,corpid:_e,url:Se};return t==="weixin"&&(n===1||n===2)&&delete dt.thumbs,dt}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},xg=function(e,t,n,r,o="share"){let c=dr(r),g=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[g](t,()=>{n()},c)}catch(b){c({message:`${t.provider} ${g} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},rT=Oe(ZS,(e,{resolve:t,reject:n})=>{let r=nT(e),o=dr(n);if(z.isString(r))return n(r);s.share.getServices(c=>{let g=c.find(({id:b})=>b===r.provider);g?g.authenticated?xg(g,r,t,n):g.authorize(()=>xg(g,r,t,n),o):n("service not found")},o)},QS,XS),iT=Oe(ew,({type:e,imageUrl:t,summary:n,href:r},{resolve:o,reject:c})=>{let g=dr(c);z.isString(t)&&t&&(t=je(t)),s.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>o(),g)},nw,tw),oT=Oe(rw,(e,{resolve:t,reject:n})=>{let r=e.provider,o=dr(n);s.payment.getChannels(c=>{let g=c.find(({id:b})=>b===r);g?s.payment.request(g,e.orderInfo,b=>{t(b)},o):n("service not found")},o)},iw),Bg=eg,aT=Oe("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{Bg("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),Mg=[];function Lg(e){Mg.push(e)}let sT=Lg;function lT(e,t){Mg.forEach(n=>n(e,t))}function cT(e,t,...n){let r=dT(e,t,n);r&&console[e](r)}function uT(){return typeof __channelId__=="string"&&__channelId__}function fT(e,t){switch(z.toRawType(t)){case"Function":return"function() { [native code] }";default:return t}}function dT(e,t,n){return uT()?(n.push(t.replace("at ","uni-app:///")),console[e].apply(console,n)):n.map(function(o){let c=z.toTypeString(o).toLowerCase();if(["[object object]","[object array]","[object module]"].indexOf(c)!==-1)try{o="---BEGIN:JSON---"+JSON.stringify(o,fT)+"---END:JSON---"}catch(g){o=c}else if(o===null)o="---NULL---";else if(o===void 0)o="---UNDEFINED---";else{let g=z.toRawType(o).toUpperCase();g==="NUMBER"||g==="BOOLEAN"?o="---BEGIN:"+g+"---"+o+"---END:"+g+"---":o=String(o)}return o}).join("---COMMA---")+" "+t}let hT=1,tf,uc={};function Dg(e){if(typeof e=="function"){let t=Object.keys(uc).find(r=>uc[r]===e),n=t?parseInt(t):hT++;return uc[n]=e,n}else z.isPlainObject(e)&&Object.keys(e).forEach(t=>{e[t]=Dg(e[t])});return e}function gT(e,t,n,r){return rf(e,t,n,r)}function nf(){return tf||(tf=I.requireNativePlugin("UTS-Proxy")),tf}function Fg(e,t,n,r,o){if(!t)throw new Error("\u8FD4\u56DE\u503C\u4E3A\uFF1A"+JSON.stringify(t)+"\uFF1B\u8BF7\u6C42\u53C2\u6570\u4E3A\uFF1A"+JSON.stringify(e));if(z.isString(t))try{t=JSON.parse(t)}catch(c){throw new Error(`JSON.parse(${t}): `+c)}if(t.errMsg)throw new Error(t.errMsg);if(n&&n.type==="interface"&&typeof t.params=="number"){if(!t.params)return null;if(t.params===r&&o)return o;if(of[n.options]){let c=Hg(z.extend({instanceId:t.params},of[n.options]));return new c}}return t.params}function Vg(e){if(e.errMsg)throw new Error(e.errMsg);return delete e.errMsg,Fg(e,nf().invokeSync(e,()=>{}))}function rf(e,{moduleName:t,moduleType:n,package:r,class:o,name:c,method:g,companion:b,params:V,return:T,errMsg:D},_e,Se){let Pe=({id:gt,name:Ft,params:yt,keepAlive:vn})=>{let rn=uc[gt];rn?(rn(...yt),vn||delete uc[gt]):console.error(`${r}${o}.${c} ${Ft} is not found`)},dt=_e?{moduleName:t,moduleType:n,id:_e,name:c,method:V}:{moduleName:t,moduleType:n,package:r,class:o,name:g||c,companion:b,method:V};return(...gt)=>{if(D)throw new Error(D);let Ft=z.extend({},dt,{params:gt.map(yt=>Dg(yt))});return e?new Promise((yt,vn)=>{nf().invokeAsync(Ft,rn=>{rn.type!=="return"?Pe(rn):rn.errMsg?vn(rn.errMsg):yt(rn.params)})}):Fg(Ft,nf().invokeSync(Ft,Pe),T,_e,Se)}}function Ug(e,t){return t.main&&!t.method&&typeof s!="undefined"&&s.os.name==="iOS"&&(t.method="s_"+t.name),rf(e,t,0)}let pT=Ug;function $g(e,t){return z.hasOwn(t,e+"ByJs")?e+"ByJs":e}function vT(e){return typeof e=="undefined"}function mT(e){return!vT(e.instanceId)}function Hg(e){let{moduleName:t,moduleType:n,package:r,class:o,methods:c,props:g,errMsg:b}=e,V={moduleName:t,moduleType:n,package:r,class:o,errMsg:b},T,D=[],_e={},Se=[],Pe=!1;mT(e)?(Pe=!0,T=e.instanceId):(D=e.constructor.params,_e=e.staticMethods,Se=e.staticProps),typeof s!="undefined"&&s.os.name==="iOS"&&D.find(Ft=>Ft.type==="UTSCallback"||Ft.type.indexOf("JSONObject")>0)&&D.push({name:"_byJs",type:"boolean"});let dt=class{constructor(...yt){if(b)throw new Error(b);let vn={};if(Pe||(T=rf(!1,z.extend({name:"constructor",params:D},V),0).apply(null,yt)),!T)throw new Error(`new ${o} is failed`);let rn=new Proxy(this,{get(sn,ct){if(!vn[ct]){if(ct=$g(ct,c),z.hasOwn(c,ct)){let{async:yn,params:ln,return:Kt}=c[ct];vn[ct]=gT(!!yn,z.extend({name:ct,params:ln,return:Kt},V),T,rn)}else if(g.includes(ct))return Vg({moduleName:t,moduleType:n,id:T,name:ct,errMsg:b})}return vn[ct]}});return rn}},gt={};return new Proxy(dt,{get(Ft,yt,vn){if(yt=$g(yt,_e),z.hasOwn(_e,yt)){if(!gt[yt]){let{async:rn,params:sn,return:ct}=_e[yt];gt[yt]=Ug(!!rn,z.extend({name:yt,companion:!0,params:sn,return:ct},V))}return gt[yt]}return Se.includes(yt)?Vg(z.extend({name:yt,companion:!0},V)):Reflect.get(Ft,yt,vn)}})}function _T(e,t){return typeof s!="undefined"&&s.os.name==="Android"?"uts.sdk."+(t?"modules.":"")+e:""}function bT(e,t){return typeof s=="undefined"?"":jg(e,s.os.name==="iOS"?"IndexSwift":"IndexKt",t)}function jg(e,t,n){return typeof s=="undefined"?"":s.os.name==="Android"?t:s.os.name==="iOS"?"UTSSDK"+(n?"Modules":"")+z.capitalize(e)+z.capitalize(t):""}let of={};function ET(e,t){of[e]=t}let zg={};function yT(e,t){zg[e]=t}function ST(e){let t=zg[e];return t||console.error(`${e} is not found`),t}let So={load:"load",close:"close",error:"error",adClicked:"adClicked"};class Wg{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(So.load,t)}onClose(t){this._addEventListener(So.close,t)}onError(t){this._addEventListener(So.error,t)}offLoad(t){this._removeEventListener(So.load,t)}offClose(t){this._removeEventListener(So.close,t)}offError(t){this._removeEventListener(So.error,t)}_addEventListener(t,n){!z.isFunction(n)||(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],o=r.indexOf(n);o>-1&&r.splice(o,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class af extends Wg{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(So.load,{})}),r.onClose(o=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(So.close,o),this.preload===!0&&this._loadAd()}),r.onError(o=>{this._isLoading=!1;let c={code:o.code,errMsg:o.message};this._dispatchEvent(So.error,c);let g=new Error(JSON.stringify(c));this._loadPromiseReject!=null&&(this._loadPromiseReject(g),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(g),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(So.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class wT extends af{constructor(t){super(s.ad.createRewardedVideoAd(t),t);this._loadAd()}}let CT=Lt(sw,e=>new wT(e),cw,lw);class AT extends af{constructor(t){super(s.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let OT=Lt(uw,e=>new AT(e),dw,fw);class TT extends af{constructor(t){super(s.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let PT=Lt(hw,e=>new TT(e),pw,gw),wa={},tl={};function IT(e){let t=e.provider;if(wa[t]||(wa[t]={}),typeof wa[t].plugin=="object"){e.success(wa[t].plugin);return}if(tl[t]||(tl[t]=[]),tl[t].push(e),wa[t].status===!0){e.__plugin=wa[t].plugin;return}wa[t].status=!0;let n=Yo(t);if(!n||!n.initSDK){tl[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),tl[t].length=0,wa[t].status=!1;return}wa[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let o=r.code===1||r.code==="1";o?wa[t].plugin=n:wa[t].status=!1,tl[t].forEach(c=>{o?c.success(c.__plugin):c.fail(r)}),tl[t].length=0})}class NT extends Wg{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,N(()=>{this._init()})}_init(){this._adError="",IT({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(So.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(So.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(So.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(So.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let kT=Lt(vw,e=>new NT(e),_w,mw),Gg=s.os.name==="Android"&&parseInt(s.os.version)<6,RT=Gg?"slide-in-right":"pop-in",jc=300,Yg=Gg?"slide-out-right":"pop-out",xT="_www/__uniappview.html",BT="webviewId",MT="uniMPNativeEvent";function LT(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:x.defaultFontSize,viewport:x.viewport})}let DT=/^#[a-z0-9]{6}$/i;function FT(e){return e&&(DT.test(e)||e==="transparent")}function VT(e,t){let{backgroundColor:n}=t;!n||!FT(n)||(e.background?n=e.background:e.background=n,e.backgroundColorTop||(e.backgroundColorTop=n),e.backgroundColorBottom||(e.backgroundColorBottom=n),e.animationAlphaBGColor||(e.animationAlphaBGColor=n),typeof e.webviewBGTransparent=="undefined"&&(e.webviewBGTransparent=!0))}function UT(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=s.os.name==="iOS"?"appback":"none")}function $T(e,t){if(!t.enablePullDownRefresh)return;let n=ja(z.extend({},s.os.name==="Android"?jT:zT,t.pullToRefresh));e.pullToRefresh=HT(n,t)}function HT(e,t){let n=_r(e);if(!n)return e;let[r,o,c]=n;return(r||o||c)&&I.onLocaleChange(()=>{let g=s.webview.getWebviewById(t.id+"");if(!g)return;let b={support:!0};r&&(b.contentdown={caption:e.contentdown.caption}),o&&(b.contentover={caption:e.contentover.caption}),c&&(b.contentrefresh={caption:e.contentrefresh.caption}),g.setStyle({pullToRefresh:b})}),e}let jT={support:!0,style:"circle"},zT={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function WT(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let o={autoBackButton:r};Object.keys(n).forEach(c=>{let g=n[c];c==="titleImage"&&g?o.tags=YT(g):c==="buttons"&&z.isArray(g)?o.buttons=g.map((b,V)=>(b.onclick=qT(V),b)):o[c]=g}),e.titleNView=GT(o,t)}function GT(e,t){let n=Ln(e);if(!n)return e;let[r,o]=n;return(r||o)&&I.onLocaleChange(()=>{let c=s.webview.getWebviewById(t.id+"");if(!c)return;let g={};r&&(g.titleText=e.titleText),o&&(g.searchInput={placeholder:e.searchInput.placeholder}),c.setStyle({titleNView:g})}),e}function YT(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function qT(e){return function(n){n.index=e,Vn(J.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function qg(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(o=>{JT.indexOf(o)===-1&&(r[o]=t[o])}),n.id!=="1"&&LT(r,t,e),UT(r,t),VT(r,t),WT(r,t),$T(r,t),r}let JT=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],Jg=2;function Kg(){return Jg}function Zg(){return Jg++}function Xg(e){return e}function Qg(e,t){let n=t?J.stringifyQuery(t,Xg):"";return{path:e.slice(1),query:n&&n.slice(1)}}function KT(e,t,n){let r=n?J.stringifyQuery(n,Xg):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function ZT({path:e,query:t,routeOptions:n,webviewExtras:r}){let o=()=>qg(e,Hu(n.meta),{id:c+""}),c=Zg(),g=o();g.uniPageUrl=Qg(e,t),g.isTab=!!n.meta.isTabBar;let b=s.webview.create("",String(c),g,z.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r));return $h(b,o),b}let Di;function ep(e){Di=e}function XT(){return Di}function QT(){return(!Di||Di.__uniapp_route)&&(Di=s.webview.create(xT,String(Zg()),{contentAdjust:!1})),Di}function eP(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function tp(e){return x.realEntryPagePath&&e.$page.route===x.entryPagePath}function np(){x.entryPagePath=x.realEntryPagePath,delete x.realEntryPagePath,I.reLaunch({url:J.addLeadingSlash(x.entryPagePath)})}function tP(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=In(),o=r[r.length-2];t=nc;let c=o&&o.$page.statusBarStyle;c&&Da(c)}else if(n.type==="end"&&!n.result)Da(t);else if(n.type==="end"&&n.result){let r=In().length,o=wi();zr(),Da(),o&&r===1&&tp(o)?np():Vn(J.ON_SHOW)}})}function nP(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=at,o=(c,g)=>{if(t!==g)return;r(kl,o);let b=Ir(parseInt(g));b&&b.__page_container__.restore()};e.addEventListener("recovery",()=>{n(kl,o)})}function rP(e){let{emit:t}=at,n=function({width:r,height:o}){let g={deviceOrientation:Math.abs(s.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(o)}};t(J.ON_RESIZE,g,parseInt(e.id))};e.addEventListener("resize",J.debounce(n,50,{setTimeout:N,clearTimeout:S}))}let rp={pullToRefresh:J.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:J.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:J.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:J.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:J.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function iP(e){let t=parseInt(e.id);Object.keys(rp).forEach(n=>{let r=rp[n];e.addEventListener(n,o=>{r===J.ON_PULL_DOWN_REFRESH&&zu(e),Vn(t,r,o)})}),eP(e),rP(e),s.os.name==="iOS"&&(nP(e),tP(e))}function oP(e,t,n,r){let o=()=>qg(t,Hu(r),e),c=o();c.uniPageUrl=Qg(t,n);let g=!!r.isTabBar;r.isNVue?c.isTab=g:c.debugRefresh=KT(g,t,n),c.locale=f.requireModule("plus").getLanguage(),$h(e,o),e.setStyle(c)}function aP(e,t,n){(n.subNVues||[]).forEach(o=>{if(!o.path)return;let c=Ha(o.style||{}),g=o.type==="navigationBar",b=o.type==="popup";c.uniNView={path:o.path.replace(".nvue",".js"),defaultFontSize:x.defaultFontSize,viewport:x.viewport};let V={__uniapp_host:t,__uniapp_origin:c.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},T;g?(c.position="dock",c.dock="top",c.top="0",c.width="100%",c.height=String(J.NAVBAR_HEIGHT+Wu()),delete c.left,delete c.right,delete c.bottom,delete c.margin):b&&(c.position="absolute",tc(t)?T=di:T=e,V.__uniapp_mask=c.mask||"rgba(0,0,0,0.5)",V.__uniapp_mask_id=T.id),delete c.mask;let D=s.webview.create("",o.id,c,V);if(b){T.popupSubNVueWebviews||(T.popupSubNVueWebviews={}),T.popupSubNVueWebviews[D.id]=D;let _e=function(){T.setStyle({mask:"none"}),D.hide("auto")};T.addEventListener("maskClick",_e);let Se=!1;D.addEventListener("show",()=>{Se||(s.key.removeEventListener("backbutton",Li),s.key.addEventListener("backbutton",_e),Se=!0)}),D.addEventListener("hide",()=>{Se&&(s.key.removeEventListener("backbutton",_e),s.key.addEventListener("backbutton",Li),Se=!1)}),D.addEventListener("close",()=>{delete T.popupSubNVueWebviews[D.id],Se&&(s.key.removeEventListener("backbutton",_e),s.key.addEventListener("backbutton",Li),Se=!1)})}else e.append(D)})}function sP(e,t,n,r){(e.id==="1"||!r.isNVue)&&oP(e,t,n,r),aP(e,t,r),iP(e)}function ip(e){return e.routeOptions.meta.isNVue?ZT(e):Kg()===2?s.webview.getLaunchWebview():XT()}function op(e,t){at.once(kl+"."+e,t)}let Ca=!1;function ap(e,t,n){Ca={path:e,nvue:os(e).isNVue,callback:t}}function sp(e,t,n){ea(e),nl(e.$getAppWebview(),t,n)}function zc(e,t,n=!1){if(!n&&Ca)return console.error(`Waiting to navigate to: ${Ca.path}, do not operate continuously: ${e}.`);if(x.renderer==="native")return In().length===0?ap(e,t,"waitForReady"):t();let r=!Di||Di&&Di.__uniapp_route,o=Di&&!Di.loaded;r||o?ap(e,t,r?"waitForCreate":"waitForReady"):t(),o&&op(Di.id,Wc)}function Wc(){if(!Ca)return;let{callback:e}=Ca;return Ca=!1,e()}function lp(){if(x.renderer==="native")return Ca&&Ca.nvue?Wc():void 0;let e=QT();if(!!Ca){if(Ca.nvue)return Wc();e.loaded?Ca.callback():op(e.id,Wc)}}function nl(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function Gc(e,t,n,r,o){typeof o=="undefined"&&(o=e.nvue?0:100);let c=function(){c._called||(c._called=!0,r&&r(),lp())};c._called=!1,N(()=>{let g=N(()=>{c()},n+150);e.show(t,n,()=>{c._called||S(g),c()})},o)}function lP(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(o=>o.id.indexOf(BT)===0)||n[0];r.canBack(({canBack:o})=>{o?r.back():t()})}let cP=Oe(Ay,(e,{resolve:t,reject:n})=>{let r=wi();if(!r)return n("getCurrentPages is empty");if(Vn(r,J.ON_BACK_PRESS,{from:e.from||"navigateBack"}))return t();if(I.hideToast(),I.hideLoading(),r.$page.meta.isQuit)uP();else if(tp(r))np();else{let{delta:o,animationType:c,animationDuration:g}=e;fP(o,c,g)}return t()},Ty,Dy),Yc=0;function uP(){mt(),Yc?Date.now()-Yc<2e3&&s.runtime.quit():(Yc=Date.now(),s.nativeUI.toast(ae().t("uni.app.quit")),N(()=>{Yc=0},2e3))}function fP(e,t,n){let r=In(),o=r.length,c=r[o-1];e>1&&r.slice(o-e,o-1).reverse().forEach(V=>{nl(s.webview.getWebviewById(V.$page.id+""),"none",0)});let g=function(V){t?nl(V,t,n||jc):c.$page.openType==="redirectTo"?nl(V,Yg,jc):nl(V,"auto"),r.slice(o-e,o).forEach(T=>ea(T)),Da(),Vn(J.ON_SHOW)},b=s.webview.getWebviewById(c.$page.id+"");if(!c.__uniapp_webview)return g(b);lP(b,()=>{g(b)})}class dP extends J.UniNode{constructor(t,n,r=!1){super(J.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[J.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[J.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!z.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(o=>{let c=[this.addDict(o)],g=t[o];n?c.push(this.addDict(g)):c.push(g),r.push(c)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===J.ON_PAGE_SCROLL||t===J.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[J.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return pP(this,t.nodeId,n),t}onInsertBefore(t,n,r){return vP(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return mP(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&_P(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,o){t.parentNode&&bP(this,t.nodeId,n,r,o)}onRemoveEvent(t,n){t.parentNode&&EP(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&SP(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&wP(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&up(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&up(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case J.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case J.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==J.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,dn.queuePostFlushCb(this._update))}}restore(){this.clear(),this.setup(),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([VO,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){at.publishHandler(Cg,t,this.pageId)}fireEvent(t,n){let r=cp(t,this);r&&r.dispatchEvent(n)}}function hP(e){let t=Ir(e);return t?t.__page_container__:null}function sf(e,t,n){if(typeof n=="number"&&(n=hP(n)),n[e]===t)return n;let{childNodes:r}=n;for(let o=0;o<r.length;o++){let c=sf(e,t,r[o]);if(c)return c}return null}function cp(e,t){return sf("nodeId",e,t)}function gP(e,t){return sf("nodeName",e.toUpperCase(),t)}function pP(e,t,n){e.push([J.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function vP(e,t,n,r){let o=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([J.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(o).length?o:void 0)}function mP(e,t){e.push([J.ACTION_TYPE_REMOVE,t])}function _P(e,t,n,r){e.push([J.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function bP(e,t,n,r,o){e.push([J.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),o])}function EP(e,t,n){e.push([J.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function yP(e,t,n){return t==="style"&&z.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function SP(e,t,n,r){e.push([J.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),yP(e,n,r)])}function wP(e,t,n){e.push([J.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function up(e,t,n){e.push([J.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function CP(e,t,n){return new dP(e,t,n)}function fp(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:o,__pagePath:c,__pageQuery:g,__pageInstance:b}}=r,T=dn.getCurrentInstance().proxy;if(pt(T,b),$n(dp(o,T,b)),dn.onMounted(()=>{dn.nextTick(()=>{Vn(T,J.ON_READY)})}),dn.onBeforeUnmount(()=>{Vn(T,J.ON_UNLOAD)}),t)return t(g,r)},e}function dp(e,t,n){let r=()=>s.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new J.EventChannel(e)),n.eventChannel),t}function AP(e){return z.isFunction(e)}let hp=new Map;function OP(e,t){hp.set(e,J.once(PP(t)))}function TP(e,t,n,r,o){let c=CP(e,o,!0),g=qi(),b=hp.get(t)(),V=T=>g.mountPage(T,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},c);return z.isPromise(b)?b.then(T=>V(T)):V(b)}function PP(e){return()=>AP(e)?e().then(t=>fp(t)):fp(e)}let gp=!1;function pp(){if(gp)return;gp=!0;let e,t;if(f.requireModule("plus").getRedirectInfo){let{path:c,query:g,referrerInfo:b}=Ms();c&&(e=c,t=g),x.referrerInfo=b}else{let c=s.runtime.arguments;if(!c)return;try{let g=JSON.parse(c);e=g.path||g.pathName,t=g.query?"?"+g.query:""}catch(g){}}if(!e||e===x.entryPagePath){t&&(x.entryPageQuery=t);return}let r=J.addLeadingSlash(e),o=Wi(r);!o||(o.meta.isTabBar||(x.realEntryPagePath=x.realEntryPagePath||x.entryPagePath),x.entryPagePath=e,x.entryPageQuery=t)}function qc(e,t){let n=JSON.parse(JSON.stringify(Wi(e)));return n.meta=$a(n.meta),t!=="preloadPage"&&!x.realEntryPagePath&&(t==="reLaunch"||In().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let Aa={};function IP(e){let t=Object.keys(Aa).find(n=>Aa[n].id===e.id);t&&delete Aa[t]}function NP({url:e}){let t=Aa[e];return t&&(t.__page__&&In().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete Aa[e]),t}function kP({url:e,path:t,query:n}){if(!Aa[e]){let r=qc(t,"preloadPage");Aa[e]=ip({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return Aa[e]}function fc({url:e,path:t,query:n,openType:r,webview:o,nvuePageVm:c,eventChannel:g}){if(o&&pp(),Aa[e]){o=Aa[e];let Se=o;if(Se.__page__)if(In().find(Pe=>Pe===Se.__page__))o=void 0;else return g&&(Se.__page__.$page.eventChannel=g),r==="launch"?RP(e,t,n,Se,c,g):$n(Se.__page__),Se}let b=qc(t,r);o?(o=s.webview.getWebviewById(o.id),o.nvue=b.meta.isNVue):o=ip({path:t,routeOptions:b,query:n}),b.meta.id=parseInt(o.id),!!b.meta.isTabBar&&di.append(o),sP(o,t,n,b.meta);let T=t.slice(1);o.__uniapp_route=T;let D=da(r,e,n,b.meta,g,x.darkmode?s.navigator.getUIStyle():"light"),_e=parseInt(o.id);return o.nvue?c?BP(_e,c,D):vp(_e,o,D):TP(_e,T,n,D,xP(b)),o}function RP(e,t,n,r,o,c){let g=qc(t,"preloadPage");g.meta.id=parseInt(r.id);let b=da("preloadPage",e,n,g.meta,c,x.darkmode?s.navigator.getUIStyle():"light");pt(o,b),r.__page__=o}function xP({meta:e}){let t=Wu(),{platform:n,pixelRatio:r,windowWidth:o}=Rr();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:o,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:z.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:J.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+J.NAVBAR_HEIGHT:0,windowBottom:di.indexOf(e.route)>=0&&di.cover?di.height:0}}function BP(e,t,n){pt(t,n),$n(dp(e,t,n)),e===1&&(x.splashscreen&&x.splashscreen.autoclose&&!x.splashscreen.alwaysShowBeforeRender&&s.navigator.closeSplashscreen(),x.onReady(function(){lp()}))}function vp(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new J.EventChannel(e)),n.eventChannel},__setup(o,c){o.$getAppWebview=()=>t,o.getOpenerEventChannel=c.getOpenerEventChannel,pt(o,n),t.__preload__&&(t.__page__=o);let g=Hn(),b=g.findIndex(V=>V===c);b>-1&&g.splice(b,1,o)}};pt(r,n),t.__preload__?(t.__page__=r,t.addEventListener("show",()=>{Vn(t.__page__,J.ON_SHOW)}),t.addEventListener("hide",()=>{Vn(t.__page__,J.ON_HIDE)})):$n(r)}let mp=(e,{resolve:t,reject:n})=>{let{url:r,events:o,animationType:c,animationDuration:g}=e,{path:b,query:V}=J.parseUrl(r),[T,D]=DP(b,c,g);zc(b,()=>{LP({url:r,path:b,query:V,events:o,aniType:T,aniDuration:D}).then(t).catch(n)},e.openType==="appLaunch")},MP=Oe(Du,mp,Oy,xy);function LP({url:e,path:t,query:n,events:r,aniType:o,aniDuration:c}){Vn(J.ON_HIDE);let g=new J.EventChannel(Kg()+1,r);return new Promise(b=>{Gc(fc({url:e,path:t,query:n,openType:"navigateTo",eventChannel:g}),o,c,()=>{b({eventChannel:g})}),Da()})}function DP(e,t,n){let{globalStyle:r}=x,o=os(e);return[t||o.animationType||r.animationType||RT,n||o.animationDuration||r.animationDuration||jc]}let FP=Oe(Fu,({url:e},{resolve:t,reject:n})=>{let{path:r,query:o}=J.parseUrl(e);zc(r,()=>{VP({url:e,path:r,query:o}).then(t).catch(n)})},Py,By);function VP({url:e,path:t,query:n}){let r=wi();return r&&ea(r),new Promise(o=>{Gc(fc({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let c=r.$getAppWebview();c.__preload__&&IP(c),c.close("none")}o(void 0)}),Da()})}let UP=({url:e},{resolve:t,reject:n})=>{let{path:r,query:o}=J.parseUrl(e);zc(r,()=>{$P({url:e,path:r,query:o}).then(t).catch(n)})};function $P({url:e,path:t,query:n}){return new Promise(r=>{let o=Hn().slice(0);Ve.find(g=>g.path===t).meta.isTabBar&&di.switchTab(t.slice(1)),Gc(fc({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{o.forEach(g=>sp(g,"none")),r(void 0)}),Da()})}let HP=Oe(Th,UP,Iy,My),_p=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:o,query:c}=J.parseUrl(r);zc(o,()=>{zP({url:r,path:o,query:c}).then(t).catch(n)},e.openType==="appLaunch")},jP=Oe(Pc,_p,Ny,Ly);function zP({url:e,path:t,query:n}){di.switchTab(t.slice(1));let r=In(),o=r.length,c=!1,g=!1,b;o>=1&&(b=r[o-1],b&&!b.$.__isTabBar?(g=!0,r.reverse().forEach(T=>{!T.$.__isTabBar&&T!==b&&sp(T,"none")}),ea(b),N(()=>{b.$page.openType==="redirectTo"?nl(b.$getAppWebview(),Yg,jc):nl(b.$getAppWebview(),"auto")},100)):c=!0);let V;return Hn().forEach(T=>{J.addLeadingSlash(T.route)===t?(T.$.__isActive||(g=!0),T.$.__isActive=!0,V=T):T.$.__isTabBar&&(T.$.__isActive=!1)}),b===V&&(c=!1),b&&c&&Vn(b,J.ON_HIDE),new Promise(T=>{if(V){let D=V.$getAppWebview();D.show("none"),g&&!D.__preload__&&Vn(V,J.ON_SHOW),Da(),T(void 0)}else Gc(fc({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{Da(),T(void 0)},70)})}let WP=Lt(Ph,({url:e})=>{let t=NP({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},Ry),GP=Oe(Vu,({url:e},{resolve:t})=>{if(Aa[e])return;let n=e.split("?"),r=n[0],o=J.parseQuery(n[1]||""),c=kP({url:e,path:r,query:o}),g=qc(r,"preloadPage");g.meta.id=parseInt(c.id);let b=da("preloadPage",e,o,g.meta,void 0,x.darkmode?s.navigator.getUIStyle():"light");vp(parseInt(c.id),c,b),t({id:c.id,url:e,errMsg:"preloadPage:ok"})},ky);var YP={__proto__:null,$emit:a_,$off:o_,$on:r_,$once:i_,__log__:cT,addInterceptor:Ym,addPhoneContact:BC,arrayBufferToBase64:Tr,base64ToArrayBuffer:Ri,canIUse:Uw,canvasGetImageData:B_,canvasPutImageData:M_,canvasToTempFilePath:L_,checkIsSoterEnrolledInDevice:UC,checkIsSupportSoterAuthentication:VC,chooseImage:lA,chooseLocation:aO,chooseVideo:cA,clearStorage:Tw,clearStorageSync:Ow,closeAuthView:kg,closeBLEConnection:_C,closeBluetoothAdapter:fC,closePreviewImage:QC,closeSocket:OA,compressImage:oA,compressVideo:aA,configMTLS:EA,connectSocket:CA,createAnimation:tb,createBLEConnection:mC,createCanvasContext:x_,createFullScreenVideoAd:OT,createInnerAudioContext:HA,createInteractiveAd:kT,createIntersectionObserver:$_,createInterstitialAd:PT,createLivePusherContext:nO,createMapContext:__,createMediaQueryObserver:j_,createPushMessage:QO,createRewardedVideoAd:CT,createSelectorQuery:J_,createVideoContext:v_,downloadFile:pA,getAppAuthorizeSetting:cg,getAppBaseInfo:qh,getBLEDeviceCharacteristics:EC,getBLEDeviceRSSI:AC,getBLEDeviceServices:bC,getBackgroundAudioManager:QA,getBeacons:PC,getBluetoothAdapterState:dC,getBluetoothDevices:pC,getCheckBoxState:Rg,getClipboardData:MC,getConnectedBluetoothDevices:vC,getDeviceInfo:Yh,getEnterOptionsSync:wb,getFileInfo:Iw,getImageInfo:KC,getLaunchOptionsSync:Cb,getLocale:Kl,getLocation:oO,getNetworkType:rg,getProvider:YO,getPushClientId:Ab,getRecorderManager:nA,getSavedFileInfo:Dw,getSavedFileList:Lw,getScreenBrightness:WC,getSelectedTextRange:fb,getStorage:ww,getStorageInfo:Pw,getStorageInfoSync:Mh,getStorageSync:Sw,getSubNVueById:jO,getSystemInfo:Qw,getSystemInfoSync:Jh,getSystemSetting:qC,getUniverifyManager:XO,getUserInfo:qO,getUserProfile:JO,getVideoInfo:ZC,getWindowInfo:Gh,hideKeyboard:fA,hideLoading:EO,hideNavigationBarLoading:TO,hideTabBar:xO,hideTabBarRedDot:DO,hideToast:bO,initUTSClassName:jg,initUTSIndexClassName:bT,initUTSPackageName:_T,initUTSProxyClass:Hg,initUTSProxyFunction:pT,interceptors:Jm,invokePushCallback:Mu,loadFontFace:wO,login:Tg,makePhoneCall:kC,navigateBack:cP,navigateTo:MP,navigateToMiniProgram:aT,notifyBLECharacteristicValueChange:yC,offAccelerometerChange:oC,offAppHide:Sb,offAppShow:Eb,offCompassChange:tC,offError:_b,offKeyboardHeightChange:hA,offLocationChange:fO,offLocationChangeError:hO,offNetworkStatusChange:FC,offPageNotFound:vb,offPushMessage:Tb,offThemeChange:zC,offUnhandledRejection:gb,offWindowResize:ab,onAccelerometerChange:iC,onAppHide:yb,onAppShow:bb,onBLECharacteristicValueChange:cC,onBLEConnectionStateChange:lC,onBeaconServiceChange:TC,onBeaconUpdate:OC,onBluetoothAdapterStateChange:sC,onBluetoothDeviceFound:aC,onCompassChange:eC,onCreateVueApp:J.onCreateVueApp,onError:mb,onHostEventReceive:Lg,onKeyboardHeightChange:dA,onLocaleChange:lb,onLocationChange:uO,onLocationChangeError:dO,onNativeEventReceive:sT,onNetworkStatusChange:DC,onPageNotFound:pb,onPushMessage:Ob,onSocketClose:NA,onSocketError:PA,onSocketMessage:IA,onSocketOpen:TA,onTabBarMidButtonTap:nb,onThemeChange:jC,onUnhandledRejection:hb,onWindowResize:ob,openAppAuthorizeSetting:JC,openBluetoothAdapter:uC,openDocument:Vw,openLocation:sO,pageScrollTo:CO,preLogin:Ig,preloadPage:GP,previewImage:XC,reLaunch:HP,readBLECharacteristicValue:SC,redirectTo:FP,registerRuntime:eT,registerUTSInterface:ET,registerUTSPlugin:yT,removeInterceptor:qm,removeSavedFile:Fw,removeStorage:Aw,removeStorageSync:Cw,removeTabBarBadge:LO,request:bA,requestPayment:oT,requireGlobal:WO,requireNativePlugin:Yo,requireUTSPlugin:ST,restoreGlobal:zO,saveFile:xw,saveImageToPhotosAlbum:iA,saveVideoToPhotosAlbum:rA,scanCode:HC,sendHostEvent:Bg,sendNativeEvent:eg,sendSocketMessage:AA,setBLEMTU:CC,setClipboardData:LC,setKeepScreenOn:YC,setLocale:cb,setNavigationBarColor:IO,setNavigationBarTitle:AO,setPageMeta:ub,setScreenBrightness:GC,setStorage:yw,setStorageSync:Ew,setTabBarBadge:NO,setTabBarItem:kO,setTabBarStyle:RO,share:rT,shareWithSystem:iT,showActionSheet:vO,showKeyboard:uA,showLoading:mO,showModal:gO,showNavigationBarLoading:OO,showTabBar:BO,showTabBarRedDot:MO,showToast:_O,startAccelerometer:Xh,startBeaconDiscovery:IC,startBluetoothDevicesDiscovery:hC,startCompass:Kh,startLocationUpdate:lO,startPullDownRefresh:yO,startSoterAuthentication:$C,stopAccelerometer:Qh,stopBeaconDiscovery:NC,stopBluetoothDevicesDiscovery:gC,stopCompass:Zh,stopLocationUpdate:cO,stopPullDownRefresh:SO,switchTab:jP,syncDataToGlobal:GO,unPreloadPage:WP,uploadFile:RA,upx2px:$m,vibrateLong:rC,vibrateShort:nC,weexGetSystemInfoSync:ic,writeBLECharacteristicValue:wC};let qP=z.extend(U,{publishHandler:JP});function JP(e,t,n){t=JSON.stringify(t),z.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(o=>{let c=String(o),g=s.webview.getWebviewById(c);g&&g.evalJS(r.replace("__PAGE_ID__",c))})}function KP(){let{tabBar:e}=x;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=x;e.selectedIndex=0;let r=e.list.findIndex(o=>o.pagePath===n);di.init(e,(o,c)=>{I.switchTab({url:J.addLeadingSlash(o.pagePath),openType:"switchTab",from:"tabBar",success(){Vn(J.ON_TAB_ITEM_TAP,{index:c,text:o.text,pagePath:o.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&di.switchTab(n))}function ZP(){let e=s.globalEvent,t=f.requireModule("globalEvent"),{emit:n,publishHandler:r}=at;f.config.preload?s.key.addEventListener(Vo,Li):e.addEventListener("splashclosed",()=>{s.key.addEventListener(Vo,Li)}),e.addEventListener("pause",()=>{n(J.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let c=Ms();c&&c.userAction&&Bs(c),n(J.ON_APP_ENTER_FOREGROUND,Uo())}),t.addEventListener("uistylechange",function(c){let g={theme:c.uistyle};n(J.ON_THEME_CHANGE,g),r(J.ON_THEME_CHANGE,g,fa()),zw()});let o=0;e.addEventListener("KeyboardHeightChange",function(c){o!==c.height&&(o=c.height,n(J.ON_KEYBOARD_HEIGHT_CHANGE,{height:o}))}),t.addEventListener(MT,function(c){c&&c.event&&lT(c.event,c.data)}),e.addEventListener("plusMessage",bp),e.addEventListener("WebviewPostMessage",bp)}function bp({data:e}){e&&e.type&&at.subscribeHandler("plusMessage."+e.type,e.args)}function Ep(e,t,n=!1){at.subscribe("plusMessage."+e,t,n)}function XP(e){db(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=x,o=hs({path:t,query:n,referrerInfo:r});Vn(e,J.ON_LAUNCH,o),Vn(e,J.ON_SHOW,o);let c=f.requireModule("plus").getAppState;(c&&Number(c()))===2&&Vn(e,J.ON_HIDE,o)}function yp(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?s.io.convertLocalFileSystemURL(e):e}function QP(){let e=yp(fs),t=yp(Wr),n=t.split("/");n.pop();let r=n.join("/");s.io.resolveLocalFileSystemURL(s.io.convertAbsoluteFileSystem(r),o=>{o.createReader().readEntries(function(g){let b=g;b&&b.length&&b.forEach(function(V){V.isDirectory&&V.fullPath.indexOf(e)===0&&V.fullPath.indexOf(t)!==0&&V.removeRecursively()})})})}let Sp=0,Rl=0,Jc=null,rl=null;function eI(e,t){if(Jc=null,rl&&(S(rl),rl=null),e.type==="onFocus")if(Rl>0)e.detail.height=Rl;else{rl=N(function(){e.detail.height=Rl,t(e)},Sp),Jc=function(){rl&&(S(rl),rl=null),e.detail.height=Rl,t(e)};return}t(e)}function tI(){Sp=s.os.name.toLowerCase()==="android"?300:700,at.on(J.ON_KEYBOARD_HEIGHT_CHANGE,t=>{if(Rl=t.height,Rl>0){let n=Jc;Jc=null,n&&n()}})}function nI(e,t,n){let r=t.type;r==="onFocus"||r==="onBlur"?eI(t,o=>{n.fireEvent(e,o)}):n.fireEvent(e,t)}function rI(e,t){let n=Ir(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(o=>{switch(o[0]){case J.ACTION_TYPE_EVENT:nI(o[1],o[2],r);break}})}let wp={};function iI(e,t,n){let{adpid:r,width:o}=e,c=r+"-"+o,g=wp[c];if(g&&g.length>0){t(g.splice(0,1)[0]);return}s.ad.getAds(e,b=>{let V=b.ads;t(V.splice(0,1)[0]),wp[c]=g?g.concat(V):V},b=>{n({errCode:b.code,errMsg:b.message})})}function oI(){R("getAdData",(e,t)=>{iI(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let aI=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function sI(){aI.forEach(e=>{R(e,t=>{I[e](z.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let Cp=!1;function lI(e,t){let n=t==="1";if(!(n&&Cp)){if(n?(Cp=!0,ep(s.webview.getLaunchWebview())):Di||ep(s.webview.getWebviewById(t)),!Di.loaded){if(Di.id!==t)return console.error(`webviewReady[${Di.id}][${t}] not match`);Di.loaded=!0}at.emit(kl+"."+t),n&&cI()}}function cI(){let{autoclose:e,alwaysShowBeforeRender:t}=x.splashscreen;e&&!t&&s.navigator.closeSplashscreen();let n=J.addLeadingSlash(x.entryPagePath),r=Wi(n);if(!r.meta.isNVue){let o={url:n+(x.entryPageQuery||""),openType:"appLaunch"},c={resolve(){},reject(){}};return r.meta.isTabBar?_p(o,c):mp(o,c)}}function uI(e,t){let n=Ir(parseInt(t));n&&(n.__uniapp_webview=!0)}function fI(e,t){let n=Ir(parseInt(t));n&&delete n.__uniapp_webview}let dI=({name:e,arg:t},n)=>{e==="postMessage"?hI(n[0],t):I[e](z.extend(t,{fail(r){console.error(r.errMsg)}}))};function hI(e,t){let n=gP("web-view",parseInt(e));n&&n.dispatchEvent(J.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function gI({nodeId:e,ownerId:t,method:n,args:r},o){let c=cp(e,parseInt(o));if(!c)return;let g=pI(t,c.__vueParentComponent);!g||!g[n]||g[n](r)}function pI(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function vI(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=at;if(Ep("subscribeHandler",({type:r,data:o,pageId:c})=>{t(r,o,c)}),Ep(J.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:o})=>{dI(r,o)}),x.renderer!=="native"){e(kl,lI),e(Cg,rI),m(),oI(),sI(),e(UO,uI),e($O,fI),e(J.ON_WXS_INVOKE_CALL_METHOD,gI);let r=Wi(J.addLeadingSlash(x.entryPagePath));r&&!r.meta.isNVue&&n(kl,{},1)}}let xl,lf={globalData:{}};function mI({allowDefault:e=!1}={}){if(xl)return xl;if(e)return lf;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function _I(e){if(I.Vuex&&e.$store){let{useStore:t}=I.Vuex;I.Vuex.useStore=n=>n?t(n):e.$store}Ga(e),xl=e,ut(xl),z.extend(xl,lf),Et(xl,lf.globalData),we(),pp(),KP(),ZP(),tI(),vI(),XP(e),N(QP,1e4),x.ready=!0}var bI={uni:YP,getApp:mI,getCurrentPages:Er,__definePage:OP,__registerApp:_I,__registerPage:fc,UniServiceJSBridge:qP};return bI}(Nt,zt,w);Tt=Tt.default||Tt;let I=Tt.uni,St=Tt.getApp,In=Tt.getCurrentPages,at=Tt.UniServiceJSBridge;return Tt}var cv=sk(uk);var uv=f=>{};var fv=f=>{let{registerUTSInterface:s,initUTSProxyClass:p,initUTSProxyFunction:w,initUTSPackageName:N,initUTSIndexClassName:S,initUTSClassName:h}=f,E="DCloudUniExit",x="uni-exit",Ve="built-in",Nt="",zt=!0,Tt=N(E,zt),I=S(E,zt);f.exit=w(!1,{moduleName:x,moduleType:Ve,errMsg:Nt,main:!0,package:Tt,class:I,name:"exitByJs",params:[{name:"options",type:"UTSSDKModulesDCloudUniExitExitOptionsJSONObject",default:"UTSNull"}],return:""})};var dv=f=>{let{registerUTSInterface:s,initUTSProxyClass:p,initUTSProxyFunction:w,initUTSPackageName:N,initUTSIndexClassName:S,initUTSClassName:h}=f,E="DCloudUniFacialRecognitionVerify",x="FacialRecognitionVerify(\u5B9E\u4EBA\u8BA4\u8BC1)",Ve="built-in",Nt="",zt=!0,Tt=N(E,zt),I=S(E,zt);f.startFacialRecognitionVerify=w(!1,{moduleName:x,moduleType:Ve,errMsg:Nt,main:!0,package:Tt,class:I,name:"startFacialRecognitionVerifyByJs",params:[{name:"faceStyle",type:"UTSSDKModulesDCloudUniFacialRecognitionVerifyStartFacialRecognitionVerifyOptionsJSONObject"}],return:""}),f.getFacialRecognitionMetaInfo=w(!1,{moduleName:x,moduleType:Ve,errMsg:Nt,main:!0,package:Tt,class:I,name:"getFacialRecognitionMetaInfoByJs",params:[],return:""})};var hv=f=>{let{registerUTSInterface:s,initUTSProxyClass:p,initUTSProxyFunction:w,initUTSPackageName:N,initUTSIndexClassName:S,initUTSClassName:h}=f,E="DCloudUniFileManager",x="uni-file-manager",Ve="built-in",Nt="",zt=!0,Tt=N(E,zt),I=S(E,zt);s("FileSystemManagerOptions",Object.assign({moduleName:x,moduleType:Ve,errMsg:Nt,package:Tt,class:h(E,"FileSystemManagerByJsProxy",zt)},{methods:{readFileByJs:{async:!1,params:[{name:"config",type:"UTSSDKModulesDCloudUniFileManagerReadFileOptionsJSONObject"}],return:{}},writeFileByJs:{async:!1,params:[{name:"config",type:"UTSSDKModulesDCloudUniFileManagerWriteFileOptionsJSONObject"}],return:{}}},props:[]})),f.getFileSystemManager=w(!1,{moduleName:x,moduleType:Ve,errMsg:Nt,main:!0,package:Tt,class:I,name:"getFileSystemManagerByJs",params:[],return:{type:"interface",options:"FileSystemManagerOptions"}})};var gv=f=>{};var pv=f=>{};var vv=f=>{};var mv=f=>{};var _v=f=>{};var bv=f=>{};var Ev=f=>{};var yv=f=>{};var Sv=f=>{};var wv=f=>{};var Cv=f=>{};var Av=f=>{};var Ov=f=>{};var Tv=f=>{};var Pv=f=>{};function Iv(f){uv(f),fv(f),dv(f),hv(f),gv(f),pv(f),vv(f),mv(f),_v(f),bv(f),Ev(f),yv(f),Sv(f),wv(f),Cv(f),Av(f),Ov(f),Tv(f),Pv(f)}var If,Nf,kf,Va,Rf,xf,Bf;function Nv(){return Va?{__definePage:If,__registerApp:Nf,__registerPage:kf,uni:Va,wx:Va,getApp:Rf,getCurrentPages:xf,UniServiceJSBridge:Bf}:{}}function kv(f){let{weex:s,plus:p,VueShared:w}=f;return Va||({__definePage:If,__registerApp:Nf,__registerPage:kf,uni:Va,getApp:Rf,getCurrentPages:xf,UniServiceJSBridge:Bf}=lv(s,p,f),Va.VueShared=w,Iv(Va),Rp(Va)),{__definePage:If,__registerApp:Nf,__registerPage:kf,plus:p,uni:Va,wx:Va,getApp:Rf,getCurrentPages:xf,UniServiceJSBridge:Bf}}function Rv(f,s){let{__uniConfig:p}=s;if(!p)return;let w=s.weex;w.document.__$automator__=!!p.automator;let N=p.renderer!=="native"&&w.config.bundleUrl.indexOf("app-service.js")!==-1;if(Fi(s,Nv()),N?cv(s):(Lp(f,s),tv(s.Vue.parseClassStyles)),Fi(s,kv(s)),w.config.plus_web_id==="1"){let x=w.requireModule("plus");x.setDefaultFontSize&&x.setDefaultFontSize(Math.round(s.plus.screen.resolutionWidth/20))}let{scale:S,deviceWidth:h,platform:E}=global.WXEnvironment;if(E.toLowerCase()==="ios"){let x=Math.ceil(h/S);w.requireModule("meta").setViewport({width:x,roundOffDeviation:!1})}}var cl=class extends ll{constructor(s){super();this.nodeType=8;this.type="comment";this.value="";this.value=s}toString(){return"<!-- "+this.value+" -->"}};function wo(f,s=[]){return{module:"dom",method:f,args:s}}var Vl=class{constructor(s,p){this.id=s,this.batched=!1,this.updates=[],zn(p)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:p}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(s){return this.handler([wo("createFinish")],s)}updateFinish(s){return this.handler([wo("updateFinish")],s)}refreshFinish(s){return this.handler([wo("refreshFinish")],s)}createBody(s){let p=s.toJSON(),w=p.children;delete p.children;let N=[wo("createBody",[p])];return w&&N.push.apply(N,w.map(S=>wo("addElement",[p.ref,S,-1]))),this.addActions(N)}addElement(s,p,w){return w>=0||(w=-1),this.addActions(wo("addElement",[p,s.toJSON(),w]))}removeElement(s){if(Ii(s)){let p=s.map(w=>wo("removeElement",[w]));return this.addActions(p)}return this.addActions(wo("removeElement",[s]))}moveElement(s,p,w){return this.addActions(wo("moveElement",[s,p,w]))}setAttr(s,p,w){return this.addActions(wo("updateAttrs",[s,{[p]:w}]))}setStyle(s,p,w){return this.addActions(wo("updateStyle",[s,{[p]:w}]))}setStyles(s,p){return this.addActions(wo("updateStyle",[s,p]))}addEvent(s,p){return this.addActions(wo("addEvent",[s,p]))}removeEvent(s,p){return this.addActions(wo("removeEvent",[s,p]))}handler(s,p){return p&&p()}addActions(s){let p=this.updates,w=this.handler;if(Ii(s)||(s=[s]),this.batched)p.push.apply(p,s);else return w(s)}};var Mf={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function xv(f,s){let p=s||global.callNative;return zn(p)||console.error("[JS Runtime] no default handler"),function(N){Ii(N)||(N=[N]);for(let S=0;S<N.length;S++){let h=dk(f,N[S],p);if(h===-1)return h}}}function fk(f,s){return f==="dom"&&Mf[s]&&zn(global[Mf[s]])}function dk(f,s,p){let{module:w,method:N,args:S}=s;return fk(w,N)?global[Mf[N]](f,...S,"-1"):p(f,[s],"-1")}var du=class extends Zi{constructor(s){super();this.value=s,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var Bv={slider:{change:function(f){return{index:f.index,source:f.source}},scroll:function(f){return{offsetXRatio:f.offsetXRatio,offsetYRatio:f.offsetYRatio,drag:f.drag}}},"scroll-view":{scrollend:function(f){return{contentOffset:f.contentOffset}}}};function Mv(f){let{attr:s,offsetLeft:p,offsetTop:w}=f,N={};return s&&Object.keys(s).forEach(S=>{S.indexOf("data-")===0&&(N[S.replace("data-","")]=s[S])}),{id:s&&s.id||"",dataset:N,offsetLeft:p||0,offsetTop:w||0}}var hk=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],gk=["viewappear","viewdisappear"],pk={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function Lv(f,s){let p=f.type;if(gk.indexOf(p)!==-1)return f;let w=f.currentTarget,N=w.type.replace("u-","");if(hk.indexOf(N)!==-1)return f;let{timestamp:S,target:h}=f;if(!s){let Ve=Bv[N];Ve?zn(Ve[p])?s=Ve[p](f):s=f.detail||{}:s=f.detail||{}}let E={type:p,timeStamp:S,target:Mv(h),currentTarget:Mv(w),detail:s,touches:p==="touchend"||p==="panend"?[]:f.changedTouches,changedTouches:f.changedTouches};f.componentId&&(E.componentId=f.componentId);let x=pk[p];return x&&x.forEach(Ve=>{il(f,Ve)&&(E[Ve]=f[Ve])}),E}function vk(f,s){let p=s.attrs||{};for(let N in p)f.setAttr(N,p[N],!0);let w=s.style||{};for(let N in w)f.setStyle(N,w[N],!0)}var qo=class{constructor(s,p="",w){s=s?s.toString():"",this.id=s,this.URL=p,qp(s,this),this.nodeMap={};let N=qo.Listener||Vl;this.listener=new N(s,w||xv(s,qo.handler)),this.taskCenter=new Fl(s,w?(S,h)=>w(h):qo.handler),this.createDocumentElement()}getRef(s){return this.nodeMap[s]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let s=new Zi("document");s.docId=this.id,s.ownerDocument=this,s.role="documentElement",s.ref="_documentElement",this.nodeMap._documentElement=s,this.documentElement=s,Object.defineProperty(s,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:p=>{gf(this,p)}}),Object.defineProperty(s,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(p,w)=>{gf(this,p,w)}}),Qn("debug")&&Vi(`Create document element (id: "${s.docId}", ref: "${s.ref}")`)}return this.documentElement}createBody(s,p){if(!this.body){let w=new Zi(s,p);pf(this,w),Qn("debug")&&Vi(`[createBody](${this.id},${w.type},${w.ref}) (${JSON.stringify(w.toJSON(!0))}).`)}return this.body}createElement(s,p){let w=new Zi(s,p);return Qn("debug")&&Vi(`[createElement](${this.id},${w.type},${w.ref}) (${JSON.stringify(w.toJSON(!0))}).`),w}createComment(s){return new cl(s)}createText(s){return new du(s)}fireEvent(s,p,w,N,S){if(!s)return;w=w||{},w.type=w.type||p,w.target=s,w.currentTarget=s,w.timestamp=Date.now(),N&&vk(s,N);let h=!0,E=this.getRef("_root");if(E&&E.attr){let x=E.attr.bubble;h=x==="true"||x===!0||h&&x===void 0}return w=Lv(w),s.fireEvent(p,w,h,S)}destroy(){Qn("debug")&&Vi(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,Jp(this.id)}};qo.handler=null;var Dv={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function Fv(f,s,p){var w=[s];function N(h){var E=new RegExp;return E.compile(h.replace(/<([^>]+)>/g,function(x,Ve){return f[Ve]?(w.push(Ve),f[Ve]instanceof RegExp?"("+f[Ve].source+")":"("+N(f[Ve]).source+")"):""}),p),E}var S=N(f[s]);this.exec=function(h){var E=S.exec(h);if(E==null)return null;for(var x=new String(E[0]),Ve=0;Ve<w.length;Ve++)E[Ve]&&(x[w[Ve]]=E[Ve]);return x},Object.defineProperty(this,"lastIndex",{get:function(){return S.lastIndex},set:function(h){S.lastIndex=h}})}function mk(){var f=new Fv(Dv,"InputElementDiv","g"),s=new Fv(Dv,"InputElementRegExp","g"),p;Object.defineProperty(this,"source",{get:function(){return p},set:function(w){p=w,f.lastIndex=0,s.lastIndex=0}}),this.reset=function(){f.lastIndex=0,s.lastIndex=0},this.getNextToken=function(w){var N=f.lastIndex,S;w?S=f:S=s;var h=S.exec(p);if(h&&S.lastIndex-N>h.length)throw new SyntaxError("Unexpected token ILLEGAL");return f.lastIndex=S.lastIndex,s.lastIndex=S.lastIndex,h}}var Vv={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function vc(f,s){this.name=f,this.token=s,this.childNodes=[],this.toString=function(p){if(p||(p=""),this.childNodes.length==1)return this.childNodes[0].toString(p);for(var w=p+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,N=0;N<this.childNodes.length;N++)w+=this.childNodes[N].toString(p+"    ");return w}}function _k(){var f,s={Program:"$"},p={};function w(E){p[JSON.stringify(E)]=E;for(var x=Object.getOwnPropertyNames(E);x.length;){var Ve=x.shift();!Vv[Ve]||Vv[Ve].forEach(function(zt){E[zt[0]]||x.push(zt[0]);var Tt=E,I=null;zt.forEach(function(St){Tt[St]||(Tt[St]={}),I=Tt,Tt=Tt[St]}),E[Ve].$div&&(Tt.$div=!0),Tt.$reduce=Ve,Tt.$count=zt.length})}for(var Nt in E)typeof E[Nt]!="object"||Nt.charAt(0)=="$"||E[Nt].$closure||(p[JSON.stringify(E[Nt])]?E[Nt]=p[JSON.stringify(E[Nt])]:w(E[Nt]));E.$closure=!0}w(s);var N=[],S=[s],h=s;this.insertSymbol=function(x,Ve){for(;!h[x.name]&&h.$reduce;){for(var Nt=h.$count,zt=new vc(h.$reduce);Nt--;)zt.childNodes.push(N.pop()),S.pop();h=S[S.length-1],this.insertSymbol(zt)}if(h=h[x.name],N.push(x),S.push(h),!h)throw new Error;return h.$div},this.reset=function(){h=s,N=[],S=[s]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;h.$reduce;){for(var E=h.$count,x=new vc(h.$reduce);E--;)x.childNodes.push(N.pop()),S.pop();h=S[S.length-1],this.insertSymbol(x)}if(N.length>0&&h[";"])return this.insertSymbol(new vc(";",";")),this.grammarTree;if(N.length!=1||N[0].name!="Program")throw new Error}catch(Ve){throw new SyntaxError("Unexpected end of input")}return N[0]}})}function bk(){this.lexicalParser=new mk,this.syntacticalParser=new _k;var f=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],s={};f.forEach(function(p){Object.defineProperty(s,p,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(p,w){var N,S=!1;this.lexicalParser.source=p;for(var h=!1;N=this.lexicalParser.getNextToken(h);){w&&w(N);try{if(Object.getOwnPropertyNames(N).some(E=>s.hasOwnProperty(E)?(h=this.syntacticalParser.insertSymbol(new vc(E,N),S),S=!1,!0):!1))continue;(N.Keyword||N.Punctuator||N.DivPunctuator)&&s.hasOwnProperty(N.toString())&&(h=this.syntacticalParser.insertSymbol(new vc(N.toString(),N),S))}catch(E){throw new SyntaxError("Unexpected token "+N)}}return this.syntacticalParser.grammarTree}}var Uv=new bk;function Ek(f){Uv.reset(),this.tree=Uv.parse(f),this.paths=[];var s=Object.create(null),p=this,w=Object.create(null);this.isSimple,this.isConst,S(this.tree),N(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(x){for(var Ve=s,Nt=0;Nt<x.length-1;Nt++)Ve[x[Nt]]||(Ve[x[Nt]]=Object.create(null)),Ve=Ve[x[Nt]];return{isCompleted:function(){for(var zt in w)if(!w[zt])return!1;return!0},set:function(zt){if(w[x.join(".")]||(w[x.join(".")]=!0),Ve[x[Nt]]=zt,this.isCompleted())return p.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(f)}.call(s)}catch(x){}};function N(x){for(var Ve=x;Ve.childNodes.length<=1&&Ve.name!=="MemberExpression";)Ve=Ve.childNodes[0];Ve.name==="MemberExpression"?p.isSimple=!0:p.isSimple=!1}function S(x){if(x.name==="CallExpression"&&x.childNodes[x.childNodes.length-1].name!=="CallExpression"){var Ve=h(x.childNodes[1]);S(x.childNodes[0])}else if(x.name==="NewExpression"&&x.childNodes.length===1)var Ve=h(x.childNodes[0]);else if(x.name==="MemberExpression"&&x.childNodes.length===1)var Ve=h(x);else for(var Nt=0;Nt<x.childNodes.length;Nt++)S(x.childNodes[Nt])}function h(x){if(x.childNodes[0].name==="IdentifierName"){var Ve=h(x.childNodes[2]);return Ve&&(Ve=Ve.concat(x.childNodes[0].childNodes[0].token.toString())),E(Ve),Ve}else if(x.childNodes[0].name==="PrimaryExpression")if(x.childNodes[0].childNodes[0].name==="Identifier"){var Ve=[x.childNodes[0].childNodes[0].token.toString()];return E(Ve),Ve}else return null;else{if(x.childNodes[0].name==="]")return h(x.childNodes[3]),S(x.childNodes[1]),null;if(x.childNodes[0].name==="Arguments")return S(x.childNodes[0]),S(x.childNodes[1]),null;for(var Nt=0;Nt<x.childNodes.length;Nt++)S(x.childNodes[Nt])}}function E(x){for(var Ve=s,Nt=0;Nt<x.length-1;Nt++)Ve[x[Nt]]||(Ve[x[Nt]]=Object.create(null)),Ve=Ve[x[Nt]];p.paths.push(x),w[x.join(".")]=!1}}function ul(f){var s=f.childNodes.slice().reverse(),p=s.filter(x=>!x.token||!x.token.Punctuator);if(f.name==="UnaryExpression"&&s.length===2&&s[0].name==="-"&&p.length===1){var w=ul(p[0]);return w.value=-w.value,w}if(f.name==="Arguments"){for(var N=[],S=p[0];S;)S.childNodes.length===3&&(N.unshift(S.childNodes[0]),S=S.childNodes[2]),S.childNodes.length===1&&(N.unshift(S.childNodes[0]),S=null);return{type:"Arguments",children:N.map(x=>ul(x))}}if(p&&p.length===1){var w=ul(p[0]);return w}if(f.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(x=>f.token[x])){var h=Object.keys(f.token).filter(x=>x.match(/Literal/)||x.match(/Identifier/))[0],E={NullLiteral:null,BooleanLiteral:Boolean(f.token),NumericLiteral:Number(f.token),StringLiteral:f.token,Identifier:f.token}[h];return{type:h,value:E}}return f.name==="CallExpression"?{type:"CallExpression",children:[ul(s[0]),ul(s[1])]}:{type:s.filter(x=>x.token&&x.token.Punctuator)[0].name,children:s.filter(x=>!x.token||!x.token.Punctuator).map(x=>ul(x))}}function $v(f){var s=new Ek(f);return JSON.stringify(ul(s.tree),null)}function yk(f,s){return s==="bind"&&(f==="bindingx"||f==="binding")}function Hv(f){if(!f)return;try{f=JSON.parse(f)}catch(p){}let s={};if(hi(f)?s.origin=f:f&&(s.origin=f.origin,s.transformed=f.transformed),!(!s.transformed&&!s.origin))return s.transformed=s.transformed||$v(s.origin),s}function Sk(f){return f&&(f.exitExpression=Hv(f.exitExpression),f.props&&f.props.forEach(s=>{s.expression=Hv(s.expression)}),f)}function wk(f){return function(s={}){if(zn(f))return f({state:s.state==="end"?"exit":s.state,t:s.t!==void 0?s.t:s.deltaT})}}function jv(f,s,p){return p&&(yk(f,s)?function(w,N=function(){}){if(!w)throw new Error("should pass options for binding");return Sk(w),p(w,w&&w.eventType==="timing"?wk(N):N)}:p)}function Ck(f,s){Object.defineProperty(f,"[[CurrentInstanceId]]",{value:s})}function zv(f){return f["[[CurrentInstanceId]]"]}function Ak(f,s,p){let w=Lr(f);return!w||!zn(w.send)?(console.error(`[JS Framework] Failed to find taskCenter (${f}).`),null):(...N)=>w.send("module",{module:s,method:p},N)}function Ok(f,s,p,w){let N=Lr(f);return!N||!zn(N.send)?(console.error(`[JS Framework] Failed to find taskCenter (${f}).`),null):zn(w)?S=>N.send("module",{module:s,method:p},[S]):(console.error(`[JS Framework] ${s}.${p} must be assigned as a function.`),null)}var hu=class{constructor(s,p){Ck(this,String(s)),this.config=p||{},this.document=new qo(s,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=cu,this.isRegisteredComponent=Tf}requireModule(s){let p=zv(this);if(!(p&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${s}"), instance (${p}) doesn't exist anymore.`);return}if(!cu(s)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${s}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let w={},N=av(s);for(let S in N)Object.defineProperty(w,S,{enumerable:!0,configurable:!0,get:()=>jv(s,S,Ak(p,s,S)),set:h=>Ok(p,s,S,h)});return w}supports(s){if(!hi(s))return null;let p=s.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(p){let w=p[1],N=p[2],S=p[4];switch(w){case"module":return cu(N,S);case"component":return Tf(N)}}return null}importScript(s,p={}){let w=zv(this),N=Lr(w);return new Promise(function(S,h){if(!N||!zn(N.send))return h(new Error(`[JS Framework] Failed to import script "${s}", no taskCenter (${w}) matched.`));try{N.send("module",{module:"script",method:"importScript"},[s,p],{callback:[E=>S(E),E=>h(E)]})}catch(E){h(E)}})}};function Tk(f,s){let p=Object.create(null);return p.service=Object.create(null),Rs.forEach(({name:w,options:N})=>{let S=N.create;if(S)try{let h=S(f,s);Fi(p.service,h),Fi(p,h.instance)}catch(h){console.error(`[JS Runtime] Failed to create service ${w}.`)}}),delete p.service.instance,Ta(p.service),p}var Pk={uid:0},Ik=zp(hc),Nk=jp(hc);function Wv(f,s,p){let w=new hu(f,s),N="Vue",S=Tk(f,{weex:w,nvue:w,config:s,created:Date.now(),framework:N});Ta(S);let h=Object.create(null);return Fi(h,Dk(w)),Fi(h,S,{SharedObject:Pk,weex:w,nvue:w,requireModule:E=>w.requireModule(E),__WEEX_CALL_JAVASCRIPT__:Af,services:S}),h.plus=new h.WeexPlus(w),h.VueShared=hc,h.UniShared=Ik,h.VueReactivity=Nk,Rv(f,h),Ta(h),h}function kk(f,s,p={}){let w="Vue";p=df(p),p.env=df(global.WXEnvironment||{}),p.bundleType=w;let N=Wv(f,p);Rk(s,N)}function Rk(f,s){let p=[],w=[];for(let h in s)p.push(h),w.push(s[h]);let S="(function (global) { "+`
global = (function () {
  var g
  // This works in non-strict mode
  g = (function () {
    return this
  })()
  try {
    // This works if eval is allowed (see CSP)
    g = g || new Function("return this")()
  } catch (e) {
    // This works if the window reference is available
    if (typeof window === "object") g = window
  }
  return g
})() || global;
`+f+" })(Object.create(this))";return new Function(...p,S)(...w)}function xk(f){let s=rs(f);try{if(s&&s.body)return s.body.toJSON()}catch(p){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function Bk(f){Bp(f),Rs.forEach(s=>{let p=s.options.destroy;p&&p(f)})}function Mk(f){Mp(f),Rs.forEach(s=>{let p=s.options.refresh;p&&p(f)})}var Lk={createInstance:kk,createInstanceContext:Wv,getRoot:xk,getDocument:rs,registerService:uu,unregisterService:fu,callJS(f,s){return Af(f,s)},registerComponents:sv,registerModules:ov,destroyInstance:Bk,refreshInstance:Mk};function Lf(){return iv(),Lk}function Dk(f){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let s=f.requireModule("timer");return{setTimeout:(...w)=>{let N=function(){w[0](...w.slice(2))};return s.setTimeout(N,w[1]),f.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...w)=>{let N=function(){w[0](...w.slice(2))};return s.setInterval(N,w[1]),f.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:w=>{s.clearTimeout(w)},clearInterval:w=>{s.clearInterval(w)}}}var Gv={Document:qo,Element:Zi,Comment:cl,Listener:Vl,TaskCenter:Fl,sendTasks(...f){return zn(callNative)?callNative(...f):(global.callNative||(()=>{}))(...f)}};qo.handler=Gv.sendTasks;var fl=Gv;function Fk(){Ta(fl.Comment),Ta(fl.Listener),Ta(fl.Document.prototype),Ta(fl.Comment.prototype),Ta(fl.Listener.prototype)}var gu={service:{register:uu,unregister:fu,has:Pf},freezePrototype:Fk,init:Lf,config:fl};var Df=class{constructor(s,p={}){this.type=s||"message",this.data=p.data||null,this.origin=p.origin||"",this.source=p.source||null,this.ports=p.ports||[],this.target=null,this.timeStamp=Date.now()}};var xs={},mc={};function Ff(){}Ff.prototype.postMessage=function(f){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let s=xs[this.name];if(s&&s.length)for(let p=0;p<s.length;++p){let w=s[p];w._closed||w===this||zn(w.onmessage)&&w.onmessage(new Df("message",{data:f}))}};Ff.prototype.close=function(){if(!this._closed&&(this._closed=!0,xs[this.name])){let f=xs[this.name].filter(s=>s!==this);f.length?xs[this.name]=f:delete xs[this.name]}};var Yv={create:f=>{if(mc[f]=[],zn(global.BroadcastChannel))return{};let s={BroadcastChannel:function(p){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(p)}),this._closed=!1,this.onmessage=null,xs[this.name]||(xs[this.name]=[]),xs[this.name].push(this),mc[f].push(this)}};return s.BroadcastChannel.prototype=Ff.prototype,{instance:s}},destroy:f=>{mc[f]&&(mc[f].forEach(s=>s.close()),delete mc[f])}};function Vf(){let{init:f}=gu;gu.service.register("BroadcastChannel",Yv),gu.freezePrototype();let s=f();for(let p in s)global[p]=(...w)=>{let N=s[p](...w);return N instanceof Error&&console.error(N.toString()),N}}var pB=global.console;function qv(){if(Gp(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...f)=>{Qn("debug")&&global.nativeLog(..._c(f),"__DEBUG")},log:(...f)=>{Qn("log")&&global.nativeLog(..._c(f),"__LOG")},info:(...f)=>{Qn("info")&&global.nativeLog(..._c(f),"__INFO")},warn:(...f)=>{Qn("warn")&&global.nativeLog(..._c(f),"__WARN")},error:(...f)=>{Qn("error")&&global.nativeLog(..._c(f),"__ERROR")}};else{let{debug:f,log:s,info:p,warn:w,error:N}=console;console.__ori__={debug:f,log:s,info:p,warn:w,error:N},console.debug=(...S)=>{Qn("debug")&&console.__ori__.debug.apply(console,S)},console.log=(...S)=>{Qn("log")&&console.__ori__.log.apply(console,S)},console.info=(...S)=>{Qn("info")&&console.__ori__.info.apply(console,S)},console.warn=(...S)=>{Qn("warn")&&console.__ori__.warn.apply(console,S)},console.error=(...S)=>{Qn("error")&&console.__ori__.error.apply(console,S)}}}function _c(f){return f.map(s=>{if(Fa(s).toLowerCase()==="[object object]")try{s=JSON.stringify(s)}catch(w){s="[object object]"}else s=String(s);return s})}qv();Vf();})();
